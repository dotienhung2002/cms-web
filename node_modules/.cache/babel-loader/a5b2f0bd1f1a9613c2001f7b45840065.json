{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Reference from '../Reference';\nvar ReferenceSet = /*#__PURE__*/function () {\n  function ReferenceSet() {\n    _classCallCheck(this, ReferenceSet);\n    this.list = new Set();\n    this.refs = new Map();\n  }\n  _createClass(ReferenceSet, [{\n    key: \"size\",\n    get: function get() {\n      return this.list.size + this.refs.size;\n    }\n  }, {\n    key: \"describe\",\n    value: function describe() {\n      var description = [];\n      var _iterator = _createForOfIteratorHelper(this.list),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          description.push(item);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(this.refs),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            ref = _step2$value[1];\n          description.push(ref.describe());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return description;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return Array.from(this.list).concat(Array.from(this.refs.values()));\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(value) {\n      Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n    }\n  }, {\n    key: \"has\",\n    value: function has(value, resolve) {\n      if (this.list.has(value)) return true;\n      var item,\n        values = this.refs.values();\n      while (item = values.next(), !item.done) {\n        if (resolve(item.value) === value) return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var next = new ReferenceSet();\n      next.list = new Set(this.list);\n      next.refs = new Map(this.refs);\n      return next;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(newItems, removeItems) {\n      var next = this.clone();\n      newItems.list.forEach(function (value) {\n        return next.add(value);\n      });\n      newItems.refs.forEach(function (value) {\n        return next.add(value);\n      });\n      removeItems.list.forEach(function (value) {\n        return next.delete(value);\n      });\n      removeItems.refs.forEach(function (value) {\n        return next.delete(value);\n      });\n      return next;\n    }\n  }]);\n  return ReferenceSet;\n}();\nexport { ReferenceSet as default };","map":{"version":3,"names":["Reference","ReferenceSet","list","Set","refs","Map","size","description","item","push","ref","describe","Array","from","concat","values","value","isRef","set","key","add","delete","resolve","has","next","done","newItems","removeItems","clone","forEach"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/yup/es/util/ReferenceSet.js"],"sourcesContent":["import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n\n  describe() {\n    const description = [];\n\n    for (const item of this.list) description.push(item);\n\n    for (const [, ref] of this.refs) description.push(ref.describe());\n\n    return description;\n  }\n\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n\n  has(value, resolve) {\n    if (this.list.has(value)) return true;\n    let item,\n        values = this.refs.values();\n\n    while (item = values.next(), !item.done) if (resolve(item.value) === value) return true;\n\n    return false;\n  }\n\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}