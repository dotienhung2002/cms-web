{"ast":null,"code":"import Request from \"../helper/request\";\nimport Response from '../constants/models/responseInterface';\nimport api from '../constants/api';\n\nclass EmployeeService {\n  // static async updateUserInfo(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/user-update-info',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async updateProfile(data = {}) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: `/user/user-update-info`,\n  //       method: \"POST\",\n  //       data: data\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data || [], isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async changePassowrd(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/change-password',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async getDetail() {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: '/user/get-detail',\n  //       method: \"GET\"\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  static async getListEmployee(data) {\n    console.log(\"get list user\");\n    return new Promise(resolve => {\n      Request.send({\n        path: api.GET_LIST_EMPLOYEE.path,\n        method: api.GET_LIST_EMPLOYEE.method,\n        data\n      }).then(res => {\n        if (res) {\n          resolve(new Response({\n            data: res,\n            isSuccess: true\n          }));\n        } else {\n          resolve(new Response({\n            isSuccess: false,\n            error: res === null || res === void 0 ? void 0 : res.error\n          }));\n        }\n      });\n    });\n  }\n\n  static async CreateEmployee(data) {\n    return new Promise(resolve => {\n      Request.send({\n        path: api.EMPLOYEE_CREATE.path,\n        method: api.EMPLOYEE_CREATE.method,\n        data\n      }).then(res => {\n        if (res) {\n          resolve(new Response({\n            data: res,\n            isSuccess: true\n          }));\n        } else {\n          resolve(new Response({\n            isSuccess: false,\n            error: res === null || res === void 0 ? void 0 : res.error\n          }));\n        }\n      });\n    });\n  }\n\n  static async GetDetailEmployee(id) {\n    return new Promise(resolve => {\n      Request.send({\n        path: api.EMPLOYEE_GET_DETAIL.path + `/${id}`,\n        method: api.EMPLOYEE_GET_DETAIL.method\n      }).then(res => {\n        if (res) {\n          resolve(new Response({\n            data: res,\n            isSuccess: true\n          }));\n        } else {\n          resolve(new Response({\n            isSuccess: false,\n            error: res === null || res === void 0 ? void 0 : res.error\n          }));\n        }\n      });\n    });\n  }\n\n}\n\nexport default EmployeeService;","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/services/employeeService.tsx"],"names":["Request","Response","api","EmployeeService","getListEmployee","data","console","log","Promise","resolve","send","path","GET_LIST_EMPLOYEE","method","then","res","isSuccess","error","CreateEmployee","EMPLOYEE_CREATE","GetDetailEmployee","id","EMPLOYEE_GET_DETAIL"],"mappings":"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","sourcesContent":["import Request from \"../helper/request\";\nimport Response, { IResponse } from '../constants/models/responseInterface'\nimport api from '../constants/api'\nclass EmployeeService {\n  // static async updateUserInfo(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/user-update-info',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async updateProfile(data = {}) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: `/user/user-update-info`,\n  //       method: \"POST\",\n  //       data: data\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n\n  //           resolve(new Response({ data: res.data || [], isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async changePassowrd(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/change-password',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async getDetail() {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: '/user/get-detail',\n  //       method: \"GET\"\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  static async getListEmployee(data:any) {\n    console.log(\"get list user\");\n    \n    return new Promise<IResponse>(resolve => {\n      Request.send({\n        path: api.GET_LIST_EMPLOYEE.path,\n        method:api.GET_LIST_EMPLOYEE.method,\n        data\n      }).then((res: any) => {\n          if (res) {\n            resolve(new Response({ data: res, isSuccess: true }));\n          } else {\n            resolve(new Response({ isSuccess: false, error: res?.error }));\n          }\n        })\n    });\n  }\n  static async CreateEmployee(data:any) {\n    \n    return new Promise<IResponse>(resolve => {\n      Request.send({\n        path: api.EMPLOYEE_CREATE.path,\n        method:api.EMPLOYEE_CREATE.method,\n        data\n      }).then((res: any) => {\n          if (res) {\n            resolve(new Response({ data: res, isSuccess: true }));\n          } else {\n            resolve(new Response({ isSuccess: false, error: res?.error }));\n          }\n        })\n    });\n  }\n  static async GetDetailEmployee(id:number) {\n    \n    return new Promise<IResponse>(resolve => {\n      Request.send({\n        path: api.EMPLOYEE_GET_DETAIL.path+`/${id}`,\n        method:api.EMPLOYEE_GET_DETAIL.method,\n        \n      }).then((res: any) => {\n          if (res) {\n            resolve(new Response({ data: res, isSuccess: true }));\n          } else {\n            resolve(new Response({ isSuccess: false, error: res?.error }));\n          }\n        })\n    });\n  }\n}\n\n\nexport default EmployeeService;\n"]},"metadata":{},"sourceType":"module"}