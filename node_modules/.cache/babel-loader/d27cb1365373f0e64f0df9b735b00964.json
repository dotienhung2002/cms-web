{"ast":null,"code":"var _s = $RefreshSig$();\n\n//** React Imports\nimport { useState } from 'react'; // ** Configs\n\nimport themeConfig from '@Configs/themeConfig';\nexport const useNavbarType = () => {\n  _s();\n\n  // ** State\n  const [navbarType, setNavbarType] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.type;\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error);\n      return themeConfig.layout.navbar.type;\n    }\n  }); // ** Return a wrapped version of useState's setter function\n\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarType) : value; // ** Set state\n\n      setNavbarType(valueToStore);\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [navbarType, setValue];\n};\n\n_s(useNavbarType, \"k9NBAxGiXTkLy5ErTbAkjxmK/F8=\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/utility/hooks/useNavbarType.tsx"],"names":["useState","themeConfig","useNavbarType","navbarType","setNavbarType","layout","navbar","type","error","console","log","setValue","value","valueToStore","Function"],"mappings":";;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,MAAM;AACjD,QAAI;AACF,aAAOC,WAAW,CAACI,MAAZ,CAAmBC,MAAnB,CAA0BC,IAAjC;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAOP,WAAW,CAACI,MAAZ,CAAmBC,MAAnB,CAA0BC,IAAjC;AACD;AACF,GAR2C,CAA5C,CAFiC,CAYjC;;AACA,QAAMI,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAI;AACF;AACA,YAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACT,UAAD,CAAjC,GAAgDS,KAArE,CAFE,CAIF;;AACAR,MAAAA,aAAa,CAACS,YAAD,CAAb;AACD,KAND,CAME,OAAOL,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaA,SAAO,CAACL,UAAD,EAAaQ,QAAb,CAAP;AACD,CA3BM;;GAAMT,a","sourcesContent":["//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@Configs/themeConfig'\n\nexport const useNavbarType = () => {\n  // ** State\n  const [navbarType, setNavbarType] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarType) : value\n\n      // ** Set state\n      setNavbarType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarType, setValue]\n}\n"]},"metadata":{},"sourceType":"module"}