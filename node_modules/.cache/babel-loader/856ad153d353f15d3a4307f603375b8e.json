{"ast":null,"code":"// ** UseJWT import to get config\n// import useJwt from '@src/auth/jwt/useJwt'\n\n// const config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport var handleLogin = function handleLogin(data) {\n  return function (dispatch) {\n    try {\n      dispatch({\n        type: 'LOGIN',\n        data: data.information,\n        config: {},\n        accessToken: data.accessToken,\n        refreshToken: data.refreshToken\n      });\n\n      // ** Add to user, accessToken & refreshToken to localStorage\n      localStorage.setItem('userData', JSON.stringify(data));\n      localStorage.setItem('accessToken', JSON.stringify(data.accessToken));\n      localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken));\n    } catch (error) {\n      localStorage.clear();\n      window.location.href = \"/\";\n    }\n  };\n};\n\n// ** Handle User Logout\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    dispatch({\n      type: 'LOGOUT',\n      'accessToken': null,\n      'refreshToken': null\n    });\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  };\n};","map":{"version":3,"names":["handleLogin","data","dispatch","type","information","config","accessToken","refreshToken","localStorage","setItem","JSON","stringify","error","clear","window","location","href","handleLogout","removeItem"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/redux/actions/auth/index.js"],"sourcesContent":["// ** UseJWT import to get config\n// import useJwt from '@src/auth/jwt/useJwt'\n\n// const config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    try {\n      dispatch({\n        type: 'LOGIN',\n        data:data.information,\n        config: {},\n        accessToken: data.accessToken,\n        refreshToken: data.refreshToken\n      })\n  \n      // ** Add to user, accessToken & refreshToken to localStorage\n      localStorage.setItem('userData', JSON.stringify(data))\n      localStorage.setItem('accessToken', JSON.stringify(data.accessToken))\n      localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken))\n    \n     } catch (error) {\n      localStorage.clear()\n      window.location.href=\"/\"\n     }\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', 'accessToken': null, 'refreshToken': null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('refreshToken')\n  }\n}"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAGC,IAAI,EAAI;EACjC,OAAO,UAAAC,QAAQ,EAAI;IACjB,IAAI;MACFA,QAAQ,CAAC;QACPC,IAAI,EAAE,OAAO;QACbF,IAAI,EAACA,IAAI,CAACG,WAAW;QACrBC,MAAM,EAAE,CAAC,CAAC;QACVC,WAAW,EAAEL,IAAI,CAACK,WAAW;QAC7BC,YAAY,EAAEN,IAAI,CAACM;MACrB,CAAC,CAAC;;MAEF;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC,CAAC;MACtDO,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAACK,WAAW,CAAC,CAAC;MACrEE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAACM,YAAY,CAAC,CAAC;IAExE,CAAC,CAAC,OAAOK,KAAK,EAAE;MACfJ,YAAY,CAACK,KAAK,EAAE;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;IACzB;EACH,CAAC;AACH,CAAC;;AAED;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;EAChC,OAAO,UAAAf,QAAQ,EAAI;IACjBA,QAAQ,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAE,aAAa,EAAE,IAAI;MAAE,cAAc,EAAE;IAAK,CAAC,CAAC;;IAEvE;IACAK,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;IACnCV,YAAY,CAACU,UAAU,CAAC,aAAa,CAAC;IACtCV,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}