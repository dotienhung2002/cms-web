{"ast":null,"code":"import _objectSpread from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// ** Checks if an object is empty (returns boolean)\nexport var isObjEmpty=function isObjEmpty(obj){return Object.keys(obj).length===0;};// ** Returns K format from a number\nexport var kFormatter=function kFormatter(num){return num>999?\"\".concat((num/1000).toFixed(1),\"k\"):num;};// ** Converts HTML to string\nexport var htmlToString=function htmlToString(html){return html.replace(/<\\/?[^>]+(>|$)/g,'');};// ** Checks if the passed date is today\nvar isToday=function isToday(date){var today=new Date();return(/* eslint-disable operator-linebreak */date.getDate()===today.getDate()&&date.getMonth()===today.getMonth()&&date.getFullYear()===today.getFullYear()/* eslint-enable */);};/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */export var formatDate=function formatDate(value){var formatting=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{month:'short',day:'numeric',year:'numeric'};if(!value)return value;return new Intl.DateTimeFormat('en-US',formatting).format(new Date(value));};// ** Returns short month of passed date\nexport var formatDateToMonthShort=function formatDateToMonthShort(value){var toTimeForCurrentDay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var date=new Date(value);var formatting={month:'short',day:'numeric'};if(toTimeForCurrentDay&&isToday(date)){formatting={hour:'numeric',minute:'numeric'};}return new Intl.DateTimeFormat('en-US',formatting).format(new Date(value));};/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */export var isUserLoggedIn=function isUserLoggedIn(){return localStorage.getItem('userData');};export var getUserData=function getUserData(){return JSON.parse(localStorage.getItem('userData'));};/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */export var getHomeRouteForLoggedInUser=function getHomeRouteForLoggedInUser(userRole){if(userRole==='admin')return'/';if(userRole==='client')return'/access-control';return'/cms/login';};// ** React Select Theme Colors\nexport var selectThemeColors=function selectThemeColors(theme){return _objectSpread(_objectSpread({},theme),{},{colors:_objectSpread(_objectSpread({},theme.colors),{},{primary25:'#7367f01a',// for option hover bg-color\nprimary:'#7367f0',// for selected option bg-color\nneutral10:'#7367f0',// for tags bg-color\nneutral20:'#ededed',// for input border-color\nneutral30:'#ededed'// for input hover border-color\n})});};","map":{"version":3,"names":["isObjEmpty","obj","Object","keys","length","kFormatter","num","toFixed","htmlToString","html","replace","isToday","date","today","Date","getDate","getMonth","getFullYear","formatDate","value","formatting","month","day","year","Intl","DateTimeFormat","format","formatDateToMonthShort","toTimeForCurrentDay","hour","minute","isUserLoggedIn","localStorage","getItem","getUserData","JSON","parse","getHomeRouteForLoggedInUser","userRole","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/utility/Utils.js"],"sourcesContent":["// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return '/'\n  if (userRole === 'client') return '/access-control'\n  return '/cms/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}