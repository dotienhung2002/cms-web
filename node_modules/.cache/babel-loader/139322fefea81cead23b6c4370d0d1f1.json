{"ast":null,"code":"import{Fragment,useEffect}from'react';import{Row,Col,CardText}from'reactstrap';import Prism from'prismjs';import BreadCrumbs from'@Components/breadcrumbs';import Card from'@Components/card-snippet';import TooltipControlled from'./TooltipControlled';import TooltipUncontrolled from'./TooltipUncontrolled';import TooltipPositions from'./TooltipPositions';import{tooltipControlled,tooltipUncontrolled,tooltipPosition}from'./TooltipSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tooltips=function Tooltips(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Tooltips\",breadCrumbParent:\"Components\",breadCrumbActive:\"Tooltips\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Controlled Tooltip\",code:tooltipControlled,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"For controlled tooltips you'll have to manage state of component.controlled tooltips require\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"isOpen\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"toggle\"}),\" props to work.\"]}),/*#__PURE__*/_jsx(TooltipControlled,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Uncontrolled Tooltip\",code:tooltipUncontrolled,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"UncontrolledTooltip does not require\",/*#__PURE__*/_jsx(\"code\",{children:\"isOpen\"}),\" nor \",/*#__PURE__*/_jsx(\"code\",{children:\"toggle\"}),\" props to work.All you have to do is provide a valid target to tooltip.\"]}),/*#__PURE__*/_jsx(TooltipUncontrolled,{})]})})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Tooltip Positions\",code:tooltipPosition,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"placement\"}),\" to change position of tooltip.\"]}),/*#__PURE__*/_jsx(TooltipPositions,{})]})})})]});};export default Tooltips;","map":{"version":3,"names":["Fragment","useEffect","Row","Col","CardText","Prism","BreadCrumbs","Card","TooltipControlled","TooltipUncontrolled","TooltipPositions","tooltipControlled","tooltipUncontrolled","tooltipPosition","Tooltips","highlightAll"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/index.js"],"sourcesContent":["import { Fragment, useEffect } from 'react'\nimport { Row, Col, CardText } from 'reactstrap'\nimport Prism from 'prismjs'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport Card from '@Components/card-snippet'\nimport TooltipControlled from './TooltipControlled'\nimport TooltipUncontrolled from './TooltipUncontrolled'\nimport TooltipPositions from './TooltipPositions'\nimport { tooltipControlled, tooltipUncontrolled, tooltipPosition } from './TooltipSourceCode'\n\nconst Tooltips = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Tooltips' breadCrumbParent='Components' breadCrumbActive='Tooltips' />\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card title='Controlled Tooltip' code={tooltipControlled}>\n            <CardText>\n              For controlled tooltips you'll have to manage state of component.controlled tooltips require{' '}\n              <code>isOpen</code> and <code>toggle</code> props to work.\n            </CardText>\n            <TooltipControlled />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Uncontrolled Tooltip' code={tooltipUncontrolled}>\n            <CardText>\n              UncontrolledTooltip does not require<code>isOpen</code> nor <code>toggle</code> props to work.All you have\n              to do is provide a valid target to tooltip.\n            </CardText>\n            <TooltipUncontrolled />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm='12'>\n          <Card title='Tooltip Positions' code={tooltipPosition}>\n            <CardText className='mb-0'>\n              Use prop <code>placement</code> to change position of tooltip.\n            </CardText>\n            <TooltipPositions />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Tooltips\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,GAAG,CAAEC,GAAG,CAAEC,QAAQ,KAAQ,YAAY,CAC/C,MAAOC,MAAK,KAAM,SAAS,CAC3B,MAAOC,YAAW,KAAM,yBAAyB,CACjD,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,kBAAiB,KAAM,qBAAqB,CACnD,MAAOC,oBAAmB,KAAM,uBAAuB,CACvD,MAAOC,iBAAgB,KAAM,oBAAoB,CACjD,OAASC,iBAAiB,CAAEC,mBAAmB,CAAEC,eAAe,KAAQ,qBAAqB,yFAE7F,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrBb,SAAS,CAAC,UAAM,CACdI,KAAK,CAACU,YAAY,EAAE,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,MAAC,QAAQ,yBACP,KAAC,WAAW,EAAC,eAAe,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAG,cACpG,MAAC,GAAG,yBACF,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAEJ,iBAAkB,wBACvD,MAAC,QAAQ,2GACsF,GAAG,cAChG,gCAAmB,sBAAK,gCAAmB,qBAClC,cACX,KAAC,iBAAiB,IAAG,GAChB,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAEC,mBAAoB,wBAC3D,MAAC,QAAQ,gEAC6B,gCAAmB,sBAAK,gCAAmB,6EAEtE,cACX,KAAC,mBAAmB,IAAG,GAClB,EACH,GACF,cACN,KAAC,GAAG,wBACF,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAEC,eAAgB,wBACpD,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,oCACf,mCAAsB,qCACtB,cACX,KAAC,gBAAgB,IAAG,GACf,EACH,EACF,GACG,CAEf,CAAC,CACD,cAAeC,SAAQ"},"metadata":{},"sourceType":"module"}