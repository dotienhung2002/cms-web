{"ast":null,"code":"import _objectSpread from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"label\", \"hideIcon\", \"showIcon\", \"visible\", \"className\", \"htmlFor\", \"placeholder\", \"iconSize\", \"inputClassName\"];\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/input-password-toggle/index.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState } from 'react';\n\n// ** Third Party Components\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Eye, EyeOff } from 'react-feather';\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputPasswordToggle = function InputPasswordToggle(props) {\n  _s();\n  // ** Props\n  var label = props.label,\n    hideIcon = props.hideIcon,\n    showIcon = props.showIcon,\n    visible = props.visible,\n    className = props.className,\n    htmlFor = props.htmlFor,\n    placeholder = props.placeholder,\n    iconSize = props.iconSize,\n    inputClassName = props.inputClassName,\n    rest = _objectWithoutProperties(props, _excluded);\n\n  // ** State\n  var _useState = useState(visible),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputVisibility = _useState2[0],\n    setInputVisibility = _useState2[1];\n\n  // ** Renders Icon Based On Visibility\n  var renderIcon = function renderIcon() {\n    var size = iconSize ? iconSize : 14;\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : /*#__PURE__*/_jsxDEV(Eye, {\n        size: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 36\n      }, _this);\n    } else {\n      return showIcon ? showIcon : /*#__PURE__*/_jsxDEV(EyeOff, {\n        size: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, _this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [label ? /*#__PURE__*/_jsxDEV(Label, {\n      for: htmlFor,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, _this) : null, /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: classnames(_defineProperty({}, className, className)),\n      children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({\n        type: inputVisibility === false ? 'password' : 'text',\n        placeholder: placeholder ? placeholder : '············',\n        className: classnames(_defineProperty({}, inputClassName, inputClassName))\n        /*eslint-disable */\n      }, label && htmlFor ? {\n        id: htmlFor\n      } : {}), rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n        addonType: \"append\",\n        onClick: function onClick() {\n          return setInputVisibility(!inputVisibility);\n        },\n        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n          className: \"cursor-pointer\",\n          children: renderIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n_s(InputPasswordToggle, \"CP4M4NpEdDJ4VcmvhtakRhTfULA=\");\n_c = InputPasswordToggle;\nexport default InputPasswordToggle;\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label: function label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present');\n    }\n  },\n  htmlFor: function htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present');\n    }\n  }\n};\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n};\nvar _c;\n$RefreshReg$(_c, \"InputPasswordToggle\");","map":{"version":3,"names":["Fragment","useState","PropTypes","classnames","Eye","EyeOff","InputGroup","InputGroupAddon","Input","InputGroupText","Label","inputClassName","InputPasswordToggle","props","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","rest","inputVisibility","setInputVisibility","renderIcon","size","id","propTypes","node","bool","string","number","propName","componentName","Error","defaultProps"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/input-password-toggle/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}