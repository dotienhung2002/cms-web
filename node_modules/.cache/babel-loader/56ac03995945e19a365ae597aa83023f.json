{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/Import.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport XLSX from 'xlsx';\nimport Uppy from '@uppy/core';\nimport { X } from 'react-feather';\nimport { DragDrop } from '@uppy/react';\nimport Avatar from '@Components/avatar';\nimport { toast } from 'react-toastify';\nimport ExtensionsHeader from '@Components/extensions-header';\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap';\nimport 'uppy/dist/uppy.css';\nimport '@uppy/status-bar/dist/style.css';\nimport '@Styles/react/libs/file-uploader/file-uploader.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ErrorToast = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toastify-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        size: \"sm\",\n        color: \"danger\",\n        icon: /*#__PURE__*/_jsxDEV(X, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"toast-title\",\n        children: \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-muted\",\n      children: \"a second ago\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toastify-body\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"toast-text\",\n      children: [\"\\uD83D\\uDC4B You can only upload \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-bolder\",\n        children: \".xlsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-bolder\",\n        children: \".xls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" & \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-bolder\",\n        children: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 60\n      }, this), \" Files!.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = ErrorToast;\n\nconst Import = () => {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n  const uppy = new Uppy({\n    restrictions: {\n      maxNumberOfFiles: 1\n    },\n    autoProceed: true\n  });\n\n  const getTableData = (arr, name) => {\n    setTableData(arr);\n    setName(name);\n  };\n\n  uppy.on('complete', result => {\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      const fileData = reader.result;\n      const wb = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      wb.SheetNames.forEach(function (sheetName) {\n        const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);\n        getTableData(rowObj, result.successful[0].data.name);\n      });\n    };\n\n    if (result.successful[0].extension === 'xlsx') {\n      reader.readAsBinaryString(result.successful[0].data);\n    } else {\n      toast.error( /*#__PURE__*/_jsxDEV(ErrorToast, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), {\n        hideProgressBar: true\n      });\n    }\n  });\n\n  const handleFilter = e => {\n    const data = tableData;\n    let filteredData = [];\n    const value = e.target.value;\n    setValue(value);\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const keys = Object.keys(col);\n        const startsWithCondition = keys.filter(key => {\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase());\n        });\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()));\n        if (startsWithCondition.length) return col[startsWithCondition];else if (!startsWithCondition && includesCondition.length) return col[includesCondition];else return null;\n      });\n      setFilteredData(filteredData);\n      setValue(value);\n    } else {\n      return null;\n    }\n  };\n  /*eslint-disable */\n\n\n  const headArr = tableData.length ? tableData.map((col, index) => {\n    if (index === 0) return [...Object.keys(col)];else return null;\n  }) : [];\n  /*eslint-enable */\n\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null;\n\n  const renderTableBody = () => {\n    if (dataArr !== null && dataArr.length) {\n      return dataArr.map((col, index) => {\n        const keys = Object.keys(col);\n        const renderTd = keys.map((key, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: col[key]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 51\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderTd\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      });\n    } else {\n      return null;\n    }\n  };\n\n  const renderTableHead = () => {\n    if (headArr.length) {\n      return headArr[0].map((head, index) => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          children: head\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this);\n      });\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExtensionsHeader, {\n      title: \"XLSX\",\n      subTitle: \"Xlsx is a parser and writer for various spreadsheet formats\",\n      link: \"https://github.com/AdeleD/react-paginate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"import-component\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"12\",\n                children: /*#__PURE__*/_jsxDEV(DragDrop, {\n                  uppy: uppy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), tableData.length ? /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"justify-content-between flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h4\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"search-input\",\n                className: \"mr-1\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"search-input\",\n                type: \"text\",\n                bsSize: \"sm\",\n                value: value,\n                onChange: e => handleFilter(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table-hover-animation\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: renderTableHead()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: renderTableBody()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Import, \"/FfiQaeEQXLR8ejujXmcjj1F+R4=\");\n\n_c2 = Import;\nexport default Import;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorToast\");\n$RefreshReg$(_c2, \"Import\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/Import.js"],"names":["Fragment","useState","XLSX","Uppy","X","DragDrop","Avatar","toast","ExtensionsHeader","Row","Col","Card","CardBody","Table","CardHeader","CardTitle","Input","Label","ErrorToast","Import","tableData","setTableData","filteredData","setFilteredData","value","setValue","name","setName","uppy","restrictions","maxNumberOfFiles","autoProceed","getTableData","arr","on","result","reader","FileReader","onload","fileData","wb","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","successful","data","extension","readAsBinaryString","error","hideProgressBar","handleFilter","e","target","length","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","headArr","map","index","dataArr","renderTableBody","renderTd","renderTableHead","head"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react'\nimport XLSX from 'xlsx'\nimport Uppy from '@uppy/core'\nimport { X } from 'react-feather'\nimport { DragDrop } from '@uppy/react'\nimport Avatar from '@Components/avatar'\nimport { toast } from 'react-toastify'\nimport ExtensionsHeader from '@Components/extensions-header'\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap'\n\nimport 'uppy/dist/uppy.css'\nimport '@uppy/status-bar/dist/style.css'\nimport '@Styles/react/libs/file-uploader/file-uploader.scss'\n\nconst ErrorToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      <small className='text-muted'>a second ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 You can only upload <span className='font-weight-bolder'>.xlsx</span>,{' '}\n        <span className='font-weight-bolder'>.xls</span> & <span className='font-weight-bolder'>.csv</span> Files!.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Import = () => {\n  const [tableData, setTableData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n  const [value, setValue] = useState('')\n  const [name, setName] = useState('')\n\n  const uppy = new Uppy({\n    restrictions: { maxNumberOfFiles: 1 },\n    autoProceed: true\n  })\n\n  const getTableData = (arr, name) => {\n    setTableData(arr)\n    setName(name)\n  }\n\n  uppy.on('complete', result => {\n    const reader = new FileReader()\n    reader.onload = function () {\n      const fileData = reader.result\n      const wb = XLSX.read(fileData, { type: 'binary' })\n\n      wb.SheetNames.forEach(function (sheetName) {\n        const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\n        getTableData(rowObj, result.successful[0].data.name)\n      })\n    }\n    if (result.successful[0].extension === 'xlsx') {\n      reader.readAsBinaryString(result.successful[0].data)\n    } else {\n      toast.error(<ErrorToast />, { hideProgressBar: true })\n    }\n  })\n\n  const handleFilter = e => {\n    const data = tableData\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const keys = Object.keys(col)\n\n        const startsWithCondition = keys.filter(key => {\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\n        })\n\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    } else {\n      return null\n    }\n  }\n  /*eslint-disable */\n  const headArr = tableData.length\n    ? tableData.map((col, index) => {\n        if (index === 0) return [...Object.keys(col)]\n        else return null\n      })\n    : []\n  /*eslint-enable */\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\n\n  const renderTableBody = () => {\n    if (dataArr !== null && dataArr.length) {\n      return dataArr.map((col, index) => {\n        const keys = Object.keys(col)\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\n        return <tr key={index}>{renderTd}</tr>\n      })\n    } else {\n      return null\n    }\n  }\n\n  const renderTableHead = () => {\n    if (headArr.length) {\n      return headArr[0].map((head, index) => {\n        return <th key={index}>{head}</th>\n      })\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/AdeleD/react-paginate'\n      />\n      <Row className='import-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col sm='12'>\n                  <DragDrop uppy={uppy} />\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        {tableData.length ? (\n          <Col sm='12'>\n            <Card>\n              <CardHeader className='justify-content-between flex-wrap'>\n                <CardTitle tag='h4'>{name}</CardTitle>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='mr-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </CardHeader>\n              <Table className='table-hover-animation' responsive>\n                <thead>\n                  <tr>{renderTableHead()}</tr>\n                </thead>\n                <tbody>{renderTableBody()}</tbody>\n              </Table>\n            </Card>\n          </Col>\n        ) : null}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Import\n"]},"metadata":{},"sourceType":"module"}