{"ast":null,"code":"import axios from 'axios'; // ** GET Mails\n\nexport const getMails = params => {\n  return dispatch => {\n    return axios.get('/apps/email/emails', {\n      params\n    }).then(res => {\n      dispatch({\n        type: 'GET_MAILS',\n        data: res.data,\n        params\n      });\n    });\n  };\n}; // ** UPDATE Mails\n\nexport const updateMails = (emailIds, dataToUpdate) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails', {\n      emailIds,\n      dataToUpdate\n    }).then(res => {\n      dispatch({\n        type: 'UPDATE_MAILS',\n        emailIds,\n        dataToUpdate,\n        data: res.data\n      });\n      dispatch(getMails(getState().email.params));\n    });\n  };\n}; // ** Update Mail Label\n\nexport const updateMailLabel = (emailIds, label) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails-label', {\n      emailIds,\n      label\n    }).then(res => {\n      dispatch({\n        type: 'UPDATE_MAIL_LABEL',\n        data: res.data\n      });\n      dispatch(getMails(getState().email.params));\n    });\n  };\n}; // ** GET Next/Prev mail\n\nexport const paginateMail = (dir, emailId) => {\n  return dispatch => {\n    return axios.get('/apps/email/paginate-email', {\n      params: {\n        dir,\n        emailId\n      }\n    }).then(res => {\n      dispatch({\n        type: 'PAGINATE_MAIL',\n        data: res.data\n      });\n    });\n  };\n}; // ** SELECT Current Mail\n\nexport const selectCurrentMail = id => dispatch => {\n  return axios.get('/apps/email/get-email', {\n    id\n  }).then(res => {\n    dispatch({\n      type: 'SELECT_CURRENT_MAIL',\n      mail: res.data\n    });\n  });\n}; // ** SELECT Mail\n\nexport const selectMail = id => dispatch => dispatch({\n  type: 'SELECT_MAIL',\n  id\n}); // ** SELECT All Mails\n\nexport const selectAllMail = val => dispatch => dispatch({\n  type: 'SELECT_ALL_MAIL',\n  val\n}); // ** RESET Selected Mails\n\nexport const resetSelectedMail = () => dispatch => dispatch({\n  type: 'RESET_SELECT_MAILS'\n});","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/email/store/actions/index.js"],"names":["axios","getMails","params","dispatch","get","then","res","type","data","updateMails","emailIds","dataToUpdate","getState","post","email","updateMailLabel","label","paginateMail","dir","emailId","selectCurrentMail","id","mail","selectMail","selectAllMail","val","resetSelectedMail"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n// ** GET Mails\nexport const getMails = params => {\n  return dispatch => {\n    return axios.get('/apps/email/emails', { params }).then(res => {\n      dispatch({ type: 'GET_MAILS', data: res.data, params })\n    })\n  }\n}\n\n// ** UPDATE Mails\nexport const updateMails = (emailIds, dataToUpdate) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails', { emailIds, dataToUpdate }).then(res => {\n      dispatch({ type: 'UPDATE_MAILS', emailIds, dataToUpdate, data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** Update Mail Label\nexport const updateMailLabel = (emailIds, label) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails-label', { emailIds, label }).then(res => {\n      dispatch({ type: 'UPDATE_MAIL_LABEL', data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** GET Next/Prev mail\nexport const paginateMail = (dir, emailId) => {\n  return dispatch => {\n    return axios.get('/apps/email/paginate-email', { params: { dir, emailId } }).then(res => {\n      dispatch({ type: 'PAGINATE_MAIL', data: res.data })\n    })\n  }\n}\n\n// ** SELECT Current Mail\nexport const selectCurrentMail = id => dispatch => {\n  return axios.get('/apps/email/get-email', { id }).then(res => {\n    dispatch({ type: 'SELECT_CURRENT_MAIL', mail: res.data })\n  })\n}\n\n// ** SELECT Mail\nexport const selectMail = id => dispatch => dispatch({ type: 'SELECT_MAIL', id })\n\n// ** SELECT All Mails\nexport const selectAllMail = val => dispatch => dispatch({ type: 'SELECT_ALL_MAIL', val })\n\n// ** RESET Selected Mails\nexport const resetSelectedMail = () => dispatch => dispatch({ type: 'RESET_SELECT_MAILS' })\n"]},"metadata":{},"sourceType":"module"}