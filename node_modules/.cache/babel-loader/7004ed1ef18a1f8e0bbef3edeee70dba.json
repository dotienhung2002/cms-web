{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/tables/data-tables/advance/TableServerSide.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'; // ** Table Columns\n\nimport { serverSideColumns } from '../data'; // ** Store & Actions\n\nimport { getData } from '../store/actions';\nimport { useSelector, useDispatch } from 'react-redux'; // ** Third Party Components\n\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport DataTable from 'react-data-table-component';\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableServerSide = () => {\n  _s();\n\n  // ** Store Vars\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.dataTables); // ** States\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(7);\n  const [searchValue, setSearchValue] = useState(''); // ** Get data on mount\n\n  useEffect(() => {\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      q: searchValue\n    }));\n  }, [dispatch]); // ** Function to handle filter\n\n  const handleFilter = e => {\n    setSearchValue(e.target.value);\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      q: e.target.value\n    }));\n  }; // ** Function to handle Pagination and get data\n\n\n  const handlePagination = page => {\n    dispatch(getData({\n      page: page.selected + 1,\n      perPage: rowsPerPage,\n      q: searchValue\n    }));\n    setCurrentPage(page.selected + 1);\n  }; // ** Function to handle per page\n\n\n  const handlePerPage = e => {\n    dispatch(getData({\n      page: currentPage,\n      perPage: parseInt(e.target.value),\n      q: searchValue\n    }));\n    setRowsPerPage(parseInt(e.target.value));\n  }; // ** Custom Pagination\n\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0));\n    return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: '',\n      nextLabel: '',\n      breakLabel: \"...\",\n      pageCount: count || 1,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 2,\n      activeClassName: \"active\",\n      forcePage: currentPage !== 0 ? currentPage - 1 : 0,\n      onPageChange: page => handlePagination(page),\n      pageClassName: 'page-item',\n      nextLinkClassName: 'page-link',\n      nextClassName: 'page-item next',\n      previousClassName: 'page-item prev',\n      previousLinkClassName: 'page-link',\n      pageLinkClassName: 'page-link',\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: 'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }; // ** Table data to render\n\n\n  const dataToRender = () => {\n    const filters = {\n      q: searchValue\n    };\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Server Side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-0 mt-1 mb-50\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"sort-select\",\n              children: \"show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"dataTable-select\",\n              type: \"select\",\n              id: \"sort-select\",\n              value: rowsPerPage,\n              onChange: e => handlePerPage(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 7,\n                children: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 10,\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 25,\n                children: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 50,\n                children: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 75,\n                children: \"75\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 100,\n                children: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              for: \"sort-select\",\n              children: \"entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1\",\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"mr-1\",\n            for: \"search-input\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            className: \"dataTable-filter\",\n            type: \"text\",\n            bsSize: \"sm\",\n            id: \"search-input\",\n            value: searchValue,\n            onChange: handleFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        pagination: true,\n        paginationServer: true,\n        className: \"react-dataTable\",\n        columns: serverSideColumns,\n        sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this),\n        paginationComponent: CustomPagination,\n        data: dataToRender()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataTableServerSide, \"TIQwjJcsythA1LB4ManGUqWV0wA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DataTableServerSide;\nexport default _c2 = /*#__PURE__*/memo(DataTableServerSide);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataTableServerSide\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/tables/data-tables/advance/TableServerSide.js"],"names":["Fragment","useState","useEffect","memo","serverSideColumns","getData","useSelector","useDispatch","ReactPaginate","ChevronDown","DataTable","Card","CardHeader","CardTitle","Input","Label","Row","Col","DataTableServerSide","dispatch","store","state","dataTables","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","page","perPage","q","handleFilter","e","target","value","handlePagination","selected","handlePerPage","parseInt","CustomPagination","count","Number","total","toFixed","dataToRender","filters","isFiltered","Object","keys","some","k","length","data","allData","slice"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,IAAxC,QAAoD,OAApD,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,SAAlC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,KAAtC,EAA6CC,KAA7C,EAAoDC,GAApD,EAAyDC,GAAzD,QAAoE,YAApE;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAzB,CAHgC,CAKhC;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C,CARgC,CAUhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CACNd,OAAO,CAAC;AACNwB,MAAAA,IAAI,EAAEN,WADA;AAENO,MAAAA,OAAO,EAAEL,WAFH;AAGNM,MAAAA,CAAC,EAAEJ;AAHG,KAAD,CADD,CAAR;AAOD,GARQ,EAQN,CAACR,QAAD,CARM,CAAT,CAXgC,CAqBhC;;AACA,QAAMa,YAAY,GAAGC,CAAC,IAAI;AACxBL,IAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAEAhB,IAAAA,QAAQ,CACNd,OAAO,CAAC;AACNwB,MAAAA,IAAI,EAAEN,WADA;AAENO,MAAAA,OAAO,EAAEL,WAFH;AAGNM,MAAAA,CAAC,EAAEE,CAAC,CAACC,MAAF,CAASC;AAHN,KAAD,CADD,CAAR;AAOD,GAVD,CAtBgC,CAkChC;;;AACA,QAAMC,gBAAgB,GAAGP,IAAI,IAAI;AAC/BV,IAAAA,QAAQ,CACNd,OAAO,CAAC;AACNwB,MAAAA,IAAI,EAAEA,IAAI,CAACQ,QAAL,GAAgB,CADhB;AAENP,MAAAA,OAAO,EAAEL,WAFH;AAGNM,MAAAA,CAAC,EAAEJ;AAHG,KAAD,CADD,CAAR;AAOAH,IAAAA,cAAc,CAACK,IAAI,CAACQ,QAAL,GAAgB,CAAjB,CAAd;AACD,GATD,CAnCgC,CA8ChC;;;AACA,QAAMC,aAAa,GAAGL,CAAC,IAAI;AACzBd,IAAAA,QAAQ,CACNd,OAAO,CAAC;AACNwB,MAAAA,IAAI,EAAEN,WADA;AAENO,MAAAA,OAAO,EAAES,QAAQ,CAACN,CAAC,CAACC,MAAF,CAASC,KAAV,CAFX;AAGNJ,MAAAA,CAAC,EAAEJ;AAHG,KAAD,CADD,CAAR;AAOAD,IAAAA,cAAc,CAACa,QAAQ,CAACN,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CAAd;AACD,GATD,CA/CgC,CA0DhC;;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,KAAK,GAAGC,MAAM,CAAC,CAACtB,KAAK,CAACuB,KAAN,GAAclB,WAAf,EAA4BmB,OAA5B,CAAoC,CAApC,CAAD,CAApB;AAEA,wBACE,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,EADjB;AAEE,MAAA,SAAS,EAAE,EAFb;AAGE,MAAA,UAAU,EAAC,KAHb;AAIE,MAAA,SAAS,EAAEH,KAAK,IAAI,CAJtB;AAKE,MAAA,oBAAoB,EAAE,CALxB;AAME,MAAA,kBAAkB,EAAE,CANtB;AAOE,MAAA,eAAe,EAAC,QAPlB;AAQE,MAAA,SAAS,EAAElB,WAAW,KAAK,CAAhB,GAAoBA,WAAW,GAAG,CAAlC,GAAsC,CARnD;AASE,MAAA,YAAY,EAAEM,IAAI,IAAIO,gBAAgB,CAACP,IAAD,CATxC;AAUE,MAAA,aAAa,EAAE,WAVjB;AAWE,MAAA,iBAAiB,EAAE,WAXrB;AAYE,MAAA,aAAa,EAAE,gBAZjB;AAaE,MAAA,iBAAiB,EAAE,gBAbrB;AAcE,MAAA,qBAAqB,EAAE,WAdzB;AAeE,MAAA,iBAAiB,EAAE,WAfrB;AAgBE,MAAA,cAAc,EAAC,WAhBjB;AAiBE,MAAA,kBAAkB,EAAC,WAjBrB;AAkBE,MAAA,kBAAkB,EAChB;AAnBJ;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD,GA3BD,CA3DgC,CAwFhC;;;AACA,QAAMgB,YAAY,GAAG,MAAM;AACzB,UAAMC,OAAO,GAAG;AACdf,MAAAA,CAAC,EAAEJ;AADW,KAAhB;AAIA,UAAMoB,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,CAA0B,UAAUC,CAAV,EAAa;AACxD,aAAOL,OAAO,CAACK,CAAD,CAAP,CAAWC,MAAX,GAAoB,CAA3B;AACD,KAFkB,CAAnB;;AAIA,QAAIhC,KAAK,CAACiC,IAAN,CAAWD,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAOhC,KAAK,CAACiC,IAAb;AACD,KAFD,MAEO,IAAIjC,KAAK,CAACiC,IAAN,CAAWD,MAAX,KAAsB,CAAtB,IAA2BL,UAA/B,EAA2C;AAChD,aAAO,EAAP;AACD,KAFM,MAEA;AACL,aAAO3B,KAAK,CAACkC,OAAN,CAAcC,KAAd,CAAoB,CAApB,EAAuB9B,WAAvB,CAAP;AACD;AACF,GAhBD;;AAkBA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,EAAE,EAAC,aAHL;AAIE,cAAA,KAAK,EAAEA,WAJT;AAKE,cAAA,QAAQ,EAAEQ,CAAC,IAAIK,aAAa,CAACL,CAAD,CAL9B;AAAA,sCAOE;AAAQ,gBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAQ,gBAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE;AAAQ,gBAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAQ,gBAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE;AAAQ,gBAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAYE;AAAQ,gBAAA,KAAK,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAgBE,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAqBE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,+DAAf;AAA+E,UAAA,EAAE,EAAC,GAAlF;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAwB,YAAA,GAAG,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,MAAM,EAAC,IAHT;AAIE,YAAA,EAAE,EAAC,cAJL;AAKE,YAAA,KAAK,EAAEN,WALT;AAME,YAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAuCE,QAAC,SAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,UAAU,MAFZ;AAGE,QAAA,gBAAgB,MAHlB;AAIE,QAAA,SAAS,EAAC,iBAJZ;AAKE,QAAA,OAAO,EAAE5B,iBALX;AAME,QAAA,QAAQ,eAAE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBANZ;AAOE,QAAA,mBAAmB,EAAEoC,gBAPvB;AAQE,QAAA,IAAI,EAAEK,YAAY;AARpB;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAjKD;;GAAM3B,mB;UAEaX,W,EACHD,W;;;KAHVY,mB;AAmKN,kCAAef,IAAI,CAACe,mBAAD,CAAnB","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n\n// ** Table Columns\nimport { serverSideColumns } from '../data'\n\n// ** Store & Actions\nimport { getData } from '../store/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\n\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.dataTables)\n\n  // ** States\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(7)\n  const [searchValue, setSearchValue] = useState('')\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchValue\n      })\n    )\n  }, [dispatch])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    setSearchValue(e.target.value)\n\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: e.target.value\n      })\n    )\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchValue\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: parseInt(e.target.value),\n        q: searchValue\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchValue\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Server Side</CardTitle>\n        </CardHeader>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={7}>7</option>\n                <option value={10}>10</option>\n                <option value={25}>25</option>\n                <option value={50}>50</option>\n                <option value={75}>75</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default memo(DataTableServerSide)\n"]},"metadata":{},"sourceType":"module"}