{"ast":null,"code":"var e = g(require(\"tiny-invariant\")),\n  t = require(\"react\"),\n  n = t.Children,\n  r = t.cloneElement,\n  o = t.Component,\n  i = t.createElement,\n  l = t.createRef,\n  a = g(require(\"classnames\")),\n  c = require(\"sortablejs\"),\n  s = g(c);\nexports.Sortable = s;\nvar u = c.Direction;\nexports.Direction = u;\nvar f = c.DOMRect;\nexports.DOMRect = f;\nvar p = c.GroupOptions;\nexports.GroupOptions = p;\nvar d = c.MoveEvent;\nexports.MoveEvent = d;\nvar b = c.Options;\nexports.Options = b;\nvar y = c.PullResult;\nexports.PullResult = y;\nvar v = c.PutResult;\nexports.PutResult = v;\nvar h = c.SortableEvent;\nexports.SortableEvent = h;\nvar m = c.SortableOptions;\nexports.SortableOptions = m;\nvar O = c.Utils;\nfunction g(e) {\n  return e && e.__esModule ? e.default : e;\n}\nfunction w(e, t) {\n  if (null == e) return {};\n  var n,\n    r,\n    o = function (e, t) {\n      if (null == e) return {};\n      var n,\n        r,\n        o = {},\n        i = Object.keys(e);\n      for (r = 0; r < i.length; r++) {\n        n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);\n      }\n      return o;\n    }(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var i = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < i.length; r++) {\n      n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\n    }\n  }\n  return o;\n}\nfunction S(e) {\n  return function (e) {\n    if (Array.isArray(e)) return j(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n  }(e) || function (e, t) {\n    if (!e) return;\n    if (\"string\" == typeof e) return j(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    \"Object\" === n && e.constructor && (n = e.constructor.name);\n    if (\"Map\" === n || \"Set\" === n) return Array.from(e);\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return j(e, t);\n  }(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction j(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var n = 0, r = new Array(t); n < t; n++) {\n    r[n] = e[n];\n  }\n  return r;\n}\nfunction x(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction I(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? x(Object(n), !0).forEach(function (t) {\n      P(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : x(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction P(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction E(e) {\n  null !== e.parentElement && e.parentElement.removeChild(e);\n}\nfunction k(e) {\n  e.forEach(function (e) {\n    return E(e.element);\n  });\n}\nfunction C(e) {\n  e.forEach(function (e) {\n    var t, n, r, o;\n    t = e.parentElement, n = e.element, r = e.oldIndex, o = t.children[r] || null, t.insertBefore(n, o);\n  });\n}\nfunction D(e, t) {\n  var n = M(e),\n    r = {\n      parentElement: e.from\n    },\n    o = [];\n  switch (n) {\n    case \"normal\":\n      o = [{\n        element: e.item,\n        newIndex: e.newIndex,\n        oldIndex: e.oldIndex,\n        parentElement: e.from\n      }];\n      break;\n    case \"swap\":\n      o = [I({\n        element: e.item,\n        oldIndex: e.oldIndex,\n        newIndex: e.newIndex\n      }, r), I({\n        element: e.swapItem,\n        oldIndex: e.newIndex,\n        newIndex: e.oldIndex\n      }, r)];\n      break;\n    case \"multidrag\":\n      o = e.oldIndicies.map(function (t, n) {\n        return I({\n          element: t.multiDragElement,\n          oldIndex: t.index,\n          newIndex: e.newIndicies[n].index\n        }, r);\n      });\n  }\n  return function (e, t) {\n    return e.map(function (e) {\n      return I(I({}, e), {}, {\n        item: t[e.oldIndex]\n      });\n    }).sort(function (e, t) {\n      return e.oldIndex - t.oldIndex;\n    });\n  }(o, t);\n}\nfunction A(e, t) {\n  var n = S(t);\n  return e.concat().reverse().forEach(function (e) {\n    return n.splice(e.oldIndex, 1);\n  }), n;\n}\nfunction R(e, t, n, r) {\n  var o = S(t);\n  return e.forEach(function (e) {\n    var t = r && n && r(e.item, n);\n    o.splice(e.newIndex, 0, t || e.item);\n  }), o;\n}\nfunction M(e) {\n  return e.oldIndicies && e.oldIndicies.length > 0 ? \"multidrag\" : e.swapItem ? \"swap\" : \"normal\";\n}\nfunction U(e) {\n  return (U = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\nfunction L(e) {\n  return function (e) {\n    if (Array.isArray(e)) return _(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n  }(e) || function (e, t) {\n    if (!e) return;\n    if (\"string\" == typeof e) return _(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    \"Object\" === n && e.constructor && (n = e.constructor.name);\n    if (\"Map\" === n || \"Set\" === n) return Array.from(e);\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _(e, t);\n  }(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction _(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var n = 0, r = new Array(t); n < t; n++) {\n    r[n] = e[n];\n  }\n  return r;\n}\nfunction H(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction N(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? H(Object(n), !0).forEach(function (t) {\n      B(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : H(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction q(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n  }\n}\nfunction T(e, t) {\n  return (T = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\nfunction F(e) {\n  var t = function () {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n    try {\n      return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n    } catch (e) {\n      return !1;\n    }\n  }();\n  return function () {\n    var n,\n      r = $(e);\n    if (t) {\n      var o = $(this).constructor;\n      n = Reflect.construct(r, arguments, o);\n    } else n = r.apply(this, arguments);\n    return G(this, n);\n  };\n}\nfunction G(e, t) {\n  return !t || \"object\" !== U(t) && \"function\" != typeof t ? function (e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }(e) : t;\n}\nfunction $(e) {\n  return ($ = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\nfunction B(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nexports.Utils = O;\nvar J = {\n    dragging: null\n  },\n  z = function (t) {\n    !function (e, t) {\n      if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n      e.prototype = Object.create(t && t.prototype, {\n        constructor: {\n          value: e,\n          writable: !0,\n          configurable: !0\n        }\n      }), t && T(e, t);\n    }(d, o);\n    var c,\n      u,\n      f,\n      p = F(d);\n    function d(t) {\n      var n;\n      !function (e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, d), (n = p.call(this, t)).ref = l();\n      var r = t.list.map(function (e) {\n        return N(N({}, e), {}, {\n          chosen: !1,\n          selected: !1\n        });\n      });\n      return t.setList(r, n.sortable, J), e(!t.plugins, '\\nPlugins prop is no longer supported.\\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\\n      '), n;\n    }\n    return c = d, (u = [{\n      key: \"componentDidMount\",\n      value: function value() {\n        if (null !== this.ref.current) {\n          var e = this.makeOptions();\n          s.create(this.ref.current, e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function value() {\n        var e = this.props,\n          t = e.tag,\n          n = {\n            style: e.style,\n            className: e.className,\n            id: e.id\n          };\n        return i(t && null !== t ? t : \"div\", N({\n          ref: this.ref\n        }, n), this.getChildren());\n      }\n    }, {\n      key: \"getChildren\",\n      value: function value() {\n        var e = this.props,\n          t = e.children,\n          o = e.dataIdAttr,\n          i = e.selectedClass,\n          l = void 0 === i ? \"sortable-selected\" : i,\n          c = e.chosenClass,\n          s = void 0 === c ? \"sortable-chosen\" : c,\n          u = (e.dragClass, e.fallbackClass, e.ghostClass, e.swapClass, e.filter),\n          f = void 0 === u ? \"sortable-filter\" : u,\n          p = e.list;\n        if (!t || null == t) return null;\n        var d = o || \"data-id\";\n        return n.map(t, function (e, t) {\n          var n,\n            o,\n            i = p[t],\n            c = e.props.className,\n            u = \"string\" == typeof f && B({}, f.replace(\".\", \"\"), !!i.filtered),\n            b = a(c, N((B(n = {}, l, i.selected), B(n, s, i.chosen), n), u));\n          return r(e, (B(o = {}, d, e.key), B(o, \"className\", b), o));\n        });\n      }\n    }, {\n      key: \"makeOptions\",\n      value: function value() {\n        var e,\n          t = this,\n          n = ((e = this.props).list, e.setList, e.children, e.tag, e.style, e.className, e.clone, e.onAdd, e.onChange, e.onChoose, e.onClone, e.onEnd, e.onFilter, e.onRemove, e.onSort, e.onStart, e.onUnchoose, e.onUpdate, e.onMove, e.onSpill, e.onSelect, e.onDeselect, w(e, [\"list\", \"setList\", \"children\", \"tag\", \"style\", \"className\", \"clone\", \"onAdd\", \"onChange\", \"onChoose\", \"onClone\", \"onEnd\", \"onFilter\", \"onRemove\", \"onSort\", \"onStart\", \"onUnchoose\", \"onUpdate\", \"onMove\", \"onSpill\", \"onSelect\", \"onDeselect\"]));\n        return [\"onAdd\", \"onChoose\", \"onDeselect\", \"onEnd\", \"onRemove\", \"onSelect\", \"onSpill\", \"onStart\", \"onUnchoose\", \"onUpdate\"].forEach(function (e) {\n          return n[e] = t.prepareOnHandlerPropAndDOM(e);\n        }), [\"onChange\", \"onClone\", \"onFilter\", \"onSort\"].forEach(function (e) {\n          return n[e] = t.prepareOnHandlerProp(e);\n        }), N(N({}, n), {}, {\n          onMove: function onMove(e, n) {\n            var r = t.props.onMove,\n              o = e.willInsertAfter || -1;\n            if (!r) return o;\n            var i = r(e, n, t.sortable, J);\n            return void 0 !== i && i;\n          }\n        });\n      }\n    }, {\n      key: \"prepareOnHandlerPropAndDOM\",\n      value: function value(e) {\n        var t = this;\n        return function (n) {\n          t.callOnHandlerProp(n, e), t[e](n);\n        };\n      }\n    }, {\n      key: \"prepareOnHandlerProp\",\n      value: function value(e) {\n        var t = this;\n        return function (n) {\n          t.callOnHandlerProp(n, e);\n        };\n      }\n    }, {\n      key: \"callOnHandlerProp\",\n      value: function value(e, t) {\n        var n = this.props[t];\n        n && n(e, this.sortable, J);\n      }\n    }, {\n      key: \"onAdd\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = t.clone,\n          i = D(e, L(J.dragging.props.list));\n        k(i), r(R(i, n, e, o).map(function (e) {\n          return N(N({}, e), {}, {\n            selected: !1\n          });\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onRemove\",\n      value: function value(t) {\n        var n = this,\n          r = this.props,\n          o = r.list,\n          i = r.setList,\n          l = M(t),\n          a = D(t, o);\n        C(a);\n        var c = L(o);\n        if (\"clone\" !== t.pullMode) c = A(a, c);else {\n          var s = a;\n          switch (l) {\n            case \"multidrag\":\n              s = a.map(function (e, n) {\n                return N(N({}, e), {}, {\n                  element: t.clones[n]\n                });\n              });\n              break;\n            case \"normal\":\n              s = a.map(function (e) {\n                return N(N({}, e), {}, {\n                  element: t.clone\n                });\n              });\n              break;\n            case \"swap\":\n            default:\n              e(!0, 'mode \"'.concat(l, '\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"').concat(l, '\" plugin'));\n          }\n          k(s), a.forEach(function (e) {\n            var r = e.oldIndex,\n              o = n.props.clone(e.item, t);\n            c.splice(r, 1, o);\n          });\n        }\n        i(c = c.map(function (e) {\n          return N(N({}, e), {}, {\n            selected: !1\n          });\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = D(e, n);\n        return k(o), C(o), r(function (e, t) {\n          return R(e, A(e, t));\n        }(o, n), this.sortable, J);\n      }\n    }, {\n      key: \"onStart\",\n      value: function value() {\n        J.dragging = this;\n      }\n    }, {\n      key: \"onEnd\",\n      value: function value() {\n        J.dragging = null;\n      }\n    }, {\n      key: \"onChoose\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list;\n        (0, t.setList)(n.map(function (t, n) {\n          return n === e.oldIndex ? N(N({}, t), {}, {\n            chosen: !0\n          }) : t;\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onUnchoose\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list;\n        (0, t.setList)(n.map(function (t, n) {\n          return n === e.oldIndex ? N(N({}, t), {}, {\n            chosen: !1\n          }) : t;\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onSpill\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.removeOnSpill,\n          r = t.revertOnSpill;\n        n && !r && E(e.item);\n      }\n    }, {\n      key: \"onSelect\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = n.map(function (e) {\n            return N(N({}, e), {}, {\n              selected: !1\n            });\n          });\n        e.newIndicies.forEach(function (t) {\n          var n = t.index;\n          if (-1 === n) return console.log('\"'.concat(e.type, '\" had indice of \"').concat(t.index, \"\\\", which is probably -1 and doesn't usually happen here.\")), void console.log(e);\n          o[n].selected = !0;\n        }), r(o, this.sortable, J);\n      }\n    }, {\n      key: \"onDeselect\",\n      value: function value(e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = n.map(function (e) {\n            return N(N({}, e), {}, {\n              selected: !1\n            });\n          });\n        e.newIndicies.forEach(function (e) {\n          var t = e.index;\n          -1 !== t && (o[t].selected = !0);\n        }), r(o, this.sortable, J);\n      }\n    }, {\n      key: \"sortable\",\n      get: function get() {\n        var e = this.ref.current;\n        if (null === e) return null;\n        var t = Object.keys(e).find(function (e) {\n          return e.includes(\"Sortable\");\n        });\n        return t ? e[t] : null;\n      }\n    }]) && q(c.prototype, u), f && q(c, f), d;\n  }();\nexports.ReactSortable = z, B(z, \"defaultProps\", {\n  clone: function clone(e) {\n    return e;\n  }\n});","map":{"version":3,"sources":["home/runner/work/react-sortablejs/react-sortablejs/node_modules/@parcel/scope-hoisting/lib/helpers.js","src/util.ts","src/react-sortable.tsx"],"names":["$parcel$interopDefault","a","__esModule","default","removeNode","node","parentElement","removeChild","parent","newChild","index","refChild","children","insertBefore","removeNodes","customs","forEach","curr","element","insertNodes","oldIndex","createCustoms","evt","list","mode","getMode","from","custom","item","newIndex","$bf037e368b3040002dda64d69d3f$var$_objectSpread","swapItem","oldIndicies","map","multiDragElement","newIndicies","createNormalized","normalized","handleStateRemove","handleStateAdd","newList","$bf037e368b3040002dda64d69d3f$var$_toConsumableArray","concat","reverse","splice","clone","newItem","length","inputs","sort","b","props","$bf037e368b3040002dda64d69d3f$var$_objectWithoutProperties","setList","tag","style","className","onAdd","onChange","onChoose","onClone","onEnd","onFilter","onRemove","onSort","onStart","onUnchoose","onUpdate","onMove","onSpill","onSelect","onDeselect","store","dragging","ReactSortable","Component","_this","ref","createRef","chosen","selected","sortable","invariant","plugins","this","current","newOptions","makeOptions","Sortable","create","id","classicProps","createElement","$ff006f4a88ed11a8119708ec3f19c5db$var$_objectSpread","getChildren","dataIdAttr","selectedClass","chosenClass","dragClass","fallbackClass","ghostClass","swapClass","filter","dataid","Children","child","prevClassName","filtered","$ff006f4a88ed11a8119708ec3f19c5db$var$_defineProperty","replace","classNames","cloneElement","key","el","Object","keys","find","k","includes","name","_this2","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","originalEvt","defaultValue","willInsertAfter","result","evtName","_this3","callOnHandlerProp","_this4","propEvent","$ff006f4a88ed11a8119708ec3f19c5db$var$_toConsumableArray","$bf037e368b3040002dda64d69d3f$export$createCustoms","$bf037e368b3040002dda64d69d3f$export$removeNodes","$bf037e368b3040002dda64d69d3f$export$handleStateAdd","$bf037e368b3040002dda64d69d3f$export$getMode","$bf037e368b3040002dda64d69d3f$export$insertNodes","pullMode","$bf037e368b3040002dda64d69d3f$export$handleStateRemove","customClones","clones","_this5","$bf037e368b3040002dda64d69d3f$export$handleStateChanges","removeOnSpill","revertOnSpill","$bf037e368b3040002dda64d69d3f$export$removeNode","console","log","type"],"mappings":"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","sourcesContent":[null,"import { PropsWithChildren } from \"react\";\nimport Sortable, { Options } from \"sortablejs\";\nimport { MultiDragEvent } from \"./react-sortable\";\nimport { AllMethodNames, ItemInterface, ReactSortableProps } from \"./types\";\n\n/**\n * Removes the `node` from the DOM\n * @param node\n */\nexport function removeNode(node: HTMLElement): void {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n\n/**\n * Inserts the `newChild` node at the given index in a parent\n * @param parent The parent HTML Element.\n * @param newChild A HTML eement to add as a child of the parent.\n * @param index index of the parent to place the new child in.\n */\nexport function insertNodeAt(\n  parent: HTMLElement,\n  newChild: HTMLElement,\n  index: number\n): void {\n  const refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\n// @todo - create a dom handler function for arrays or not at all\n\n/** removes stuff from the dom in a nice order */\n// @todo - do I need parenElement?\nexport function handleDOMChanges<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  removeNodes(customs);\n  insertNodes(customs);\n}\n\nexport function removeNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => removeNode(curr.element));\n}\n\nexport function insertNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nexport function createCustoms<T extends ItemInterface>(\n  evt: MultiDragEvent,\n  list: T[]\n): Normalized<T>[] {\n  const mode = getMode(evt);\n  const parentElement = { parentElement: evt.from };\n  let custom = [];\n  switch (mode) {\n    case \"normal\":\n      /* eslint-disable */\n      const item = {\n        element: evt.item,\n        newIndex: evt.newIndex!,\n        oldIndex: evt.oldIndex!,\n        parentElement: evt.from,\n      };\n      custom = [item];\n      break;\n    case \"swap\":\n      const drag: Input = {\n        element: evt.item,\n        oldIndex: evt.oldIndex!,\n        newIndex: evt.newIndex!,\n        ...parentElement,\n      };\n      const swap: Input = {\n        element: evt.swapItem!,\n        oldIndex: evt.newIndex!,\n        newIndex: evt.oldIndex!,\n        ...parentElement,\n      };\n      custom = [drag, swap];\n      break;\n    case \"multidrag\":\n      custom = evt.oldIndicies.map<Input>((curr, index) => ({\n        element: curr.multiDragElement,\n        oldIndex: curr.index,\n        newIndex: evt.newIndicies[index].index,\n        ...parentElement,\n      }));\n      break;\n  }\n  /* eslint-enable */\n\n  const customs = createNormalized(custom, list);\n  return customs;\n}\n\n/** moves items form old index to new index without breaking anything ideally. */\nexport function handleStateChanges<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const a = handleStateRemove(normalized, list);\n  const b = handleStateAdd(normalized, a);\n  return b;\n}\n\nexport function handleStateRemove<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const newList = [...list];\n  normalized\n    .concat()\n    .reverse()\n    .forEach((curr) => newList.splice(curr.oldIndex, 1));\n  return newList;\n}\n\nexport function handleStateAdd<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[],\n  evt?: Sortable.SortableEvent,\n  clone?: ((currentItem: T, evt: Sortable.SortableEvent) => T) | undefined\n): T[] {\n  const newList = [...list];\n  normalized.forEach((curr) => {\n    const newItem = clone && evt && clone(curr.item, evt);\n    newList.splice(curr.newIndex, 0, newItem || curr.item);\n  });\n  return newList;\n}\n\nexport function getMode(evt: MultiDragEvent): \"multidrag\" | \"swap\" | \"normal\" {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nexport function createNormalized<T extends ItemInterface>(\n  inputs: Input[],\n  list: T[]\n): Normalized<T>[] {\n  const normalized = inputs\n    .map<Normalized<T>>((curr) => ({ ...curr, item: list[curr.oldIndex] }))\n    .sort((a, b) => a.oldIndex - b.oldIndex);\n  return normalized;\n}\n\nexport interface Input {\n  parentElement: HTMLElement;\n  element: HTMLElement;\n  oldIndex: number;\n  newIndex: number;\n}\n\nexport interface Normalized<T> extends Input {\n  item: T;\n}\n\n/**\n * Removes the following group of properties from `props`,\n * leaving only `Sortable.Options` without any `on` methods.\n * @param props `ReactSortable.Props`\n */\nexport function destructurePropsForOptions<T>(\n  props: PropsWithChildren<ReactSortableProps<T>>\n): Exclude<Options, AllMethodNames> {\n  /* eslint-disable */\n  const {\n    // react sortable props\n    list,\n    setList,\n    children,\n    tag,\n    style,\n    className,\n    clone,\n    // sortable options that have methods we want to overwrite\n    onAdd,\n    onChange,\n    onChoose,\n    onClone,\n    onEnd,\n    onFilter,\n    onRemove,\n    onSort,\n    onStart,\n    onUnchoose,\n    onUpdate,\n    onMove,\n    onSpill,\n    onSelect,\n    onDeselect,\n    ...options\n  } = props;\n  /* eslint-enable */\n  return options;\n}\n\n/**\n * Construct a type with the properties of T except for those in type K.\n * Including this allows for backwards compatibility with earlier versions of TS.\n */\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n","import classNames from \"classnames\";\nimport {\n  Children,\n  cloneElement,\n  Component,\n  createElement,\n  createRef,\n  ReactElement,\n  RefObject,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport invariant from \"tiny-invariant\";\nimport {\n  AllMethodsExceptMove,\n  HandledMethodNames,\n  ItemInterface,\n  ReactSortableProps,\n  Store,\n  UnHandledMethodNames,\n} from \"./types\";\nimport {\n  createCustoms,\n  destructurePropsForOptions,\n  getMode,\n  handleStateAdd,\n  handleStateChanges,\n  handleStateRemove,\n  insertNodes,\n  removeNode,\n  removeNodes,\n} from \"./util\";\n\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\nconst store: Store = { dragging: null };\n\nexport class ReactSortable<T extends ItemInterface> extends Component<\n  ReactSortableProps<T>\n> {\n  /* eslint-disable-next-line */\n  static defaultProps: Partial<ReactSortableProps<any>> = {\n    clone: (item) => item,\n  };\n\n  private ref: RefObject<HTMLElement>;\n  constructor(props: ReactSortableProps<T>) {\n    super(props);\n    // @todo forward ref this component\n    this.ref = createRef<HTMLElement>();\n\n    // make all state false because we can't change sortable unless a mouse gesture is made.\n    const newList = props.list.map((item) => ({\n      ...item,\n      chosen: false,\n      selected: false,\n    }));\n\n    props.setList(newList, this.sortable, store);\n    invariant(\n      //@ts-expect-error: Doesn't exist. Will deprecate soon.\n      !props.plugins,\n      `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `\n    );\n  }\n  componentDidMount(): void {\n    if (this.ref.current === null) return;\n    const newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  }\n\n  render(): JSX.Element {\n    const { tag, style, className, id } = this.props;\n    const classicProps = { style, className, id };\n\n    // if no tag, default to a `div` element.\n    const newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(\n      newTag,\n      {\n        // @todo - find a way (perhaps with the callback) to allow AntD components to work\n        ref: this.ref,\n        ...classicProps,\n      },\n      this.getChildren()\n    );\n  }\n\n  private getChildren() {\n    const {\n      children,\n      dataIdAttr,\n      selectedClass = \"sortable-selected\",\n      chosenClass = \"sortable-chosen\",\n      /* eslint-disable */\n      dragClass = \"sortable-drag\",\n      fallbackClass = \"sortable-falback\",\n      ghostClass = \"sortable-ghost\",\n      swapClass = \"sortable-swap-highlight\",\n      /* eslint-enable */\n      filter = \"sortable-filter\",\n      list,\n    } = this.props;\n\n    // if no children, don't do anything.\n    if (!children || children == null) return null;\n    const dataid = dataIdAttr || \"data-id\";\n    /* eslint-disable-next-line */\n    return Children.map(children as ReactElement<any>[], (child, index) => {\n      const item = list[index];\n      const { className: prevClassName } = child.props;\n\n      // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n      const filtered = typeof filter === \"string\" && {\n        [filter.replace(\".\", \"\")]: !!item.filtered,\n      };\n\n      const className = classNames(prevClassName, {\n        [selectedClass]: item.selected,\n        [chosenClass]: item.chosen,\n        ...filtered,\n        // [dragClass]: true,\n        // [fallbackClass]: true,\n        // [ghostClass]: true,\n        // [swapClass]: true\n      });\n\n      return cloneElement(child, {\n        [dataid]: child.key,\n        className,\n      });\n    });\n  }\n\n  /** Appends the `sortable` property to this component */\n  private get sortable(): Sortable | null {\n    const el = this.ref.current;\n    if (el === null) return null;\n    const key = Object.keys(el).find((k) => k.includes(\"Sortable\"));\n    if (!key) return null;\n    //@ts-expect-error: fix me.\n    return el[key] as Sortable;\n  }\n\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n  makeOptions(): Options {\n    const DOMHandlers: HandledMethodNames[] = [\n      \"onAdd\",\n      \"onChoose\",\n      \"onDeselect\",\n      \"onEnd\",\n      \"onRemove\",\n      \"onSelect\",\n      \"onSpill\",\n      \"onStart\",\n      \"onUnchoose\",\n      \"onUpdate\",\n    ];\n    const NonDOMHandlers: UnHandledMethodNames[] = [\n      \"onChange\",\n      \"onClone\",\n      \"onFilter\",\n      \"onSort\",\n    ];\n    const newOptions: Options = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerPropAndDOM(name))\n    );\n    NonDOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerProp(name))\n    );\n\n    /** onMove has 2 arguments and needs to be handled seperately. */\n    const onMove = (evt: MoveEvent, originalEvt: Event) => {\n      const { onMove } = this.props;\n      const defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      const result = onMove(evt, originalEvt, this.sortable, store);\n      if (typeof result === \"undefined\") return false;\n      return result;\n    };\n\n    return {\n      ...newOptions,\n      onMove,\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n  prepareOnHandlerPropAndDOM(\n    evtName: HandledMethodNames\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n      // calls state change\n      //@ts-expect-error: until @types multidrag item is in\n      this[evtName](evt);\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n  prepareOnHandlerProp(\n    evtName: Exclude<AllMethodsExceptMove, HandledMethodNames>\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n    };\n  }\n\n  /** Calls the `props.on[Handler]` function */\n  callOnHandlerProp(evt: SortableEvent, evtName: AllMethodsExceptMove): void {\n    const propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }\n\n  // SORTABLE DOM HANDLING\n\n  onAdd(evt: MultiDragEvent): void {\n    const { list, setList, clone } = this.props;\n    /* eslint-disable-next-line */\n    const otherList = [...store.dragging!.props.list];\n    const customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n    const newList = handleStateAdd(customs, list, evt, clone).map((item) => ({\n      ...item,\n      selected: false,\n    }));\n    setList(newList, this.sortable, store);\n  }\n\n  onRemove(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const mode = getMode(evt);\n    const customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    let newList = [...list];\n    // remove state if not in clone mode. otherwise, keep.\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList);\n    // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n      // switch used to get the clone\n      let customClones = customs;\n      switch (mode) {\n        case \"multidrag\":\n          customClones = customs.map((item, index) => ({\n            ...item,\n            element: evt.clones[index],\n          }));\n          break;\n        case \"normal\":\n          customClones = customs.map((item) => ({\n            ...item,\n            element: evt.clone,\n          }));\n          break;\n        case \"swap\":\n        default: {\n          invariant(\n            true,\n            `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`\n          );\n        }\n      }\n      removeNodes(customClones);\n\n      // replace selected items with cloned items\n      customs.forEach((curr) => {\n        const index = curr.oldIndex;\n        /* eslint-disable-next-line */\n        const newItem = this.props.clone!(curr.item, evt);\n        newList.splice(index, 1, newItem);\n      });\n    }\n\n    // remove item.selected from list\n    newList = newList.map((item) => ({ ...item, selected: false }));\n    setList(newList, this.sortable, store);\n  }\n\n  onUpdate(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    const newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  }\n\n  onStart(): void {\n    store.dragging = this;\n  }\n\n  onEnd(): void {\n    store.dragging = null;\n  }\n\n  onChoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: true,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onUnchoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: false,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onSpill(evt: SortableEvent): void {\n    const { removeOnSpill, revertOnSpill } = this.props;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  }\n\n  onSelect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) {\n        console.log(\n          `\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`\n        );\n        console.log(evt);\n        return;\n      }\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onDeselect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n}\n\n// everything below this point can be removed\n// once @types has been merged. PR submited\ninterface MultiIndices {\n  multiDragElement: HTMLElement;\n  index: number;\n}\n\nexport interface MultiDragEvent extends SortableEvent {\n  // @todo - add this to @types\n  clones: HTMLElement[];\n  oldIndicies: MultiIndices[];\n  newIndicies: MultiIndices[];\n  swapItem: HTMLElement | null;\n}\n"]},"metadata":{},"sourceType":"script"}