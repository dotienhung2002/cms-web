{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/chat/Chat.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom'; // ** Custom Components\n\nimport Avatar from '@Components/avatar'; // ** Store & Actions\n\nimport { useDispatch } from 'react-redux';\nimport { sendMsg } from './store/actions'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Form, Label, InputGroup, InputGroupAddon, Input, InputGroupText, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatLog = props => {\n  _s();\n\n  // ** Props & Store\n  const {\n    handleUser,\n    handleUserSidebarRight,\n    handleSidebar,\n    store,\n    userSidebarLeft\n  } = props;\n  const {\n    userProfile,\n    selectedUser\n  } = store; // ** Refs & Dispatch\n\n  const chatArea = useRef(null);\n  const dispatch = useDispatch(); // ** State\n\n  const [msg, setMsg] = useState(''); // ** Scroll to chat bottom\n\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current);\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER;\n  }; // ** If user chat is not empty scrollToBottom\n\n\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length;\n\n    if (selectedUserLen) {\n      scrollToBottom();\n    }\n  }, [selectedUser]); // ** Formats chat data based on sender\n\n  const formattedChatData = () => {\n    let chatLog = [];\n\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat;\n    }\n\n    const formattedChatLog = [];\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined;\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    };\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        });\n      } else {\n        chatMessageSenderId = msg.senderId;\n        formattedChatLog.push(msgGroup);\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [{\n            msg: msg.message,\n            time: msg.time\n          }]\n        };\n      }\n\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup);\n    });\n    return formattedChatLog;\n  }; // ** Renders user chat\n\n\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('chat', {\n          'chat-left': item.senderId !== 11\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"box-shadow-1 cursor-pointer\",\n            img: item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: item.messages.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: chat.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, chat.msg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    });\n  }; // ** Opens right sidebar & handles its data\n\n\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight();\n    handleUser(obj);\n  }; // ** On mobile screen open left sidebar on Start Conversation Click\n\n\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar();\n    }\n  }; // ** Sends New Msg\n\n\n  const handleSendMsg = e => {\n    e.preventDefault();\n\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser,\n        message: msg\n      }));\n      setMsg('');\n    }\n  }; // ** ChatWrapper tag based on chat's length\n\n\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('start-chat-area', {\n        'd-none': Object.keys(selectedUser).length\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-chat-icon mb-1\",\n        children: /*#__PURE__*/_jsxDEV(MessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"sidebar-toggle start-chat-text\",\n        onClick: handleStartConversation,\n        children: \"Start Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), Object.keys(selectedUser).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('active-chat', {\n        'd-none': selectedUser === null\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar-toggle d-block d-lg-none mr-1\",\n              onClick: handleSidebar,\n              children: /*#__PURE__*/_jsxDEV(Menu, {\n                size: 21\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              imgHeight: \"36\",\n              imgWidth: \"36\",\n              img: selectedUser.contact.avatar,\n              status: selectedUser.contact.status,\n              className: \"avatar-border user-profile-toggle m-0 mr-1\",\n              onClick: () => handleAvatarClick(selectedUser.contact)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mb-0\",\n              children: selectedUser.contact.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PhoneCall, {\n              size: 18,\n              className: \"cursor-pointer d-sm-block d-none mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Video, {\n              size: 18,\n              className: \"cursor-pointer d-sm-block d-none mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Search, {\n              size: 18,\n              className: \"cursor-pointer d-sm-block d-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n              children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                className: \"btn-icon\",\n                color: \"transparent\",\n                size: \"sm\",\n                children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n                  size: \"18\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                right: true,\n                children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                  href: \"/\",\n                  onClick: e => e.preventDefault(),\n                  children: \"View Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  href: \"/\",\n                  onClick: e => e.preventDefault(),\n                  children: \"Mute Notifications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  href: \"/\",\n                  onClick: e => e.preventDefault(),\n                  children: \"Block Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  href: \"/\",\n                  onClick: e => e.preventDefault(),\n                  children: \"Clear Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  href: \"/\",\n                  onClick: e => e.preventDefault(),\n                  children: \"Report\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatWrapper, {\n        ref: chatArea,\n        className: \"user-chats\",\n        options: {\n          wheelPropagation: false\n        },\n        children: selectedUser.chat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats\",\n          children: renderChats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 34\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"chat-app-form\",\n        onSubmit: e => handleSendMsg(e),\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"input-group-merge mr-1 form-send-message\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: /*#__PURE__*/_jsxDEV(Mic, {\n                className: \"cursor-pointer\",\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: msg,\n            onChange: e => setMsg(e.target.value),\n            placeholder: \"Type your message or use speech to text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"append\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                className: \"attachment-icon mb-0\",\n                for: \"attach-doc\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"cursor-pointer text-secondary\",\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"attach-doc\",\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"send\",\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            size: 14,\n            className: \"d-lg-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"d-none d-lg-block\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatLog, \"5eR7wWHHPLy5eC7uLRbabqfeKwM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ChatLog;\nexport default ChatLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/chat/Chat.js"],"names":["useState","useEffect","useRef","ReactDOM","Avatar","useDispatch","sendMsg","classnames","PerfectScrollbar","MessageSquare","Menu","PhoneCall","Video","Search","MoreVertical","Mic","Image","Send","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Form","Label","InputGroup","InputGroupAddon","Input","InputGroupText","Button","ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","chatArea","dispatch","msg","setMsg","scrollToBottom","chatContainer","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","selectedUserLen","Object","keys","length","formattedChatData","chatLog","chat","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","message","time","renderChats","map","item","avatar","contact","handleAvatarClick","obj","handleStartConversation","window","innerWidth","handleSendMsg","e","preventDefault","ChatWrapper","status","fullName","wheelPropagation","target","value"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,MAAhD,EAAwDC,YAAxD,EAAsEC,GAAtE,EAA2EC,KAA3E,EAAkFC,IAAlF,QAA8F,eAA9F;AACA,SACEC,oBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,UAPF,EAQEC,eARF,EASEC,KATF,EAUEC,cAVF,EAWEC,MAXF,QAYO,YAZP;;;AAcA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,sBAAd;AAAsCC,IAAAA,aAAtC;AAAqDC,IAAAA,KAArD;AAA4DC,IAAAA;AAA5D,MAAgFL,KAAtF;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCH,KAAtC,CAHuB,CAKvB;;AACA,QAAMI,QAAQ,GAAGpC,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMqC,QAAQ,GAAGlC,WAAW,EAA5B,CAPuB,CASvB;;AACA,QAAM,CAACmC,GAAD,EAAMC,MAAN,IAAgBzC,QAAQ,CAAC,EAAD,CAA9B,CAVuB,CAYvB;;AACA,QAAM0C,cAAc,GAAG,MAAM;AAC3B,UAAMC,aAAa,GAAGxC,QAAQ,CAACyC,WAAT,CAAqBN,QAAQ,CAACO,OAA9B,CAAtB;AACAF,IAAAA,aAAa,CAACG,SAAd,GAA0BC,MAAM,CAACC,gBAAjC;AACD,GAHD,CAbuB,CAkBvB;;;AACA/C,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgD,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0Be,MAAlD;;AAEA,QAAIH,eAAJ,EAAqB;AACnBP,MAAAA,cAAc;AACf;AACF,GANQ,EAMN,CAACL,YAAD,CANM,CAAT,CAnBuB,CA2BvB;;AACA,QAAMgB,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAIjB,YAAY,CAACkB,IAAjB,EAAuB;AACrBD,MAAAA,OAAO,GAAGjB,YAAY,CAACkB,IAAb,CAAkBA,IAA5B;AACD;;AAED,UAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAIC,mBAAmB,GAAGH,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWI,QAAxB,GAAmCC,SAA7D;AACA,QAAIC,QAAQ,GAAG;AACbF,MAAAA,QAAQ,EAAED,mBADG;AAEbI,MAAAA,QAAQ,EAAE;AAFG,KAAf;AAIAP,IAAAA,OAAO,CAACQ,OAAR,CAAgB,CAACtB,GAAD,EAAMuB,KAAN,KAAgB;AAC9B,UAAIN,mBAAmB,KAAKjB,GAAG,CAACkB,QAAhC,EAA0C;AACxCE,QAAAA,QAAQ,CAACC,QAAT,CAAkBG,IAAlB,CAAuB;AACrBxB,UAAAA,GAAG,EAAEA,GAAG,CAACyB,OADY;AAErBC,UAAAA,IAAI,EAAE1B,GAAG,CAAC0B;AAFW,SAAvB;AAID,OALD,MAKO;AACLT,QAAAA,mBAAmB,GAAGjB,GAAG,CAACkB,QAA1B;AACAF,QAAAA,gBAAgB,CAACQ,IAAjB,CAAsBJ,QAAtB;AACAA,QAAAA,QAAQ,GAAG;AACTF,UAAAA,QAAQ,EAAElB,GAAG,CAACkB,QADL;AAETG,UAAAA,QAAQ,EAAE,CACR;AACErB,YAAAA,GAAG,EAAEA,GAAG,CAACyB,OADX;AAEEC,YAAAA,IAAI,EAAE1B,GAAG,CAAC0B;AAFZ,WADQ;AAFD,SAAX;AASD;;AACD,UAAIH,KAAK,KAAKT,OAAO,CAACF,MAAR,GAAiB,CAA/B,EAAkCI,gBAAgB,CAACQ,IAAjB,CAAsBJ,QAAtB;AACnC,KApBD;AAqBA,WAAOJ,gBAAP;AACD,GAlCD,CA5BuB,CAgEvB;;;AACA,QAAMW,WAAW,GAAG,MAAM;AACxB,WAAOd,iBAAiB,GAAGe,GAApB,CAAwB,CAACC,IAAD,EAAON,KAAP,KAAiB;AAC9C,0BACE;AAEE,QAAA,SAAS,EAAExD,UAAU,CAAC,MAAD,EAAS;AAC5B,uBAAa8D,IAAI,CAACX,QAAL,KAAkB;AADH,SAAT,CAFvB;AAAA,gCAME;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,6BADZ;AAEE,YAAA,GAAG,EAAEW,IAAI,CAACX,QAAL,KAAkB,EAAlB,GAAuBtB,WAAW,CAACkC,MAAnC,GAA4CjC,YAAY,CAACkC,OAAb,CAAqBD;AAFxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAaE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACGD,IAAI,CAACR,QAAL,CAAcO,GAAd,CAAkBb,IAAI,iBACrB;AAAoB,YAAA,SAAS,EAAC,cAA9B;AAAA,mCACE;AAAA,wBAAIA,IAAI,CAACf;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,aAAUe,IAAI,CAACf,GAAf;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA,SACOuB,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD,KAxBM,CAAP;AAyBD,GA1BD,CAjEuB,CA6FvB;;;AACA,QAAMS,iBAAiB,GAAGC,GAAG,IAAI;AAC/BzC,IAAAA,sBAAsB;AACtBD,IAAAA,UAAU,CAAC0C,GAAD,CAAV;AACD,GAHD,CA9FuB,CAmGvB;;;AACA,QAAMC,uBAAuB,GAAG,MAAM;AACpC,QAAI,CAACxB,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0Be,MAA3B,IAAqC,CAACjB,eAAtC,IAAyDwC,MAAM,CAACC,UAAP,IAAqB,IAAlF,EAAwF;AACtF3C,MAAAA,aAAa;AACd;AACF,GAJD,CApGuB,CA0GvB;;;AACA,QAAM4C,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIvC,GAAG,CAACY,MAAR,EAAgB;AACdb,MAAAA,QAAQ,CAACjC,OAAO,CAAC,EAAE,GAAG+B,YAAL;AAAmB4B,QAAAA,OAAO,EAAEzB;AAA5B,OAAD,CAAR,CAAR;AACAC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAND,CA3GuB,CAmHvB;;;AACA,QAAMuC,WAAW,GAAG9B,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0Be,MAA1B,IAAoCf,YAAY,CAACkB,IAAjD,GAAwD/C,gBAAxD,GAA2E,KAA/F;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,UAAU,CAAC,iBAAD,EAAoB;AAAE,kBAAU2C,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0Be;AAAtC,OAApB,CAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,gCAAd;AAA+C,QAAA,OAAO,EAAEsB,uBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGxB,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0Be,MAA1B,gBACC;AAAK,MAAA,SAAS,EAAE7C,UAAU,CAAC,aAAD,EAAgB;AAAE,kBAAU8B,YAAY,KAAK;AAA7B,OAAhB,CAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,uCAAf;AAAuD,cAAA,OAAO,EAAEJ,aAAhE;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AACE,cAAA,SAAS,EAAC,IADZ;AAEE,cAAA,QAAQ,EAAC,IAFX;AAGE,cAAA,GAAG,EAAEI,YAAY,CAACkC,OAAb,CAAqBD,MAH5B;AAIE,cAAA,MAAM,EAAEjC,YAAY,CAACkC,OAAb,CAAqBU,MAJ/B;AAKE,cAAA,SAAS,EAAC,4CALZ;AAME,cAAA,OAAO,EAAE,MAAMT,iBAAiB,CAACnC,YAAY,CAACkC,OAAd;AANlC;AAAA;AAAA;AAAA;AAAA,oBAJF,eAYE;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,wBAAsBlC,YAAY,CAACkC,OAAb,CAAqBW;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,IAAI,EAAE,EAAjB;AAAqB,cAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,EAAb;AAAiB,cAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAE,EAAd;AAAkB,cAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,oBAAD;AAAA,sCACE,QAAC,cAAD;AAAgB,gBAAA,SAAS,EAAC,UAA1B;AAAqC,gBAAA,KAAK,EAAC,aAA3C;AAAyD,gBAAA,IAAI,EAAC,IAA9D;AAAA,uCACE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,YAAD;AAAc,gBAAA,KAAK,MAAnB;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC,GAAnB;AAAuB,kBAAA,OAAO,EAAEJ,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC,GAAnB;AAAuB,kBAAA,OAAO,EAAED,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAOE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC,GAAnB;AAAuB,kBAAA,OAAO,EAAED,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAUE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC,GAAnB;AAAuB,kBAAA,OAAO,EAAED,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAaE,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC,GAAnB;AAAuB,kBAAA,OAAO,EAAED,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA+CE,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEzC,QAAlB;AAA4B,QAAA,SAAS,EAAC,YAAtC;AAAmD,QAAA,OAAO,EAAE;AAAE6C,UAAAA,gBAAgB,EAAE;AAApB,SAA5D;AAAA,kBACG9C,YAAY,CAACkB,IAAb,gBAAoB;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBY,WAAW;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAApB,GAAmE;AADtE;AAAA;AAAA;AAAA;AAAA,cA/CF,eAmDE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,QAAQ,EAAEW,CAAC,IAAID,aAAa,CAACC,CAAD,CAA5D;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,0CAAtB;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,SAA3B;AAAA,mCACE,QAAC,cAAD;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAgC,gBAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,KAAD;AACE,YAAA,KAAK,EAAEtC,GADT;AAEE,YAAA,QAAQ,EAAEsC,CAAC,IAAIrC,MAAM,CAACqC,CAAC,CAACM,MAAF,CAASC,KAAV,CAFvB;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,QAA3B;AAAA,mCACE,QAAC,cAAD;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,sBAAjB;AAAwC,gBAAA,GAAG,EAAC,YAA5C;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAC,+BAAjB;AAAiD,kBAAA,IAAI,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,EAAE,EAAC,YAAtB;AAAmC,kBAAA,MAAM;AAAzC;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAqBE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAE,EAAZ;AAAgB,YAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GA+EG,IAxFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CAlND;;GAAMxD,O;UAOaxB,W;;;KAPbwB,O;AAoNN,eAAeA,OAAf","sourcesContent":["// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Custom Components\nimport Avatar from '@Components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { sendMsg } from './store/actions'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button\n} from 'reactstrap'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\n  const { userProfile, selectedUser } = store\n\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n\n  // ** State\n  const [msg, setMsg] = useState('')\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length\n\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  // ** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n    handleUser(obj)\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar()\n    }\n  }\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\n      setMsg('')\n    }\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\n          Start Conversation\n        </h4>\n      </div>\n      {Object.keys(selectedUser).length ? (\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={selectedUser.contact.avatar}\n                  status={selectedUser.contact.status}\n                  className='avatar-border user-profile-toggle m-0 mr-1'\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\n                />\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Search size={18} className='cursor-pointer d-sm-block d-none' />\n                <UncontrolledDropdown>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      View Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Mute Notifications\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Block Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Clear Chat\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Report\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </header>\n          </div>\n\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Mic className='cursor-pointer' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText>\n                  <Label className='attachment-icon mb-0' for='attach-doc'>\n                    <Image className='cursor-pointer text-secondary' size={14} />\n                    <input type='file' id='attach-doc' hidden />\n                  </Label>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ChatLog\n"]},"metadata":{},"sourceType":"module"}