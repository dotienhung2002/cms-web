{"ast":null,"code":"import _toConsumableArray from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//** React Imports\nimport{useState,useEffect}from'react';// ** Configs\nimport themeConfig from'@Configs/themeConfig';export var useSkin=function useSkin(){// ** State\nvar _useState=useState(function(){try{// ** Get from local storage by key\nvar item=window.localStorage.getItem('skin');// ** Parse stored json or if none return initialValue\nreturn item?JSON.parse(item):themeConfig.layout.skin;}catch(error){// ** If error also return initialValue\nconsole.log(error);return themeConfig.layout.skin;}}),_useState2=_slicedToArray(_useState,2),skin=_useState2[0],setSkin=_useState2[1];// ** Return a wrapped version of useState's setter function\nvar setValue=function setValue(value){try{// ** Allow value to be a function so we have same API as useState\nvar valueToStore=value instanceof Function?value(skin):value;// ** Set state\nsetSkin(valueToStore);// ** Save to local storage\nwindow.localStorage.setItem('skin',JSON.stringify(valueToStore));}catch(error){// ** A more advanced implementation would handle the error case\nconsole.log(error);}};useEffect(function(){var _element$classList;// ** Get Body Tag\nvar element=window.document.body;// ** Define classnames for skins\nvar classNames={dark:'dark-layout',bordered:'bordered-layout','semi-dark':'semi-dark-layout'};// ** Remove all classes from Body on mount\n(_element$classList=element.classList).remove.apply(_element$classList,_toConsumableArray(element.classList));// ** If skin is not light add skin class\nif(skin!=='light'){element.classList.add(classNames[skin]);}},[skin]);return[skin,setValue];};","map":{"version":3,"names":["useState","useEffect","themeConfig","useSkin","item","window","localStorage","getItem","JSON","parse","layout","skin","error","console","log","setSkin","setValue","value","valueToStore","Function","setItem","stringify","element","document","body","classNames","dark","bordered","classList","remove","add"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/utility/hooks/useSkin.js"],"sourcesContent":["//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@Configs/themeConfig'\n\nexport const useSkin = () => {\n  // ** State\n  const [skin, setSkin] = useState(() => {\n    try {\n      // ** Get from local storage by key\n      const item = window.localStorage.getItem('skin')\n      // ** Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : themeConfig.layout.skin\n    } catch (error) {\n      // ** If error also return initialValue\n      console.log(error)\n      return themeConfig.layout.skin\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(skin) : value\n      // ** Set state\n      setSkin(valueToStore)\n      // ** Save to local storage\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (skin !== 'light') {\n      element.classList.add(classNames[skin])\n    }\n  }, [skin])\n\n  return [skin, setValue]\n}\n"],"mappings":"kVAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA,MAAOC,YAAW,KAAM,sBAAsB,CAE9C,MAAO,IAAMC,QAAO,CAAG,QAAVA,QAAO,EAAS,CAC3B;AACA,cAAwBH,QAAQ,CAAC,UAAM,CACrC,GAAI,CACF;AACA,GAAMI,KAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAChD;AACA,MAAOH,KAAI,CAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAGF,WAAW,CAACQ,MAAM,CAACC,IAAI,CAC1D,CAAE,MAAOC,KAAK,CAAE,CACd;AACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAOV,YAAW,CAACQ,MAAM,CAACC,IAAI,CAChC,CACF,CAAC,CAAC,wCAXKA,IAAI,eAAEI,OAAO,eAapB;AACA,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAGC,KAAK,CAAI,CACxB,GAAI,CACF;AACA,GAAMC,aAAY,CAAGD,KAAK,WAAYE,SAAQ,CAAGF,KAAK,CAACN,IAAI,CAAC,CAAGM,KAAK,CACpE;AACAF,OAAO,CAACG,YAAY,CAAC,CACrB;AACAb,MAAM,CAACC,YAAY,CAACc,OAAO,CAAC,MAAM,CAAEZ,IAAI,CAACa,SAAS,CAACH,YAAY,CAAC,CAAC,CACnE,CAAE,MAAON,KAAK,CAAE,CACd;AACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAEDX,SAAS,CAAC,UAAM,wBACd;AACA,GAAMqB,QAAO,CAAGjB,MAAM,CAACkB,QAAQ,CAACC,IAAI,CAEpC;AACA,GAAMC,WAAU,CAAG,CACjBC,IAAI,CAAE,aAAa,CACnBC,QAAQ,CAAE,iBAAiB,CAC3B,WAAW,CAAE,kBACf,CAAC,CAED;AACA,oBAAAL,OAAO,CAACM,SAAS,EAACC,MAAM,6CAAIP,OAAO,CAACM,SAAS,EAAC,CAE9C;AACA,GAAIjB,IAAI,GAAK,OAAO,CAAE,CACpBW,OAAO,CAACM,SAAS,CAACE,GAAG,CAACL,UAAU,CAACd,IAAI,CAAC,CAAC,CACzC,CACF,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV,MAAO,CAACA,IAAI,CAAEK,QAAQ,CAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module"}