{"ast":null,"code":"import axios from 'axios'; // ** Get Bookmarks Array from @fakeDB\n\nexport const getBookmarks = () => {\n  return dispatch => {\n    return axios.get('/api/bookmarks/data').then(response => {\n      dispatch({\n        type: 'GET_BOOKMARKS',\n        data: response.data.suggestions,\n        bookmarks: response.data.bookmarks\n      });\n    });\n  };\n}; // ** Update & Get Updated Bookmarks Array\n\nexport const updateBookmarked = id => {\n  return dispatch => {\n    return axios.post('/api/bookmarks/update', {\n      id\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_BOOKMARKED',\n        id\n      });\n    });\n  };\n}; // ** Handle Bookmarks & Main Search Queries\n\nexport const handleSearchQuery = val => dispatch => dispatch({\n  type: 'HANDLE_SEARCH_QUERY',\n  val\n});","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/redux/actions/navbar/index.tsx"],"names":["axios","getBookmarks","dispatch","get","then","response","type","data","suggestions","bookmarks","updateBookmarked","id","post","handleSearchQuery","val"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACjB,WAAOF,KAAK,CAACG,GAAN,CAAU,qBAAV,EAAiCC,IAAjC,CAAsCC,QAAQ,IAAI;AACvDH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcC,WAFb;AAGPC,QAAAA,SAAS,EAAEJ,QAAQ,CAACE,IAAT,CAAcE;AAHlB,OAAD,CAAR;AAKD,KANM,CAAP;AAOD,GARD;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,EAAE,IAAI;AACpC,SAAOT,QAAQ,IAAI;AACjB,WAAOF,KAAK,CAACY,IAAN,CAAW,uBAAX,EAAoC;AAAED,MAAAA;AAAF,KAApC,EAA4CP,IAA5C,CAAiD,MAAM;AAC5DF,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,mBAAR;AAA6BK,QAAAA;AAA7B,OAAD,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAME,iBAAiB,GAAGC,GAAG,IAAIZ,QAAQ,IAAIA,QAAQ,CAAC;AAAEI,EAAAA,IAAI,EAAE,qBAAR;AAA+BQ,EAAAA;AAA/B,CAAD,CAArD","sourcesContent":["import axios from 'axios'\n\n// ** Get Bookmarks Array from @fakeDB\nexport const getBookmarks = () => {\n  return dispatch => {\n    return axios.get('/api/bookmarks/data').then(response => {\n      dispatch({\n        type: 'GET_BOOKMARKS',\n        data: response.data.suggestions,\n        bookmarks: response.data.bookmarks\n      })\n    })\n  }\n}\n\n// ** Update & Get Updated Bookmarks Array\nexport const updateBookmarked = id => {\n  return dispatch => {\n    return axios.post('/api/bookmarks/update', { id }).then(() => {\n      dispatch({ type: 'UPDATE_BOOKMARKED', id })\n    })\n  }\n}\n\n// ** Handle Bookmarks & Main Search Queries\nexport const handleSearchQuery = val => dispatch => dispatch({ type: 'HANDLE_SEARCH_QUERY', val })\n"]},"metadata":{},"sourceType":"module"}