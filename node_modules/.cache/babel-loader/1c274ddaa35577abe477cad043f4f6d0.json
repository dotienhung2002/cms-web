{"ast":null,"code":"// ** UseJWT import to get config\n// import useJwt from '@src/auth/jwt/useJwt'\n// const config = useJwt.jwtConfig\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data: data.information,\n      config: {},\n      accessToken: data.accessToken,\n      refreshToken: data.refreshToken\n    }); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem('accessToken', JSON.stringify(data.accessToken));\n    localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken));\n  };\n}; // ** Handle User Logout\n\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGOUT',\n      'accessToken': null,\n      'refreshToken': null\n    }); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  };\n};","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/redux/actions/auth/index.tsx"],"names":["handleLogin","data","dispatch","type","information","config","accessToken","refreshToken","localStorage","setItem","JSON","stringify","handleLogout","removeItem"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA,OAAO,MAAMA,WAAW,GAAGC,IAAI,IAAI;AACjC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,OADC;AAEPF,MAAAA,IAAI,EAACA,IAAI,CAACG,WAFH;AAGPC,MAAAA,MAAM,EAAE,EAHD;AAIPC,MAAAA,WAAW,EAAEL,IAAI,CAACK,WAJX;AAKPC,MAAAA,YAAY,EAAEN,IAAI,CAACM;AALZ,KAAD,CAAR,CADiB,CASjB;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAjC;AACAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACK,WAApB,CAApC;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACM,YAApB,CAArC;AACD,GAbD;AAcD,CAfM,C,CAiBP;;AACA,OAAO,MAAMK,YAAY,GAAG,MAAM;AAChC,SAAOV,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkB,qBAAe,IAAjC;AAAuC,sBAAgB;AAAvD,KAAD,CAAR,CADiB,CAGjB;;AACAK,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAL,IAAAA,YAAY,CAACK,UAAb,CAAwB,aAAxB;AACAL,IAAAA,YAAY,CAACK,UAAb,CAAwB,cAAxB;AACD,GAPD;AAQD,CATM","sourcesContent":["// ** UseJWT import to get config\n// import useJwt from '@src/auth/jwt/useJwt'\n\n// const config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data:data.information,\n      config: {},\n      accessToken: data.accessToken,\n      refreshToken: data.refreshToken\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem('accessToken', JSON.stringify(data.accessToken))\n    localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', 'accessToken': null, 'refreshToken': null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('refreshToken')\n  }\n}"]},"metadata":{},"sourceType":"module"}