{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/alerts/index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport Prism from 'prismjs';\nimport { Row, Col, CardText } from 'reactstrap';\nimport Card from '@Components/card-snippet';\nimport DefaultAlert from './DefaultAlert';\nimport AlertTitle from './AlertTitle';\nimport AlertColors from './AlertColors';\nimport AlertDismissable from './AlertDismissable';\nimport AlertUncontrolled from './AlertUncontrolled';\nimport AlertIcon from './AlertIcon';\nimport AlertExample from './AlertExample';\nimport { defaultAlert, alertColors, alertTitle, alertDismissable, alertUncontrolled, alertIcon, alertExample } from './AlertSourceCode';\nimport BreadCrumbs from '@Components/breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alerts = () => {\n  _s();\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n      breadCrumbTitle: \"Alerts\",\n      breadCrumbParent: \"Components\",\n      breadCrumbActive: \"Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Default\",\n          code: defaultAlert,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Alerts are available for any length of text, as well as an optional dismiss button. Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 103\n            }, this), ' ', \"Component & \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 27\n            }, this), \" prop for alert with all theme colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DefaultAlert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Title\",\n          code: alertTitle,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Add a title to the alert with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".alert-heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Colors\",\n          code: alertColors,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), \" prop to for alert with all theme colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertColors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Dismissable Alert\",\n          code: alertDismissable,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Using \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"isOpen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"toggle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 45\n            }, this), \" you can create a dismissable alert.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDismissable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Uncontrolled Alert\",\n          code: alertUncontrolled,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: \"For the most basic use-case an uncontrolled component can provide the functionality wanted without the need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle props to work.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertUncontrolled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Icon\",\n          code: alertIcon,\n          children: /*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Example\",\n          code: alertExample,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: \"An example would be to have an input and when a condition is met, show the alert.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertExample, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alerts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Alerts;\nexport default Alerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/alerts/index.js"],"names":["Fragment","useEffect","Prism","Row","Col","CardText","Card","DefaultAlert","AlertTitle","AlertColors","AlertDismissable","AlertUncontrolled","AlertIcon","AlertExample","defaultAlert","alertColors","alertTitle","alertDismissable","alertUncontrolled","alertIcon","alertExample","BreadCrumbs","Alerts","highlightAll"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from 'react'\nimport Prism from 'prismjs'\nimport { Row, Col, CardText } from 'reactstrap'\nimport Card from '@Components/card-snippet'\nimport DefaultAlert from './DefaultAlert'\nimport AlertTitle from './AlertTitle'\nimport AlertColors from './AlertColors'\nimport AlertDismissable from './AlertDismissable'\nimport AlertUncontrolled from './AlertUncontrolled'\nimport AlertIcon from './AlertIcon'\nimport AlertExample from './AlertExample'\nimport {\n  defaultAlert,\n  alertColors,\n  alertTitle,\n  alertDismissable,\n  alertUncontrolled,\n  alertIcon,\n  alertExample\n} from './AlertSourceCode'\nimport BreadCrumbs from '@Components/breadcrumbs'\n\nconst Alerts = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Alerts' breadCrumbParent='Components' breadCrumbActive='Alerts' />\n      <Row>\n        <Col sm='12'>\n          <Card title='Default' code={defaultAlert}>\n            <CardText>\n              Alerts are available for any length of text, as well as an optional dismiss button. Use <code>Alert</code>{' '}\n              Component & <code>color</code> prop for alert with all theme colors.\n            </CardText>\n            <DefaultAlert />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Title' code={alertTitle}>\n            <CardText>\n              Add a title to the alert with the <code>.alert-heading</code>\n            </CardText>\n            <AlertTitle />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Colors' code={alertColors}>\n            <CardText>\n              Use <code>color</code> prop to for alert with all theme colors.\n            </CardText>\n            <AlertColors />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Dismissable Alert' code={alertDismissable}>\n            <CardText>\n              Using <code>isOpen</code> and <code>toggle</code> you can create a dismissable alert.\n            </CardText>\n            <AlertDismissable />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Uncontrolled Alert' code={alertUncontrolled}>\n            <CardText>\n              For the most basic use-case an uncontrolled component can provide the functionality wanted without the\n              need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle\n              props to work.\n            </CardText>\n            <AlertUncontrolled />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icon' code={alertIcon}>\n            <AlertIcon />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Example' code={alertExample}>\n            <CardText>An example would be to have an input and when a condition is met, show the alert.</CardText>\n            <AlertExample />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Alerts\n"]},"metadata":{},"sourceType":"module"}