{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/TooltipControlled.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { Button, Tooltip } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TooltipControlled = function TooltipControlled() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltipOpen = _useState2[0],\n      setTooltipOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n      color: \"primary\",\n      id: \"ControlledExample\",\n      children: \"Controlled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"top\",\n      isOpen: tooltipOpen,\n      target: \"ControlledExample\",\n      toggle: function toggle() {\n        return setTooltipOpen(!tooltipOpen);\n      },\n      children: \"Hello World !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TooltipControlled, \"W4bzAaoI73SwFEIR2Qbo7WjEE4o=\");\n\n_c = TooltipControlled;\nexport default TooltipControlled;\n\nvar _c;\n\n$RefreshReg$(_c, \"TooltipControlled\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/TooltipControlled.js"],"names":["Fragment","useState","Button","Tooltip","TooltipControlled","tooltipOpen","setTooltipOpen"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA,kBACQH,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACvBI,WADuB;AAAA,MACVC,cADU;;AAG9B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,SAArB;AAA+B,MAAA,EAAE,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,MAAM,EAAED,WAFV;AAGE,MAAA,MAAM,EAAC,mBAHT;AAIE,MAAA,MAAM,EAAE;AAAA,eAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAlBD;;GAAMD,iB;;KAAAA,iB;AAmBN,eAAeA,iBAAf","sourcesContent":["import { Fragment, useState } from 'react'\nimport { Button, Tooltip } from 'reactstrap'\n\nconst TooltipControlled = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false)\n\n  return (\n    <Fragment>\n      <Button.Ripple color='primary' id='ControlledExample'>\n        Controlled\n      </Button.Ripple>\n      <Tooltip\n        placement='top'\n        isOpen={tooltipOpen}\n        target='ControlledExample'\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Hello World !\n      </Tooltip>\n    </Fragment>\n  )\n}\nexport default TooltipControlled\n"]},"metadata":{},"sourceType":"module"}