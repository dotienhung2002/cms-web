{"ast":null,"code":"import axios from 'axios'; // ** Fetch Events\n\nexport const fetchEvents = calendars => {\n  return dispatch => {\n    axios.get('/apps/calendar/events', {\n      calendars\n    }).then(response => {\n      dispatch({\n        type: 'FETCH_EVENTS',\n        events: response.data\n      });\n    });\n  };\n}; // ** Add Event\n\nexport const addEvent = event => {\n  return (dispatch, getState) => {\n    axios.post('/apps/calendar/add-event', {\n      event\n    }).then(() => {\n      dispatch({\n        type: 'ADD_EVENT'\n      });\n      dispatch(fetchEvents(getState().calendar.selectedCalendars));\n    });\n  };\n}; // ** Update Event\n\nexport const updateEvent = event => {\n  return dispatch => {\n    axios.post('/apps/calendar/update-event', {\n      event\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_EVENT'\n      });\n    });\n  };\n}; // ** Filter Events\n\nexport const updateFilter = filter => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_FILTERS',\n      filter\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n}; // ** Add/Remove All Filters\n\nexport const updateAllFilters = value => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_ALL_FILTERS',\n      value\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n}; // ** remove Event\n\nexport const removeEvent = id => {\n  return dispatch => {\n    axios.delete('/apps/calendar/remove-event', {\n      id\n    }).then(() => {\n      dispatch({\n        type: 'REMOVE_EVENT'\n      });\n    });\n  };\n}; // ** Select Event (get event data on click)\n\nexport const selectEvent = event => {\n  return dispatch => {\n    dispatch({\n      type: 'SELECT_EVENT',\n      event\n    });\n  };\n};","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/calendar/store/actions/index.js"],"names":["axios","fetchEvents","calendars","dispatch","get","then","response","type","events","data","addEvent","event","getState","post","calendar","selectedCalendars","updateEvent","updateFilter","filter","updateAllFilters","value","removeEvent","id","delete","selectEvent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGC,SAAS,IAAI;AACtC,SAAOC,QAAQ,IAAI;AACjBH,IAAAA,KAAK,CAACI,GAAN,CAAU,uBAAV,EAAmC;AAAEF,MAAAA;AAAF,KAAnC,EAAkDG,IAAlD,CAAuDC,QAAQ,IAAI;AACjEH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,MAAM,EAAEF,QAAQ,CAACG;AAFV,OAAD,CAAR;AAID,KALD;AAMD,GAPD;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAO,CAACR,QAAD,EAAWS,QAAX,KAAwB;AAC7BZ,IAAAA,KAAK,CAACa,IAAN,CAAW,0BAAX,EAAuC;AAAEF,MAAAA;AAAF,KAAvC,EAAkDN,IAAlD,CAAuD,MAAM;AAC3DF,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAJ,MAAAA,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR;AACD,KALD;AAMD,GAPD;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,WAAW,GAAGL,KAAK,IAAI;AAClC,SAAOR,QAAQ,IAAI;AACjBH,IAAAA,KAAK,CAACa,IAAN,CAAW,6BAAX,EAA0C;AAAEF,MAAAA;AAAF,KAA1C,EAAqDN,IAArD,CAA0D,MAAM;AAC9DF,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAJD;AAKD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMU,YAAY,GAAGC,MAAM,IAAI;AACpC,SAAO,CAACf,QAAD,EAAWS,QAAX,KAAwB;AAC7BT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,gBADC;AAEPW,MAAAA;AAFO,KAAD,CAAR;AAIAf,IAAAA,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR;AACD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMI,gBAAgB,GAAGC,KAAK,IAAI;AACvC,SAAO,CAACjB,QAAD,EAAWS,QAAX,KAAwB;AAC7BT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,oBADC;AAEPa,MAAAA;AAFO,KAAD,CAAR;AAIAjB,IAAAA,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR;AACD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMM,WAAW,GAAGC,EAAE,IAAI;AAC/B,SAAOnB,QAAQ,IAAI;AACjBH,IAAAA,KAAK,CAACuB,MAAN,CAAa,6BAAb,EAA4C;AAAED,MAAAA;AAAF,KAA5C,EAAoDjB,IAApD,CAAyD,MAAM;AAC7DF,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAJD;AAKD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMiB,WAAW,GAAGb,KAAK,IAAI;AAClC,SAAOR,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,cADC;AAEPI,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;AAMD,CAPM","sourcesContent":["import axios from 'axios'\n\n// ** Fetch Events\nexport const fetchEvents = calendars => {\n  return dispatch => {\n    axios.get('/apps/calendar/events', { calendars }).then(response => {\n      dispatch({\n        type: 'FETCH_EVENTS',\n        events: response.data\n      })\n    })\n  }\n}\n\n// ** Add Event\nexport const addEvent = event => {\n  return (dispatch, getState) => {\n    axios.post('/apps/calendar/add-event', { event }).then(() => {\n      dispatch({\n        type: 'ADD_EVENT'\n      })\n      dispatch(fetchEvents(getState().calendar.selectedCalendars))\n    })\n  }\n}\n\n// ** Update Event\nexport const updateEvent = event => {\n  return dispatch => {\n    axios.post('/apps/calendar/update-event', { event }).then(() => {\n      dispatch({\n        type: 'UPDATE_EVENT'\n      })\n    })\n  }\n}\n\n// ** Filter Events\nexport const updateFilter = filter => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_FILTERS',\n      filter\n    })\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  }\n}\n\n// ** Add/Remove All Filters\nexport const updateAllFilters = value => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_ALL_FILTERS',\n      value\n    })\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  }\n}\n\n// ** remove Event\nexport const removeEvent = id => {\n  return dispatch => {\n    axios.delete('/apps/calendar/remove-event', { id }).then(() => {\n      dispatch({\n        type: 'REMOVE_EVENT'\n      })\n    })\n  }\n}\n\n// ** Select Event (get event data on click)\nexport const selectEvent = event => {\n  return dispatch => {\n    dispatch({\n      type: 'SELECT_EVENT',\n      event\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}