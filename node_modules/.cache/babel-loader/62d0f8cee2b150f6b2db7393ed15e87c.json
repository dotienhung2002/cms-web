{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { Row, Col, CardText } from 'reactstrap';\nimport Prism from 'prismjs';\nimport BreadCrumbs from '@Components/breadcrumbs';\nimport Card from '@Components/card-snippet';\nimport TooltipControlled from './TooltipControlled';\nimport TooltipUncontrolled from './TooltipUncontrolled';\nimport TooltipPositions from './TooltipPositions';\nimport { tooltipControlled, tooltipUncontrolled, tooltipPosition } from './TooltipSourceCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tooltips = () => {\n  _s();\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n      breadCrumbTitle: \"Tooltips\",\n      breadCrumbParent: \"Components\",\n      breadCrumbActive: \"Tooltips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Controlled Tooltip\",\n          code: tooltipControlled,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"For controlled tooltips you'll have to manage state of component.controlled tooltips require\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"isOpen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"toggle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 39\n            }, this), \" props to work.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TooltipControlled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Uncontrolled Tooltip\",\n          code: tooltipUncontrolled,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"UncontrolledTooltip does not require\", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"isOpen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 51\n            }, this), \" nor \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"toggle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 75\n            }, this), \" props to work.All you have to do is provide a valid target to tooltip.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TooltipUncontrolled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Tooltip Positions\",\n          code: tooltipPosition,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            className: \"mb-0\",\n            children: [\"Use prop \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"placement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 24\n            }, this), \" to change position of tooltip.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TooltipPositions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tooltips, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Tooltips;\nexport default Tooltips;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltips\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/index.js"],"names":["Fragment","useEffect","Row","Col","CardText","Prism","BreadCrumbs","Card","TooltipControlled","TooltipUncontrolled","TooltipPositions","tooltipControlled","tooltipUncontrolled","tooltipPosition","Tooltips","highlightAll"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,QAAnB,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,QAAwE,qBAAxE;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrBb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACU,YAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,eAAe,EAAC,UAA7B;AAAwC,MAAA,gBAAgB,EAAC,YAAzD;AAAsE,MAAA,gBAAgB,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,IAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,oBAAZ;AAAiC,UAAA,IAAI,EAAEJ,iBAAvC;AAAA,kCACE,QAAC,QAAD;AAAA,uHAC+F,GAD/F,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,wBAE0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,IAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,sBAAZ;AAAmC,UAAA,IAAI,EAAEC,mBAAzC;AAAA,kCACE,QAAC,QAAD;AAAA,4EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADtC,wBAC8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD9D;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,mBAAZ;AAAgC,UAAA,IAAI,EAAEC,eAAtC;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,MAApB;AAAA,iDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAxCD;;GAAMC,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import { Fragment, useEffect } from 'react'\nimport { Row, Col, CardText } from 'reactstrap'\nimport Prism from 'prismjs'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport Card from '@Components/card-snippet'\nimport TooltipControlled from './TooltipControlled'\nimport TooltipUncontrolled from './TooltipUncontrolled'\nimport TooltipPositions from './TooltipPositions'\nimport { tooltipControlled, tooltipUncontrolled, tooltipPosition } from './TooltipSourceCode'\n\nconst Tooltips = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Tooltips' breadCrumbParent='Components' breadCrumbActive='Tooltips' />\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card title='Controlled Tooltip' code={tooltipControlled}>\n            <CardText>\n              For controlled tooltips you'll have to manage state of component.controlled tooltips require{' '}\n              <code>isOpen</code> and <code>toggle</code> props to work.\n            </CardText>\n            <TooltipControlled />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Uncontrolled Tooltip' code={tooltipUncontrolled}>\n            <CardText>\n              UncontrolledTooltip does not require<code>isOpen</code> nor <code>toggle</code> props to work.All you have\n              to do is provide a valid target to tooltip.\n            </CardText>\n            <TooltipUncontrolled />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm='12'>\n          <Card title='Tooltip Positions' code={tooltipPosition}>\n            <CardText className='mb-0'>\n              Use prop <code>placement</code> to change position of tooltip.\n            </CardText>\n            <TooltipPositions />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Tooltips\n"]},"metadata":{},"sourceType":"module"}