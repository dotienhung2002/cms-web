{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/forms/validations/react-hook-form/AsyncValidation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AsyncValidationForm = function AsyncValidationForm() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var sleep;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sleep = function sleep(ms) {\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, ms);\n                });\n              };\n\n              _context.next = 3;\n              return sleep(1000);\n\n            case 3:\n              alert('Form Submitted');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Async Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"firstNameAsync\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"firstNameAsync\",\n            name: \"firstNameAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.firstNameAsync && true,\n            placeholder: \"Bruce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"lastNameAsync\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"lastNameAsync\",\n            name: \"lastNameAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.lastNameAsync && true,\n            placeholder: \"Wayne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"emailAsync\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"emailAsync\",\n            id: \"emailAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.emailAsync && true,\n            placeholder: \"bruce.wayne@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"passwordAsync\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"passwordAsync\",\n            name: \"passwordAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.passwordAsync && true,\n            placeholder: \"passwordAsync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"d-flex mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n            className: \"mr-1\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n            outline: true,\n            color: \"secondary\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AsyncValidationForm, \"CvCMr/aFHOfjpy7piEeMvygciec=\", false, function () {\n  return [useForm];\n});\n\n_c = AsyncValidationForm;\nexport default AsyncValidationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsyncValidationForm\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/forms/validations/react-hook-form/AsyncValidation.js"],"names":["useForm","Card","CardHeader","CardTitle","CardBody","Button","Form","FormGroup","Label","Input","AsyncValidationForm","register","errors","handleSubmit","onSubmit","data","sleep","ms","Promise","resolve","setTimeout","alert","required","firstNameAsync","lastNameAsync","emailAsync","passwordAsync"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form'\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap'\n\nconst AsyncValidationForm = () => {\n  const { register, errors, handleSubmit } = useForm()\n\n  const onSubmit = async data => {\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n    await sleep(1000)\n    alert('Form Submitted')\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Async Submit</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label for='firstNameAsync'>First Name</Label>\n            <Input\n              id='firstNameAsync'\n              name='firstNameAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.firstNameAsync && true}\n              placeholder='Bruce'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='lastNameAsync'>Last Name</Label>\n            <Input\n              id='lastNameAsync'\n              name='lastNameAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.lastNameAsync && true}\n              placeholder='Wayne'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='emailAsync'>Email</Label>\n            <Input\n              type='email'\n              name='emailAsync'\n              id='emailAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.emailAsync && true}\n              placeholder='bruce.wayne@email.com'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='passwordAsync'>Password</Label>\n            <Input\n              type='password'\n              id='passwordAsync'\n              name='passwordAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.passwordAsync && true}\n              placeholder='passwordAsync'\n            />\n          </FormGroup>\n          <FormGroup className='d-flex mb-0'>\n            <Button.Ripple className='mr-1' color='primary' type='submit'>\n              Submit\n            </Button.Ripple>\n            <Button.Ripple outline color='secondary' type='reset'>\n              Reset\n            </Button.Ripple>\n          </FormGroup>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default AsyncValidationForm\n"]},"metadata":{},"sourceType":"module"}