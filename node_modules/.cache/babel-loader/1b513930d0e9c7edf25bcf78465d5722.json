{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/drag-and-drop/DndClone.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DndClone = function DndClone() {\n  _s();\n  var source1 = [{\n    text: 'Youtube',\n    color: 'light-secondary'\n  }, {\n    text: 'Facebook',\n    color: 'light-primary'\n  }, {\n    text: 'Google',\n    color: 'light-success'\n  }, {\n    text: 'Instagram',\n    color: 'light-danger'\n  }, {\n    text: 'Twitter',\n    color: 'light-info'\n  }, {\n    text: 'Discord',\n    color: 'light-warning'\n  }];\n  var source2 = [{\n    text: 'Github',\n    color: 'light-secondary'\n  }, {\n    text: 'Gitlab',\n    color: 'light-primary'\n  }, {\n    text: 'Slack',\n    color: 'light-success'\n  }, {\n    text: 'Pinterest',\n    color: 'light-danger'\n  }, {\n    text: 'Tinder',\n    color: 'light-info'\n  }, {\n    text: 'Amazon',\n    color: 'light-warning'\n  }];\n  var _useState = useState(source1),\n    _useState2 = _slicedToArray(_useState, 2),\n    list = _useState2[0],\n    setList = _useState2[1];\n  var _useState3 = useState(source2),\n    _useState4 = _slicedToArray(_useState3, 2),\n    list2 = _useState4[0],\n    setList2 = _useState4[1];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Clone List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"pull:clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, _this), \" with your group prop to clone items.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            className: \"demo-inline-spacing sortable\",\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            list: list,\n            setList: setList,\n            children: list.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, item.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            className: \"demo-inline-spacing sortable\",\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            list: list2,\n            setList: setList2,\n            children: list2.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, item.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n_s(DndClone, \"RgK3Qer4HkW56BHiYFGat0pVbJo=\");\n_c = DndClone;\nexport default DndClone;\nvar _c;\n$RefreshReg$(_c, \"DndClone\");","map":{"version":3,"names":["useState","ReactSortable","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/drag-and-drop/DndClone.js"],"sourcesContent":["import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\n\nconst DndClone = () => {\n  const source1 = [\n    {\n      text: 'Youtube',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Facebook',\n      color: 'light-primary'\n    },\n    {\n      text: 'Google',\n      color: 'light-success'\n    },\n    {\n      text: 'Instagram',\n      color: 'light-danger'\n    },\n    {\n      text: 'Twitter',\n      color: 'light-info'\n    },\n    {\n      text: 'Discord',\n      color: 'light-warning'\n    }\n  ]\n  const source2 = [\n    {\n      text: 'Github',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Gitlab',\n      color: 'light-primary'\n    },\n    {\n      text: 'Slack',\n      color: 'light-success'\n    },\n    {\n      text: 'Pinterest',\n      color: 'light-danger'\n    },\n    {\n      text: 'Tinder',\n      color: 'light-info'\n    },\n    {\n      text: 'Amazon',\n      color: 'light-warning'\n    }\n  ]\n\n  const [list, setList] = useState(source1)\n  const [list2, setList2] = useState(source2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Clone List</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add <code>pull:clone</code> with your group prop to clone items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 1</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list}\n              setList={setList}\n            >\n              {list.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 2</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list2}\n              setList={setList2}\n            >\n              {list2.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndClone\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}