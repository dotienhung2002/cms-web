{"ast":null,"code":"import{Fragment,useEffect}from'react';import Prism from'prismjs';import{Row,Col,CardText}from'reactstrap';import FilledButtons from'./ButtonsFilled';import OutlineButtons from'./ButtonsOutline';import FlatButtons from'./ButtonsFlat';import GradientButtons from'./ButtonsGradient';import ReliefButtons from'./ButtonsRelief';import RoundButtons from'./ButtonsRound';import IconButtons from'./ButtonsIcon';import IconOnlyButtons from'./ButtonsIconOnly';import ButtonGroups from'./ButtonGroup';import ButtonSizes from'./ButtonSizes';import ButtonBlock from'./ButtonBlock';import ButtonTags from'./ButtonTags';import ButtonCheckboxRadio from'./ButtonCheckboxRadio';import BreadCrumbs from'@Components/breadcrumbs';import Card from'@Components/card-snippet';import{filledButtons,outlineButtons,flatButtons,gradientButtons,reliefButtons,roundButtons,iconButtons,iconOnlyButtons,buttonGroup,buttonSizes,buttonBlock,buttonTags,buttonCBRadio}from'./ButtonsSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Buttons=function Buttons(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Buttons\",breadCrumbParent:\"Components\",breadCrumbActive:\"Buttons\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Filled\",code:filledButtons,children:[/*#__PURE__*/_jsx(CardText,{className:\"mb-0\",children:\"Reactstrap includes six predefined button styles, each serving its own semantic purpose.\"}),/*#__PURE__*/_jsx(FilledButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Outline\",code:outlineButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"outline\"}),\" with button tag to create an outline button.\"]}),/*#__PURE__*/_jsx(OutlineButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Flat\",code:flatButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"flat-\",'colorName',\"\\\"\"]}),\" to create a flat button.\"]}),/*#__PURE__*/_jsx(FlatButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Gradient\",code:gradientButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"gradient-\",'colorName',\"\\\"\"]}),\" to create a gradient button.\"]}),/*#__PURE__*/_jsx(GradientButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Relief\",code:reliefButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=relief-\",'colorName']}),\" to create a relief button.\"]}),/*#__PURE__*/_jsx(ReliefButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Round\",code:roundButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".round\"}),\" create a square button.\"]}),/*#__PURE__*/_jsx(RoundButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Icons\",code:iconButtons,children:/*#__PURE__*/_jsx(IconButtons,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icon Only\",code:iconOnlyButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"You can use class \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can create a rounded button by using\",' ',/*#__PURE__*/_jsx(\"code\",{children:\".rounded-circle\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can only use \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\" when you only want icon in your button\"]}),/*#__PURE__*/_jsx(IconOnlyButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Button Groups\",code:buttonGroup,children:[/*#__PURE__*/_jsx(CardText,{children:\"Group a series of buttons together on a single line with the button group.\"}),/*#__PURE__*/_jsx(ButtonGroups,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Checkbox & radio group\",code:buttonCBRadio,children:/*#__PURE__*/_jsx(ButtonCheckboxRadio,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:buttonSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"size\"}),\" prop to change size of a button.\"]}),/*#__PURE__*/_jsx(ButtonSizes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Block Level Buttons\",code:buttonBlock,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"block\"}),\" to create a block button.\"]}),/*#__PURE__*/_jsx(ButtonBlock,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Button Tags\",code:buttonTags,children:/*#__PURE__*/_jsx(ButtonTags,{})})})]})]});};export default Buttons;","map":{"version":3,"names":["Fragment","useEffect","Prism","Row","Col","CardText","FilledButtons","OutlineButtons","FlatButtons","GradientButtons","ReliefButtons","RoundButtons","IconButtons","IconOnlyButtons","ButtonGroups","ButtonSizes","ButtonBlock","ButtonTags","ButtonCheckboxRadio","BreadCrumbs","Card","filledButtons","outlineButtons","flatButtons","gradientButtons","reliefButtons","roundButtons","iconButtons","iconOnlyButtons","buttonGroup","buttonSizes","buttonBlock","buttonTags","buttonCBRadio","Buttons","highlightAll"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/buttons/index.js"],"sourcesContent":["import { Fragment, useEffect } from 'react'\nimport Prism from 'prismjs'\nimport { Row, Col, CardText } from 'reactstrap'\nimport FilledButtons from './ButtonsFilled'\nimport OutlineButtons from './ButtonsOutline'\nimport FlatButtons from './ButtonsFlat'\nimport GradientButtons from './ButtonsGradient'\nimport ReliefButtons from './ButtonsRelief'\nimport RoundButtons from './ButtonsRound'\nimport IconButtons from './ButtonsIcon'\nimport IconOnlyButtons from './ButtonsIconOnly'\nimport ButtonGroups from './ButtonGroup'\nimport ButtonSizes from './ButtonSizes'\nimport ButtonBlock from './ButtonBlock'\nimport ButtonTags from './ButtonTags'\nimport ButtonCheckboxRadio from './ButtonCheckboxRadio'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport Card from '@Components/card-snippet'\nimport {\n  filledButtons,\n  outlineButtons,\n  flatButtons,\n  gradientButtons,\n  reliefButtons,\n  roundButtons,\n  iconButtons,\n  iconOnlyButtons,\n  buttonGroup,\n  buttonSizes,\n  buttonBlock,\n  buttonTags,\n  buttonCBRadio\n} from './ButtonsSourceCode'\n\nconst Buttons = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Buttons' breadCrumbParent='Components' breadCrumbActive='Buttons' />\n      <Row>\n        <Col sm='12'>\n          <Card title='Filled' code={filledButtons}>\n            <CardText className='mb-0'>\n              Reactstrap includes six predefined button styles, each serving its own semantic purpose.\n            </CardText>\n            <FilledButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Outline' code={outlineButtons}>\n            <CardText className='mb-0'>\n              Use prop <code>outline</code> with button tag to create an outline button.\n            </CardText>\n            <OutlineButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Flat' code={flatButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=\"flat-{'colorName'}\"</code> to create a flat button.\n            </CardText>\n            <FlatButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Gradient' code={gradientButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=\"gradient-{'colorName'}\"</code> to create a gradient button.\n            </CardText>\n            <GradientButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Relief' code={reliefButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=relief-{'colorName'}</code> to create a relief button.\n            </CardText>\n            <ReliefButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Round' code={roundButtons}>\n            <CardText className='mb-0'>\n              Use class <code>.round</code> create a square button.\n            </CardText>\n            <RoundButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icons' code={iconButtons}>\n            <IconButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icon Only' code={iconOnlyButtons}>\n            <CardText className='mb-0'>\n              You can use class <code>.btn-icon</code>. You can create a rounded button by using{' '}\n              <code>.rounded-circle</code> with <code>.btn-icon</code>. You can only use <code>.btn-icon</code> when you\n              only want icon in your button\n            </CardText>\n            <IconOnlyButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Button Groups' code={buttonGroup}>\n            <CardText>Group a series of buttons together on a single line with the button group.</CardText>\n            <ButtonGroups />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Checkbox & radio group' code={buttonCBRadio}>\n            <ButtonCheckboxRadio />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Sizes' code={buttonSizes}>\n            <CardText className='mb-0'>\n              Use <code>size</code> prop to change size of a button.\n            </CardText>\n            <ButtonSizes />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Block Level Buttons' code={buttonBlock}>\n            <CardText>\n              Use prop <code>block</code> to create a block button.\n            </CardText>\n            <ButtonBlock />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Button Tags' code={buttonTags}>\n            <ButtonTags />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Buttons\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}