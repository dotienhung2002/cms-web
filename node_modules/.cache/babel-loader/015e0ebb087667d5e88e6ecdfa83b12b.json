{"ast":null,"code":"//** React Imports\nimport{useEffect}from'react';// ** Store & Actions\nimport{handleRTL}from'@Store/actions/layout';import{useDispatch,useSelector}from'react-redux';export var useRTL=function useRTL(){// ** Store Vars\nvar dispatch=useDispatch();var isRtl=useSelector(function(state){return state.layout.isRTL;});// ** Return a wrapped version of useState's setter function\nvar setValue=function setValue(value){try{// ** Allow value to be a function so we have same API as useState\nvar valueToStore=value instanceof Function?value(isRtl):value;dispatch(handleRTL(valueToStore));}catch(error){// ** A more advanced implementation would handle the error case\nconsole.log(error);}};useEffect(function(){// ** Get HTML Tag\nvar element=document.getElementsByTagName('html')[0];// ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\nif(isRtl){element.setAttribute('dir','rtl');}else{element.setAttribute('dir','ltr');}},[isRtl]);return[isRtl,setValue];};","map":{"version":3,"names":["useEffect","handleRTL","useDispatch","useSelector","useRTL","dispatch","isRtl","state","layout","isRTL","setValue","value","valueToStore","Function","error","console","log","element","document","getElementsByTagName","setAttribute"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/utility/hooks/useRTL.js"],"sourcesContent":["//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@Store/actions/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(isRtl) : value\n      dispatch(handleRTL(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n"],"mappings":"AAAA;AACA,OAASA,SAAS,KAAQ,OAAO,CAEjC;AACA,OAASC,SAAS,KAAQ,uBAAuB,CACjD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,MAAO,IAAMC,OAAM,CAAG,QAATA,OAAM,EAAS,CAC1B;AACA,GAAMC,SAAQ,CAAGH,WAAW,EAAE,CAC9B,GAAMI,MAAK,CAAGH,WAAW,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACC,MAAM,CAACC,KAAK,GAAC,CAEtD;AACA,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAGC,KAAK,CAAI,CACxB,GAAI,CACF;AACA,GAAMC,aAAY,CAAGD,KAAK,WAAYE,SAAQ,CAAGF,KAAK,CAACL,KAAK,CAAC,CAAGK,KAAK,CACrEN,QAAQ,CAACJ,SAAS,CAACW,YAAY,CAAC,CAAC,CACnC,CAAE,MAAOE,KAAK,CAAE,CACd;AACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAEDd,SAAS,CAAC,UAAM,CACd;AACA,GAAMiB,QAAO,CAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAExD;AACA,GAAIb,KAAK,CAAE,CACTW,OAAO,CAACG,YAAY,CAAC,KAAK,CAAE,KAAK,CAAC,CACpC,CAAC,IAAM,CACLH,OAAO,CAACG,YAAY,CAAC,KAAK,CAAE,KAAK,CAAC,CACpC,CACF,CAAC,CAAE,CAACd,KAAK,CAAC,CAAC,CAEX,MAAO,CAACA,KAAK,CAAEI,QAAQ,CAAC,CAC1B,CAAC"},"metadata":{},"sourceType":"module"}