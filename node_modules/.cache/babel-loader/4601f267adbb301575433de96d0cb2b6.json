{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/avatar/index.js\";\n// ** React Imports\nimport { forwardRef } from 'react'; // ** Third Party Components\n\nimport Proptypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props; // ** Function to extract initials from content\n\n  const getInitials = str => {\n    const results = [];\n    const wordArray = str.split(' ');\n    wordArray.forEach(e => {\n      results.push(e[0]);\n    });\n    return results.join('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    className: classnames('avatar', {\n      [className]: className,\n      [`bg-${color}`]: color,\n      [`avatar-${size}`]: size\n    }),\n    ref: ref,\n    ...rest,\n    children: [img === false || img === undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames('avatar-content', {\n        'position-relative': badgeUp\n      }),\n      style: contentStyles,\n      children: [initials ? getInitials(content) : content, icon ? icon : null, badgeUp ? /*#__PURE__*/_jsxDEV(Badge, {\n        color: badgeColor ? badgeColor : 'primary',\n        className: \"badge-sm badge-up\",\n        pill: true,\n        children: badgeText ? badgeText : '0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classnames({\n        [imgClassName]: imgClassName\n      }),\n      src: img,\n      alt: \"avatarImg\",\n      height: imgHeight && !size ? imgHeight : 32,\n      width: imgWidth && !size ? imgWidth : 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames({\n        [`avatar-status-${status}`]: status,\n        [`avatar-status-${size}`]: size\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Avatar;\nexport default Avatar; // ** PropTypes\n\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n  color: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.');\n    }\n\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.');\n    }\n\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!');\n    }\n  }\n\n}; // ** Default Props\n\nAvatar.defaultProps = {\n  tag: 'div'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Avatar$forwardRef\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/avatar/index.js"],"names":["forwardRef","Proptypes","Badge","classnames","Avatar","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","tag","Tag","contentStyles","rest","getInitials","str","results","wordArray","split","forEach","e","push","join","undefined","propTypes","string","src","oneOfType","func","bool","node","object","number","oneOf","Error","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n"]},"metadata":{},"sourceType":"module"}