{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/views/components/tooltips/TooltipControlled.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Fragment, useState } from 'react';\nimport { Button, Tooltip } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TooltipControlled = function TooltipControlled() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    tooltipOpen = _useState2[0],\n    setTooltipOpen = _useState2[1];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n      color: \"primary\",\n      id: \"ControlledExample\",\n      children: \"Controlled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"top\",\n      isOpen: tooltipOpen,\n      target: \"ControlledExample\",\n      toggle: function toggle() {\n        return setTooltipOpen(!tooltipOpen);\n      },\n      children: \"Hello World !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n_s(TooltipControlled, \"W4bzAaoI73SwFEIR2Qbo7WjEE4o=\");\n_c = TooltipControlled;\nexport default TooltipControlled;\nvar _c;\n$RefreshReg$(_c, \"TooltipControlled\");","map":{"version":3,"names":["Fragment","useState","Button","Tooltip","TooltipControlled","tooltipOpen","setTooltipOpen"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/views/components/tooltips/TooltipControlled.js"],"sourcesContent":["import { Fragment, useState } from 'react'\nimport { Button, Tooltip } from 'reactstrap'\n\nconst TooltipControlled = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false)\n\n  return (\n    <Fragment>\n      <Button.Ripple color='primary' id='ControlledExample'>\n        Controlled\n      </Button.Ripple>\n      <Tooltip\n        placement='top'\n        isOpen={tooltipOpen}\n        target='ControlledExample'\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Hello World !\n      </Tooltip>\n    </Fragment>\n  )\n}\nexport default TooltipControlled\n"],"mappings":";;;;AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,MAAM,EAAEC,OAAO,QAAQ,YAAY;AAAA;AAE5C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;EAAA;EAC9B,gBAAsCH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CI,WAAW;IAAEC,cAAc;EAElC,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,MAAM,CAAC,MAAM;MAAC,KAAK,EAAC,SAAS;MAAC,EAAE,EAAC,mBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SAErC,eAChB,QAAC,OAAO;MACN,SAAS,EAAC,KAAK;MACf,MAAM,EAAED,WAAY;MACpB,MAAM,EAAC,mBAAmB;MAC1B,MAAM,EAAE;QAAA,OAAMC,cAAc,CAAC,CAACD,WAAW,CAAC;MAAA,CAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SAGnC;EAAA;IAAA;IAAA;IAAA;EAAA,SACD;AAEf,CAAC;AAAA,GAlBKD,iBAAiB;AAAA,KAAjBA,iBAAiB;AAmBvB,eAAeA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}