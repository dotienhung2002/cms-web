{"ast":null,"code":"import{Fragment,useEffect}from'react';import{Row,Col,CardText}from'reactstrap';import Prism from'prismjs';import BreadCrumbs from'@Components/breadcrumbs';import Card from'@Components/card-snippet';import ProgressBasic from'./ProgressBasic';import ProgressColored from'./ProgressColored';import ProgressMultipleStacked from'./ProgressMultipleStacked';import ProgressLabeled from'./ProgressLabeled';import ProgressStriped from'./ProgressStriped';import ProgressAnimated from'./ProgressAnimated';import{progressAnimated,progressBasic,progressColored,progressMultipleStacked,progressLabeled,progressStriped}from'./ProgressSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Progress=function Progress(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Progress\",breadCrumbParent:\"Components\",breadCrumbActive:\"Progress\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Basic Progress\",code:progressBasic,children:/*#__PURE__*/_jsx(ProgressBasic,{})})}),/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Colored Progress\",code:progressColored,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"progress-bar-[color]\"}),\" class with progress to change progress color.\"]}),/*#__PURE__*/_jsx(ProgressColored,{})]})}),/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Labeled Progress\",code:progressLabeled,children:[/*#__PURE__*/_jsx(CardText,{children:\"Add text between progress tag to create a labeled progress bar.\"}),/*#__PURE__*/_jsx(ProgressLabeled,{})]})}),/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Multiple Stacked\",code:progressMultipleStacked,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"To create a multi colored progress wrap all of your progresses in with \",/*#__PURE__*/_jsx(\"code\",{children:\"multi\"}),\" prop.\"]}),/*#__PURE__*/_jsx(ProgressMultipleStacked,{})]})}),/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Striped Progress\",code:progressStriped,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"striped\"}),\" prop with progress to create a striped progress bar.\"]}),/*#__PURE__*/_jsx(ProgressStriped,{})]})}),/*#__PURE__*/_jsx(Col,{lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Animated Progress\",code:progressAnimated,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"animated\"}),\" prop with progress to animate progress bar.\"]}),/*#__PURE__*/_jsx(ProgressAnimated,{})]})})]})]});};export default Progress;","map":{"version":3,"names":["Fragment","useEffect","Row","Col","CardText","Prism","BreadCrumbs","Card","ProgressBasic","ProgressColored","ProgressMultipleStacked","ProgressLabeled","ProgressStriped","ProgressAnimated","progressAnimated","progressBasic","progressColored","progressMultipleStacked","progressLabeled","progressStriped","Progress","highlightAll"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/progress/index.js"],"sourcesContent":["import { Fragment, useEffect } from 'react'\nimport { Row, Col, CardText } from 'reactstrap'\nimport Prism from 'prismjs'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport Card from '@Components/card-snippet'\nimport ProgressBasic from './ProgressBasic'\nimport ProgressColored from './ProgressColored'\nimport ProgressMultipleStacked from './ProgressMultipleStacked'\nimport ProgressLabeled from './ProgressLabeled'\nimport ProgressStriped from './ProgressStriped'\nimport ProgressAnimated from './ProgressAnimated'\nimport {\n  progressAnimated,\n  progressBasic,\n  progressColored,\n  progressMultipleStacked,\n  progressLabeled,\n  progressStriped\n} from './ProgressSourceCode'\n\nconst Progress = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Progress' breadCrumbParent='Components' breadCrumbActive='Progress' />\n      <Row>\n        <Col lg='12'>\n          <Card title='Basic Progress' code={progressBasic}>\n            <ProgressBasic />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Colored Progress' code={progressColored}>\n            <CardText>\n              Use <code>progress-bar-[color]</code> class with progress to change progress color.\n            </CardText>\n            <ProgressColored />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Labeled Progress' code={progressLabeled}>\n            <CardText>Add text between progress tag to create a labeled progress bar.</CardText>\n            <ProgressLabeled />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Multiple Stacked' code={progressMultipleStacked}>\n            <CardText>\n              To create a multi colored progress wrap all of your progresses in with <code>multi</code> prop.\n            </CardText>\n            <ProgressMultipleStacked />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Striped Progress' code={progressStriped}>\n            <CardText>\n              Use <code>striped</code> prop with progress to create a striped progress bar.\n            </CardText>\n            <ProgressStriped />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Animated Progress' code={progressAnimated}>\n            <CardText>\n              Use <code>animated</code> prop with progress to animate progress bar.\n            </CardText>\n            <ProgressAnimated />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Progress\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,GAAG,CAAEC,GAAG,CAAEC,QAAQ,KAAQ,YAAY,CAC/C,MAAOC,MAAK,KAAM,SAAS,CAC3B,MAAOC,YAAW,KAAM,yBAAyB,CACjD,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,cAAa,KAAM,iBAAiB,CAC3C,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAOC,wBAAuB,KAAM,2BAA2B,CAC/D,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAOC,iBAAgB,KAAM,oBAAoB,CACjD,OACEC,gBAAgB,CAChBC,aAAa,CACbC,eAAe,CACfC,uBAAuB,CACvBC,eAAe,CACfC,eAAe,KACV,sBAAsB,yFAE7B,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrBnB,SAAS,CAAC,UAAM,CACdI,KAAK,CAACgB,YAAY,EAAE,CACtB,CAAC,CAAE,EAAE,CAAC,CACN,mBACE,MAAC,QAAQ,yBACP,KAAC,WAAW,EAAC,eAAe,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAG,cACpG,MAAC,GAAG,yBACF,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,KAAC,IAAI,EAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAEN,aAAc,uBAC/C,KAAC,aAAa,IAAG,EACZ,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAEC,eAAgB,wBACnD,MAAC,QAAQ,gCACH,8CAAiC,oDAC5B,cACX,KAAC,eAAe,IAAG,GACd,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAEE,eAAgB,wBACnD,KAAC,QAAQ,8EAA2E,cACpF,KAAC,eAAe,IAAG,GACd,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAED,uBAAwB,wBAC3D,MAAC,QAAQ,mGACgE,+BAAkB,YAChF,cACX,KAAC,uBAAuB,IAAG,GACtB,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAEE,eAAgB,wBACnD,MAAC,QAAQ,gCACH,iCAAoB,2DACf,cACX,KAAC,eAAe,IAAG,GACd,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,IAAI,uBACV,MAAC,IAAI,EAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAEL,gBAAiB,wBACrD,MAAC,QAAQ,gCACH,kCAAqB,kDAChB,cACX,KAAC,gBAAgB,IAAG,GACf,EACH,GACF,GACG,CAEf,CAAC,CACD,cAAeM,SAAQ"},"metadata":{},"sourceType":"module"}