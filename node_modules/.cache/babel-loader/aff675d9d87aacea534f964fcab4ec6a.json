{"ast":null,"code":"import _objectSpread from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{Suspense,useContext,lazy,useEffect}from\"react\";// ** Utils\nimport{isUserLoggedIn}from\"@Utils\";import{useLayout}from\"@Hooks/useLayout\";import{handleLogin}from\"@Store/actions/auth\";import{AbilityContext}from\"@src/utility/context/Can\";import{useRouterTransition}from\"@Hooks/useRouterTransition\";// ** Custom Components\n// import Spinner from '@Components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from\"@Layouts/components/layout-wrapper\";// ** Router Components\nimport{BrowserRouter as AppRouter,Route,Switch,Redirect}from\"react-router-dom\";// ** Routes & Default Routes\nimport{DefaultRoute,ListRoutes}from\"./routes\";// ** Layouts\nimport BlankLayout from\"@Layouts/BlankLayout\";import VerticalLayout from\"@src/layouts/VerticalLayout\";import{useDispatch}from\"react-redux\";// import HorizontalLayout from '@src/layouts/HorizontalLayout'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Router=function Router(){// ** Hooks\nvar _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],setLayout=_useLayout2[1];var dispatch=useDispatch();var _useRouterTransition=useRouterTransition(),_useRouterTransition2=_slicedToArray(_useRouterTransition,2),transition=_useRouterTransition2[0],setTransition=_useRouterTransition2[1];// ** ACL Ability Context\nvar ability=useContext(AbilityContext);// ** Default Layout\nvar DefaultLayout=\"VerticalLayout\";// ** All of the available layouts\nvar Layouts={VerticalLayout:VerticalLayout,BlankLayout:BlankLayout};// ** Current Active Item\nvar currentActiveItem=null;// ** Return Filtered Array of Routes & Paths\nvar LayoutRoutesAndPaths=function LayoutRoutesAndPaths(layout){var LayoutRoutes=[];var LayoutPaths=[];if(ListRoutes){ListRoutes.filter(function(route){// ** Checks if Route layout or Default layout matches current layout\nif(route.layout===layout||route.layout===undefined&&DefaultLayout===layout){LayoutRoutes.push(route);LayoutPaths.push(route.path);}});}return{LayoutRoutes:LayoutRoutes,LayoutPaths:LayoutPaths};};var NotAuthorized=/*#__PURE__*/lazy(function(){return import(\"@Views/pages/misc/NotAuthorized\");});// ** Init Error Component\nvar Error=/*#__PURE__*/lazy(function(){return import(\"@Views/pages/misc/Error\");});/**\n   ** Final Route Component Checks for Login & User Role and then Redirects to the route\n   */var FinalRoute=function FinalRoute(props){var dispatch=useDispatch();var route=props.route;var action,resource;// console.log(ability, resource)\n// ** Assign vars based on route meta\nif(route.meta){action=route.meta.action?route.meta.action:null;resource=route.meta.resource?route.meta.resource:null;}if(!isUserLoggedIn()&&route.meta===undefined||!isUserLoggedIn()&&route.meta&&!route.meta.authRoute&&!route.meta.publicRoute){/**\n       ** If user is not Logged in & route meta is undefined\n       ** OR\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n       ** Then Redirect user to login\n       */return/*#__PURE__*/_jsx(Redirect,{to:\"/cms/login\"});}else if(route.meta&&route.meta.authRoute&&isUserLoggedIn()){// ** If route has meta and authRole and user is Logged in then Redirect user to home page (DefaultRoute)\nreturn/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}// else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n//   // ** If user is Logged in and doesn't have ability to visit the page Redirect the user to Not Authorized\n//   return <Redirect to='/misc/not-authorized' />\n// }\nelse{// ** If none of the above render component\nreturn/*#__PURE__*/_jsx(route.component,_objectSpread({},props));}};// ** Return Route to Render\nvar ResolveRoutes=function ResolveRoutes(){return Object.keys(Layouts).map(function(layout,index){// ** Convert Layout parameter to Layout Component\n// ? Note: make sure to keep layout and component name equal\nvar LayoutTag=Layouts[layout];// ** Get Routes and Paths of the Layout\nvar _LayoutRoutesAndPaths=LayoutRoutesAndPaths(layout),LayoutRoutes=_LayoutRoutesAndPaths.LayoutRoutes,LayoutPaths=_LayoutRoutesAndPaths.LayoutPaths;// ** We have freedom to display different layout for different route\n// ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n// ** that we want to implement like VerticalLayout or HorizontalLayout\n// ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n// ** RouterProps to pass them to Layouts\nvar routerProps={};return/*#__PURE__*/_jsx(Route,{path:LayoutPaths,children:/*#__PURE__*/_jsx(LayoutTag,{routerProps:routerProps,layout:layout,setLayout:setLayout,transition:transition,setTransition:setTransition,currentActiveItem:currentActiveItem,children:/*#__PURE__*/_jsx(Switch,{children:LayoutRoutes.map(function(route){return/*#__PURE__*/_jsx(Route,{path:route.path,exact:route.exact===true,render:function render(props){// ** Assign props to routerProps\nObject.assign(routerProps,_objectSpread(_objectSpread({},props),{},{meta:route.meta}));return/*#__PURE__*/_jsx(Suspense,{fallback:null,children:/*#__PURE__*/_jsx(LayoutWrapper,_objectSpread(_objectSpread(_objectSpread(_objectSpread({layout:DefaultLayout,transition:transition,setTransition:setTransition/* Conditional props */ /*eslint-disable */},route.appLayout?{appLayout:route.appLayout}:{}),route.meta?{routeMeta:route.meta}:{}),route.className?{wrapperClass:route.className}:{}),{},{children:/*#__PURE__*/_jsx(FinalRoute,_objectSpread({route:route},props))}))});}},route.path);})})})},index);});};useEffect(function(){var userData=localStorage.getItem(\"userData\");if(userData){dispatch(handleLogin(JSON.parse(localStorage.getItem(\"userData\")||\"{}\")));}},[]);return/*#__PURE__*/_jsx(AppRouter,{basename:process.env.REACT_APP_BASENAME,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(){return isUserLoggedIn()?/*#__PURE__*/_jsx(Redirect,{to:DefaultRoute}):/*#__PURE__*/_jsx(Redirect,{to:\"/cms/login\"});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/misc/not-authorized\",render:function render(props){return/*#__PURE__*/_jsx(Layouts.BlankLayout,{children:/*#__PURE__*/_jsx(NotAuthorized,{})});}}),ResolveRoutes(),/*#__PURE__*/_jsx(Route,{path:\"*\",element:Error})]})});};export default Router;","map":{"version":3,"names":["Suspense","useContext","lazy","useEffect","isUserLoggedIn","useLayout","handleLogin","AbilityContext","useRouterTransition","LayoutWrapper","BrowserRouter","AppRouter","Route","Switch","Redirect","DefaultRoute","ListRoutes","BlankLayout","VerticalLayout","useDispatch","Router","layout","setLayout","dispatch","transition","setTransition","ability","DefaultLayout","Layouts","currentActiveItem","LayoutRoutesAndPaths","LayoutRoutes","LayoutPaths","filter","route","undefined","push","path","NotAuthorized","Error","FinalRoute","props","action","resource","meta","authRoute","publicRoute","ResolveRoutes","Object","keys","map","index","LayoutTag","routerProps","exact","assign","appLayout","routeMeta","className","wrapperClass","userData","localStorage","getItem","JSON","parse","process","env","REACT_APP_BASENAME"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/router/Router.js"],"sourcesContent":["// ** React Imports\nimport { Suspense, useContext, lazy, useEffect } from \"react\";\n\n// ** Utils\nimport { isUserLoggedIn } from \"@Utils\";\nimport { useLayout } from \"@Hooks/useLayout\";\nimport { handleLogin } from \"@Store/actions/auth\";\n\nimport { AbilityContext } from \"@src/utility/context/Can\";\nimport { useRouterTransition } from \"@Hooks/useRouterTransition\";\n\n// ** Custom Components\n// import Spinner from '@Components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from \"@Layouts/components/layout-wrapper\";\n\n// ** Router Components\nimport {\n  BrowserRouter as AppRouter,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n// ** Routes & Default Routes\nimport { DefaultRoute, ListRoutes } from \"./routes\";\n\n// ** Layouts\nimport BlankLayout from \"@Layouts/BlankLayout\";\nimport VerticalLayout from \"@src/layouts/VerticalLayout\";\nimport { useDispatch } from \"react-redux\";\n// import HorizontalLayout from '@src/layouts/HorizontalLayout'\n\nconst Router = () => {\n  // ** Hooks\n  const [layout, setLayout] = useLayout();\n  const dispatch = useDispatch();\n\n  const [transition, setTransition] = useRouterTransition();\n\n  // ** ACL Ability Context\n  const ability = useContext(AbilityContext);\n\n  // ** Default Layout\n  const DefaultLayout = \"VerticalLayout\";\n\n  // ** All of the available layouts\n  const Layouts = { VerticalLayout, BlankLayout };\n\n  // ** Current Active Item\n  const currentActiveItem = null;\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = (layout) => {\n    const LayoutRoutes = [];\n    const LayoutPaths = [];\n\n    if (ListRoutes) {\n      ListRoutes.filter((route) => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (\n          route.layout === layout ||\n          (route.layout === undefined && DefaultLayout === layout)\n        ) {\n          LayoutRoutes.push(route);\n          LayoutPaths.push(route.path);\n        }\n      });\n    }\n\n    return { LayoutRoutes, LayoutPaths };\n  };\n\n  const NotAuthorized = lazy(() => import(\"@Views/pages/misc/NotAuthorized\"));\n\n  // ** Init Error Component\n  const Error = lazy(() => import(\"@Views/pages/misc/Error\"));\n\n  /**\n   ** Final Route Component Checks for Login & User Role and then Redirects to the route\n   */\n  const FinalRoute = (props) => {\n    const dispatch = useDispatch();\n\n    const route = props.route;\n    let action, resource;\n    // console.log(ability, resource)\n    // ** Assign vars based on route meta\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null;\n      resource = route.meta.resource ? route.meta.resource : null;\n    }\n\n    if (\n      (!isUserLoggedIn() && route.meta === undefined) ||\n      (!isUserLoggedIn() &&\n        route.meta &&\n        !route.meta.authRoute &&\n        !route.meta.publicRoute)\n    ) {\n      /**\n       ** If user is not Logged in & route meta is undefined\n       ** OR\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n       ** Then Redirect user to login\n       */\n\n      return <Redirect to=\"/cms/login\" />;\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then Redirect user to home page (DefaultRoute)\n\n      return <Redirect to=\"/\" />;\n    }\n    // else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n    //   // ** If user is Logged in and doesn't have ability to visit the page Redirect the user to Not Authorized\n    //   return <Redirect to='/misc/not-authorized' />\n    // }\n    else {\n      // ** If none of the above render component\n      return <route.component {...props} />;\n    }\n  };\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout];\n\n      // ** Get Routes and Paths of the Layout\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout);\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {};\n\n      return (\n        <Route path={LayoutPaths} key={index}>\n          <LayoutTag\n            routerProps={routerProps}\n            layout={layout}\n            setLayout={setLayout}\n            transition={transition}\n            setTransition={setTransition}\n            currentActiveItem={currentActiveItem}\n          >\n            <Switch>\n              {LayoutRoutes.map((route) => {\n                return (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact === true}\n                    render={(props) => {\n                      // ** Assign props to routerProps\n                      Object.assign(routerProps, {\n                        ...props,\n                        meta: route.meta,\n                      });\n\n                      return (\n                        <Suspense fallback={null}>\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\n                          <LayoutWrapper\n                            layout={DefaultLayout}\n                            transition={transition}\n                            setTransition={setTransition}\n                            /* Conditional props */\n                            /*eslint-disable */\n                            {...(route.appLayout\n                              ? {\n                                  appLayout: route.appLayout,\n                                }\n                              : {})}\n                            {...(route.meta\n                              ? {\n                                  routeMeta: route.meta,\n                                }\n                              : {})}\n                            {...(route.className\n                              ? {\n                                  wrapperClass: route.className,\n                                }\n                              : {})}\n                            /*eslint-enable */\n                          >\n                            <FinalRoute route={route} {...props} />\n                          </LayoutWrapper>\n                        </Suspense>\n                      );\n                    }}\n                  />\n                );\n              })}\n            </Switch>\n          </LayoutTag>\n        </Route>\n      );\n    });\n  };\n  useEffect(() => {\n  const userData=  localStorage.getItem(\"userData\")  \n   if (userData) {\n    dispatch(\n      handleLogin(JSON.parse(localStorage.getItem(\"userData\") || \"{}\"))\n    );\n   }\n  }, []);\n  return (\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\n      <Switch>\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return isUserLoggedIn() ? (\n              <Redirect to={DefaultRoute} />\n            ) : (\n              <Redirect to=\"/cms/login\" />\n            );\n          }}\n        />\n        {/* Not Auth Route */}\n        <Route\n          exact\n          path=\"/misc/not-authorized\"\n          render={(props) => (\n            <Layouts.BlankLayout>\n              <NotAuthorized />\n            </Layouts.BlankLayout>\n          )}\n        />\n        {ResolveRoutes()}\n\n        {/* NotFound Error page */}\n        <Route path=\"*\"  element={Error} />\n      </Switch>\n    </AppRouter>\n  );\n};\n\nexport default Router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}