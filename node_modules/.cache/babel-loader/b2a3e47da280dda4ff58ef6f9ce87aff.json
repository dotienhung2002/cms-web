{"ast":null,"code":"import Request from \"../helper/request\";\nimport Response from '../constants/models/responseInterface';\nimport api from '../constants/api';\n\nclass ChangeTokenService {\n  // static async updateUserInfo(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/user-update-info',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async updateProfile(data = {}) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: `/user/user-update-info`,\n  //       method: \"POST\",\n  //       data: data\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data || [], isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async changePassowrd(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/change-password',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  // static async getDetail() {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: '/user/get-detail',\n  //       method: \"GET\"\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  static async getListRequestWithdraw(query) {\n    return new Promise(resolve => {\n      Request.send({\n        path: api.LIST_TRANSACTION_ADMIN.path,\n        method: api.LIST_TRANSACTION_ADMIN.method,\n        query: query\n      }).then(res => {\n        console.log(res);\n\n        if ((res === null || res === void 0 ? void 0 : res.code) === 200) {\n          resolve(new Response({\n            data: res.data,\n            isSuccess: true\n          }));\n        } else {\n          resolve(new Response({\n            isSuccess: false,\n            error: res === null || res === void 0 ? void 0 : res.error\n          }));\n        }\n      });\n    });\n  }\n\n}\n\nexport default ChangeTokenService;","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/services/changeTokenService.tsx"],"names":["Request","Response","api","ChangeTokenService","getListRequestWithdraw","query","Promise","resolve","send","path","LIST_TRANSACTION_ADMIN","method","then","res","console","log","code","data","isSuccess","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAoC,uCAApC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AACA,MAAMC,kBAAN,CAAyB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmC,eAAtBC,sBAAsB,CAACC,KAAD,EAAY;AAC7C,WAAO,IAAIC,OAAJ,CAAuBC,OAAO,IAAI;AACvCP,MAAAA,OAAO,CAACQ,IAAR,CAAa;AACXC,QAAAA,IAAI,EAAEP,GAAG,CAACQ,sBAAJ,CAA2BD,IADtB;AAEXE,QAAAA,MAAM,EAACT,GAAG,CAACQ,sBAAJ,CAA2BC,MAFvB;AAGXN,QAAAA,KAAK,EAACA;AAHK,OAAb,EAIGO,IAJH,CAISC,GAAD,IAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACE,YAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,IAAL,MAAc,GAAlB,EAAuB;AACrBT,UAAAA,OAAO,CAAC,IAAIN,QAAJ,CAAa;AAAEgB,YAAAA,IAAI,EAAEJ,GAAG,CAACI,IAAZ;AAAkBC,YAAAA,SAAS,EAAE;AAA7B,WAAb,CAAD,CAAP;AACD,SAFD,MAEO;AACLX,UAAAA,OAAO,CAAC,IAAIN,QAAJ,CAAa;AAAEiB,YAAAA,SAAS,EAAE,KAAb;AAAoBC,YAAAA,KAAK,EAAEN,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEM;AAAhC,WAAb,CAAD,CAAP;AACD;AACF,OAXH;AAYD,KAbM,CAAP;AAcD;;AArFsB;;AAyFzB,eAAehB,kBAAf","sourcesContent":["import Request from \"../helper/request\";\nimport Response, { IResponse } from '../constants/models/responseInterface'\nimport api from '../constants/api'\nclass ChangeTokenService {\n  // static async updateUserInfo(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/user-update-info',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async updateProfile(data = {}) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: `/user/user-update-info`,\n  //       method: \"POST\",\n  //       data: data\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n\n  //           resolve(new Response({ data: res.data || [], isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async changePassowrd(data = {}, token = undefined) {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       data: data,\n  //       path: '/user/change-password',\n  //       method: \"POST\",\n  //       token\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n\n  // static async getDetail() {\n  //   return new Promise<IResponse>(resolve => {\n  //     Request.send({\n  //       path: '/user/get-detail',\n  //       method: \"GET\"\n  //     })\n  //       .then((res: any) => {\n  //         if (res.statusCode === 200) {\n  //           resolve(new Response({ data: res.data, isSuccess: true }));\n  //         } else {\n  //           resolve(new Response({ isSuccess: false, error: res.error }));\n  //         }\n  //       })\n  //   });\n  // }\n  static async getListRequestWithdraw(query:any) {\n    return new Promise<IResponse>(resolve => {\n      Request.send({\n        path: api.LIST_TRANSACTION_ADMIN.path,\n        method:api.LIST_TRANSACTION_ADMIN.method,\n        query:query,\n      }).then((res: any) => {\n        console.log(res);\n          if (res?.code === 200) {\n            resolve(new Response({ data: res.data, isSuccess: true }));\n          } else {\n            resolve(new Response({ isSuccess: false, error: res?.error }));\n          }\n        })\n    });\n  }\n}\n\n\nexport default ChangeTokenService;\n"]},"metadata":{},"sourceType":"module"}