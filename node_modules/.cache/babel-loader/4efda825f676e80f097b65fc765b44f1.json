{"ast":null,"code":"// ** React Imports\nimport { useContext } from 'react';\nimport { AbilityContext } from '@src/utility/context/Can';\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport var resolveVerticalNavMenuItemComponent = function resolveVerticalNavMenuItemComponent(item) {\n  if (item.header) return 'VerticalNavMenuSectionHeader';\n  if (item.children) return 'VerticalNavMenuGroup';\n  return 'VerticalNavMenuLink';\n};\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport var resolveHorizontalNavMenuItemComponent = function resolveHorizontalNavMenuItemComponent(item) {\n  if (item.children) return 'HorizontalNavMenuGroup';\n  return 'HorizontalNavMenuLink';\n};\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport var isNavLinkActive = function isNavLinkActive(link, currentURL, routerProps) {\n  return currentURL === link || routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link;\n  // return currentURL === link\n};\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport var isNavGroupActive = function isNavGroupActive(children, currentURL, routerProps) {\n  return children.some(function (child) {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps);\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps);\n  });\n};\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport var search = function search(navigation, currentURL, routerProps) {\n  var result;\n  navigation.some(function (child) {\n    var children;\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return result = {\n        id: child.id,\n        children: children\n      };\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return result = {\n        id: child.id\n      };\n    }\n  });\n  return result;\n};\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport var getAllParents = function getAllParents(obj, match) {\n  var res = [];\n  var recurse = function recurse(obj, current) {\n    for (var key in obj) {\n      var value = obj[key];\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key);\n        } else {\n          if (key === match) {\n            res.push(value);\n          }\n        }\n      }\n    }\n  };\n  recurse(obj);\n  return res;\n};\nexport var canViewMenuGroup = function canViewMenuGroup(item) {\n  // const ability = useContext(AbilityContext)\n  // // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  // const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // // ** Else check for ability using provided resource and action along with checking if has any visible child\n  // if (!(item.action && item.resource)) {\n  //   return hasAnyVisibleChild\n  // }\n  // return ability.can(item.action, item.resource) && hasAnyVisibleChild\n  return true;\n};\nexport var canViewMenuItem = function canViewMenuItem(item) {\n  // const ability = useContext(AbilityContext)\n  // return ability.can(item.action, item.resource)\n  var userData = JSON.parse(localStorage.getItem('userData') || \"{}\");\n  var permissions = userData.permissions;\n  var arrayPers = !permissions || permissions === '' ? [] : permissions.split(',');\n  var permissionsCheck = item.permissions || [];\n  var check = true;\n  // permissionsCheck.forEach(element => {\n  //   const index = arrayPers.findIndex(el2 => el2 === element)\n  //   if (index !== -1) {\n  //     check = true\n  //   }\n  // });\n\n  return check;\n};","map":{"version":3,"names":["useContext","AbilityContext","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","isNavLinkActive","link","currentURL","routerProps","meta","navLink","isNavGroupActive","some","child","search","navigation","result","id","getAllParents","obj","match","res","recurse","current","key","value","undefined","push","canViewMenuGroup","canViewMenuItem","userData","JSON","parse","localStorage","getItem","permissions","arrayPers","split","permissionsCheck","check"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/@core/layouts/utils.js"],"sourcesContent":["// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  // const ability = useContext(AbilityContext)\n  // // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  // const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // // ** Else check for ability using provided resource and action along with checking if has any visible child\n  // if (!(item.action && item.resource)) {\n  //   return hasAnyVisibleChild\n  // }\n  // return ability.can(item.action, item.resource) && hasAnyVisibleChild\n  return true\n}\n\nexport const canViewMenuItem = item => {\n  // const ability = useContext(AbilityContext)\n  // return ability.can(item.action, item.resource)\n  const userData = JSON.parse(localStorage.getItem('userData') || `{}`)\n  const { permissions } = userData\n\n  const arrayPers = !permissions || permissions === '' ? [] : permissions.split(',')\n  const permissionsCheck = item.permissions || []\n  let check = true\n  // permissionsCheck.forEach(element => {\n  //   const index = arrayPers.findIndex(el2 => el2 === element)\n  //   if (index !== -1) {\n  //     check = true\n  //   }\n  // });\n\n  return check\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}