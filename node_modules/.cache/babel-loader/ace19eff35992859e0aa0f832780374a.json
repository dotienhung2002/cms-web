{"ast":null,"code":"import _toConsumableArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/ExportSelected.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport ExtensionsHeader from '@Components/extensions-header';\nimport { Row, Col, Card, CardBody, Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, CustomInput, Label } from 'reactstrap';\nimport classnames from 'classnames';\nimport XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initialData = [{\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  website: 'hildegard.org'\n}, {\n  id: 2,\n  name: 'Ervin Howell',\n  username: 'Antonette',\n  email: 'Shanna@melissa.tv',\n  website: 'anastasia.net'\n}, {\n  id: 3,\n  name: 'Clementine Bauch',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  website: 'ramiro.info'\n}, {\n  id: 4,\n  name: 'Patricia Lebsack',\n  username: 'Karianne',\n  email: 'Julianne.OConner@kory.org',\n  website: 'kale.biz'\n}, {\n  id: 5,\n  name: 'Chelsey Dietrich',\n  username: 'Kamren',\n  email: 'Lucio_Hettinger@annie.ca',\n  website: 'demarco.info'\n}, {\n  id: 6,\n  name: 'Mrs. Dennis Schulist',\n  username: 'Leopoldo_Corkery',\n  email: 'Karley_Dach@jasper.info',\n  website: 'ola.org'\n}, {\n  id: 7,\n  name: 'Kurtis Weissnat',\n  username: 'Elwyn.Skiles',\n  email: 'Telly.Hoeger@billy.biz',\n  website: 'elvis.io'\n}, {\n  id: 8,\n  name: 'Nicholas Runolfsdottir V',\n  username: 'Maxime_Nienow',\n  email: 'Sherwood@rosamond.me',\n  website: 'jacynthe.com'\n}, {\n  id: 9,\n  name: 'Glenna Reichert',\n  username: 'Delphine',\n  email: 'Chaim_McDermott@dana.io',\n  website: 'conrad.com'\n}, {\n  id: 10,\n  name: 'Clementina DuBuque',\n  username: 'Moriah.Stanton',\n  email: 'Rey.Padberg@karina.biz',\n  website: 'ambrose.net'\n}];\n\nvar ExportSelected = function ExportSelected() {\n  _s();\n\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 1),\n      data = _useState2[0];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredData = _useState4[0],\n      setFilteredData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataToExport = _useState6[0],\n      setDataToExport = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modal = _useState10[0],\n      setModal = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fileName = _useState12[0],\n      setFileName = _useState12[1];\n\n  var _useState13 = useState('xlsx'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fileFormat = _useState14[0],\n      setFileFormat = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedRows = _useState16[0],\n      setSelectedRows = _useState16[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var handleFilter = function handleFilter(e) {\n    var filteredData = [];\n    var value = e.target.value;\n    setValue(value);\n\n    if (value.length) {\n      filteredData = data.filter(function (col) {\n        var startsWithCondition = col.name.toLowerCase().startsWith(value.toLowerCase()) || col.email.toLowerCase().startsWith(value.toLowerCase()) || col.website.toLowerCase().startsWith(value.toLowerCase()) || col.id.toString().toLowerCase().startsWith(value.toLowerCase());\n        var includesCondition = col.name.toLowerCase().includes(value.toLowerCase()) || col.email.toLowerCase().includes(value.toLowerCase()) || col.website.toLowerCase().includes(value.toLowerCase()) || col.id.toString().toLowerCase().includes(value.toLowerCase());\n        if (startsWithCondition) return startsWithCondition;else if (!startsWithCondition && includesCondition) return includesCondition;else return null;\n      });\n      setValue(value);\n      setFilteredData(filteredData);\n    }\n  };\n\n  var handleExport = function handleExport() {\n    var exportArr = dataToExport;\n    data.map(function (item) {\n      if (selectedRows.includes(item.id)) {\n        return exportArr.push(item);\n      } else {\n        return null;\n      }\n    });\n    setDataToExport(_toConsumableArray(exportArr));\n    var name = fileName.length ? \"\".concat(fileName, \".\").concat(fileFormat) : \"excel-sheet.\".concat(fileFormat);\n    var wb = XLSX.utils.json_to_sheet(dataToExport);\n    var wbout = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wbout, wb, 'test');\n    XLSX.writeFile(wbout, name);\n    toggleModal();\n  };\n\n  var handleSelect = function handleSelect(id) {\n    var selectedRowsArr = selectedRows;\n\n    if (!selectedRowsArr.includes(id)) {\n      selectedRowsArr.push(id);\n    } else if (selectedRowsArr.includes(id)) {\n      selectedRowsArr.splice(selectedRowsArr.indexOf(id), 1);\n    } else {\n      return null;\n    }\n\n    setSelectedRows(_toConsumableArray(selectedRowsArr));\n  };\n\n  var handleSelectAll = function handleSelectAll() {\n    var selectedRowsArr = selectedRows;\n\n    if (selectedRowsArr.length < data.length) {\n      var ids = data.map(function (i) {\n        return i.id;\n      });\n      selectedRowsArr = ids;\n    } else if (selectedRowsArr.length === data.length) {\n      selectedRowsArr = [];\n    } else {\n      return null;\n    }\n\n    setSelectedRows(selectedRowsArr);\n  };\n\n  var array = value ? filteredData : data;\n  var renderTableData = array.map(function (col) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classnames({\n        selected: selectedRows.includes(col.id)\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"checkbox\",\n          id: col.id,\n          label: \"\",\n          checked: !!selectedRows.includes(col.id),\n          onChange: function onChange() {\n            return handleSelect(col.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.website\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, _this)]\n    }, col.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExtensionsHeader, {\n      title: \"XLSX\",\n      subTitle: \"Xlsx is a parser and writer for various spreadsheet formats\",\n      link: \"https://github.com/AdeleD/react-paginate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"export-component\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"pb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return toggleModal();\n                },\n                children: \"Export Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-end\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"search-input\",\n                  className: \"mr-1\",\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"search-input\",\n                  bsSize: \"sm\",\n                  type: \"text\",\n                  value: value,\n                  onChange: function onChange(e) {\n                    return handleFilter(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table-hover-animation mt-2\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    type: \"checkbox\",\n                    id: \"select-all\",\n                    label: \"\",\n                    checked: !!selectedRows.length,\n                    onChange: function onChange(e) {\n                      return handleSelectAll();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Website\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: renderTableData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: function toggle() {\n        return toggleModal();\n      },\n      className: \"modal-dialog-centered\",\n      onClosed: function onClosed() {\n        return setFileName('');\n      },\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: function toggle() {\n          return toggleModal();\n        },\n        children: \"Export To Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: fileName,\n            onChange: function onChange(e) {\n              return setFileName(e.target.value);\n            },\n            placeholder: \"Enter File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            type: \"select\",\n            id: \"selectFileFormat\",\n            name: \"customSelect\",\n            value: fileFormat,\n            onChange: function onChange(e) {\n              setFileFormat(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"xlsx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"txt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return handleExport();\n          },\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"flat-danger\",\n          onClick: function onClick() {\n            return toggleModal();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ExportSelected, \"uLlB1nYmdYANuukX0wpCDPTFUvg=\");\n\n_c = ExportSelected;\nexport default ExportSelected;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportSelected\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/ExportSelected.js"],"names":["Fragment","useState","ExtensionsHeader","Row","Col","Card","CardBody","Button","Table","Modal","ModalHeader","ModalBody","ModalFooter","Input","FormGroup","CustomInput","Label","classnames","XLSX","initialData","id","name","username","email","website","ExportSelected","data","filteredData","setFilteredData","dataToExport","setDataToExport","value","setValue","modal","setModal","fileName","setFileName","fileFormat","setFileFormat","selectedRows","setSelectedRows","toggleModal","handleFilter","e","target","length","filter","col","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleExport","exportArr","map","item","push","wb","utils","json_to_sheet","wbout","book_new","book_append_sheet","writeFile","handleSelect","selectedRowsArr","splice","indexOf","handleSelectAll","ids","i","array","renderTableData","selected"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react'\nimport ExtensionsHeader from '@Components/extensions-header'\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  FormGroup,\n  CustomInput,\n  Label\n} from 'reactstrap'\nimport classnames from 'classnames'\nimport XLSX from 'xlsx'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst ExportSelected = () => {\n  const [data] = useState(initialData)\n  const [filteredData, setFilteredData] = useState([])\n  const [dataToExport, setDataToExport] = useState([])\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [fileFormat, setFileFormat] = useState('xlsx')\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const toggleModal = () => setModal(!modal)\n\n  const handleFilter = e => {\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setValue(value)\n      setFilteredData(filteredData)\n    }\n  }\n\n  const handleExport = () => {\n    const exportArr = dataToExport\n    data.map(item => {\n      if (selectedRows.includes(item.id)) {\n        return exportArr.push(item)\n      } else {\n        return null\n      }\n    })\n    setDataToExport([...exportArr])\n    const name = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n    const wb = XLSX.utils.json_to_sheet(dataToExport)\n    const wbout = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wbout, wb, 'test')\n    XLSX.writeFile(wbout, name)\n    toggleModal()\n  }\n\n  const handleSelect = id => {\n    const selectedRowsArr = selectedRows\n    if (!selectedRowsArr.includes(id)) {\n      selectedRowsArr.push(id)\n    } else if (selectedRowsArr.includes(id)) {\n      selectedRowsArr.splice(selectedRowsArr.indexOf(id), 1)\n    } else {\n      return null\n    }\n    setSelectedRows([...selectedRowsArr])\n  }\n\n  const handleSelectAll = () => {\n    let selectedRowsArr = selectedRows\n    if (selectedRowsArr.length < data.length) {\n      const ids = data.map(i => i.id)\n      selectedRowsArr = ids\n    } else if (selectedRowsArr.length === data.length) {\n      selectedRowsArr = []\n    } else {\n      return null\n    }\n\n    setSelectedRows(selectedRowsArr)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr\n        key={col.id}\n        className={classnames({\n          selected: selectedRows.includes(col.id)\n        })}\n      >\n        <td>\n          <CustomInput\n            type='checkbox'\n            id={col.id}\n            label=''\n            checked={!!selectedRows.includes(col.id)}\n            onChange={() => handleSelect(col.id)}\n          />\n        </td>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/AdeleD/react-paginate'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex flex-wrap justify-content-between'>\n                <Button.Ripple color='primary' onClick={() => toggleModal()}>\n                  Export Selected\n                </Button.Ripple>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='mr-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>\n                    <CustomInput\n                      type='checkbox'\n                      id='select-all'\n                      label=''\n                      checked={!!selectedRows.length}\n                      onChange={e => handleSelectAll()}\n                    />\n                  </th>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </FormGroup>\n          <FormGroup>\n            <CustomInput\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => {\n                setFileFormat(e.target.value)\n              }}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </CustomInput>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ExportSelected\n"]},"metadata":{},"sourceType":"module"}