{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";export var tooltipControlled=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\nimport React, { useState } from 'react'\\nimport { Button, Tooltip } from 'reactstrap'\\n\\nconst TooltipControlled = () => {\\n  const [tooltipOpen, setTooltipOpen] = useState(false)\\n\\n  return (\\n    <React.Fragment>\\n      <Button.Ripple color='primary' id='ControlledExample'>\\n        Controlled\\n      </Button.Ripple>\\n      <Tooltip\\n        placement='top'\\n        isOpen={tooltipOpen}\\n        target='ControlledExample'\\n        toggle={() => setTooltipOpen(!tooltipOpen)}\\n      >\\n        Hello World !\\n      </Tooltip>\\n    </React.Fragment>\\n  )\\n}\\nexport default TooltipControlled\\n\"})});export var tooltipUncontrolled=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Button, UncontrolledTooltip } from 'reactstrap'\\n\\nconst TooltipUncontrolled = () => {\\n  return (\\n    <React.Fragment>\\n      <Button color='primary' id='UnControlledExample'>\\n        Uncontrolled\\n      </Button>\\n      <UncontrolledTooltip placement='top' target='UnControlledExample'>\\n        Hello World !\\n      </UncontrolledTooltip>\\n    </React.Fragment>\\n  )\\n}\\nexport default TooltipUncontrolled\\n\"})});export var tooltipPosition=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Button, UncontrolledTooltip } from 'reactstrap'\\n\\nconst TooltipPosition = () => {\\n  return (\\n    <div className='demo-inline-spacing'>\\n      <Button.Ripple color='primary' outline id='positionTop'>\\n        Top\\n      </Button.Ripple>\\n      <UncontrolledTooltip placement='top' target='positionTop'>\\n        Tooltip on Top\\n      </UncontrolledTooltip>\\n\\n      <Button.Ripple color='primary' outline id='positionRight'>\\n        Right\\n      </Button.Ripple>\\n      <UncontrolledTooltip placement='right' target='positionRight'>\\n        Tooltip on Right\\n      </UncontrolledTooltip>\\n\\n      <Button.Ripple color='primary' outline id='positionBottom'>\\n        Bottom\\n      </Button.Ripple>\\n      <UncontrolledTooltip placement='bottom' target='positionBottom'>\\n        Tooltip on Bottom\\n      </UncontrolledTooltip>\\n\\n      <Button.Ripple color='primary' outline id='positionLeft'>\\n        Left\\n      </Button.Ripple>\\n      <UncontrolledTooltip placement='left' target='positionLeft'>\\n        Tooltip on Left\\n      </UncontrolledTooltip>\\n    </div>\\n  )\\n}\\nexport default TooltipPosition\\n\"})});","map":{"version":3,"names":["tooltipControlled","tooltipUncontrolled","tooltipPosition"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/tooltips/TooltipSourceCode.js"],"sourcesContent":["export const tooltipControlled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { Button, Tooltip } from 'reactstrap'\n\nconst TooltipControlled = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false)\n\n  return (\n    <React.Fragment>\n      <Button.Ripple color='primary' id='ControlledExample'>\n        Controlled\n      </Button.Ripple>\n      <Tooltip\n        placement='top'\n        isOpen={tooltipOpen}\n        target='ControlledExample'\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Hello World !\n      </Tooltip>\n    </React.Fragment>\n  )\n}\nexport default TooltipControlled\n`}\n    </code>\n  </pre>\n)\n\nexport const tooltipUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledTooltip } from 'reactstrap'\n\nconst TooltipUncontrolled = () => {\n  return (\n    <React.Fragment>\n      <Button color='primary' id='UnControlledExample'>\n        Uncontrolled\n      </Button>\n      <UncontrolledTooltip placement='top' target='UnControlledExample'>\n        Hello World !\n      </UncontrolledTooltip>\n    </React.Fragment>\n  )\n}\nexport default TooltipUncontrolled\n`}\n    </code>\n  </pre>\n)\n\nexport const tooltipPosition = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledTooltip } from 'reactstrap'\n\nconst TooltipPosition = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Button.Ripple color='primary' outline id='positionTop'>\n        Top\n      </Button.Ripple>\n      <UncontrolledTooltip placement='top' target='positionTop'>\n        Tooltip on Top\n      </UncontrolledTooltip>\n\n      <Button.Ripple color='primary' outline id='positionRight'>\n        Right\n      </Button.Ripple>\n      <UncontrolledTooltip placement='right' target='positionRight'>\n        Tooltip on Right\n      </UncontrolledTooltip>\n\n      <Button.Ripple color='primary' outline id='positionBottom'>\n        Bottom\n      </Button.Ripple>\n      <UncontrolledTooltip placement='bottom' target='positionBottom'>\n        Tooltip on Bottom\n      </UncontrolledTooltip>\n\n      <Button.Ripple color='primary' outline id='positionLeft'>\n        Left\n      </Button.Ripple>\n      <UncontrolledTooltip placement='left' target='positionLeft'>\n        Tooltip on Left\n      </UncontrolledTooltip>\n    </div>\n  )\n}\nexport default TooltipPosition\n`}\n    </code>\n  </pre>\n)\n"],"mappings":"2CAAA,MAAO,IAAMA,kBAAiB,cAC5B,kCACE,aAAM,SAAS,CAAC,cAAc,smBA0BvB,EAEV,CAED,MAAO,IAAMC,oBAAmB,cAC9B,kCACE,aAAM,SAAS,CAAC,cAAc,ubAmBvB,EAEV,CAED,MAAO,IAAMC,gBAAe,cAC1B,kCACE,aAAM,SAAS,CAAC,cAAc,knCAwCvB,EAEV"},"metadata":{},"sourceType":"module"}