{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";export var defaultAlert=/*#__PURE__*/_jsx(\"pre\",{className:\"language-jsx\",children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Alert } from 'reactstrap'\\n\\nconst DefaultAlert = () => {\\n  return (\\n    <React.Fragment>\\n      <Alert color='primary'>\\n        <div className='alert-body'>\\n          <span className='font-weight-bold'>Good Morning!</span>\\n          <span> Start your day with some alerts.</span>\\n        </div>\\n      </Alert>\\n    </React.Fragment>\\n  )\\n}\\nexport default DefaultAlert\\n  \"})});export var alertTitle=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Alert } from 'reactstrap'\\n\\nconst AlertTitle = () => {\\n  return (\\n      <Alert color='warning'>\\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\\n        <div className='alert-body'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, laborum!.</div>\\n      </Alert>\\n  )\\n}\\nexport default AlertTitle\\n\"})});export var alertColors=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Alert } from 'reactstrap'\\n\\nconst AlertColors = () => {\\n  return (\\n    <React.Fragment>\\n      <Alert color='primary'>\\n        <h4 className='alert-heading'>Primary</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='secondary'>\\n        <h4 className='alert-heading'>Secondary</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='success'>\\n        <h4 className='alert-heading'>Success</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='danger'>\\n        <h4 className='alert-heading'>Danger</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='warning'>\\n        <h4 className='alert-heading'>Warning</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='info'>\\n        <h4 className='alert-heading'>Info</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n      <Alert color='dark'>\\n        <h4 className='alert-heading'>Dark</h4>\\n        <div className='alert-body'>\\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\\n          cupcake cupcake.\\n        </div>\\n      </Alert>\\n    </React.Fragment>\\n  )\\n}\\nexport default AlertColors\\n\"})});export var alertDismissable=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\nimport React, { useState } from 'react'\\nimport { Alert } from 'reactstrap'\\n\\nconst AlertDismissable = () => {\\n  const [visible, setVisible] = useState(true)\\n\\n  return (\\n    <React.Fragment>\\n      <Alert color='info' isOpen={visible} toggle={() => setVisible(false)}>\\n        <div className='alert-body'>\\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\\n        </div>\\n      </Alert>\\n    </React.Fragment>\\n  )\\n}\\nexport default AlertDismissable\\n    \"})});export var alertUncontrolled=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { UncontrolledAlert } from 'reactstrap'\\n\\nconst AlertUncontrolled = () => {\\n  return (\\n    <React.Fragment>\\n      <UncontrolledAlert color='danger'>\\n        <div className='alert-body'>\\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\\n        </div>\\n      </UncontrolledAlert>\\n    </React.Fragment>\\n  )\\n}\\nexport default AlertUncontrolled\\n      \"})});export var alertIcon=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\n\\nimport { Alert } from 'reactstrap'\\nimport { Star } from 'react-feather'\\n\\nconst AlertIcon = () => {\\n  return (\\n    <React.Fragment>\\n      <Alert color='primary'>\\n        <div className='alert-body'>\\n          <Star size={15} />\\n          <span className='ml-1'>\\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\\n          </span>\\n        </div>\\n      </Alert>\\n    </React.Fragment>\\n  )\\n}\\nexport default AlertIcon\\n        \"})});export var alertExample=/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-jsx\",children:\"\\nimport React, { useState } from 'react'\\nimport { Alert, FormGroup, Label, Input } from 'reactstrap'\\nimport { AlertCircle } from 'react-feather'\\n\\nconst AlertExample = () => {\\n  const [inputTerm, setInputTerm] = useState('')\\n  const [visible, setVisible] = useState('')\\n\\n  const handleInput = e => {\\n    setInputTerm(e.target.value)\\n\\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\\n      setVisible(true)\\n    } else {\\n      setVisible(false)\\n    }\\n  }\\n\\n  return (\\n    <React.Fragment>\\n      <FormGroup>\\n        <Label htmlFor='numbers'>Enter numbers only</Label>\\n        <Input\\n          className='w-25 h-25 pl-1'\\n          placeholder='0123456789'\\n          value={inputTerm}\\n          onChange={e => handleInput(e)}\\n        />\\n      </FormGroup>\\n      <Alert color='danger' isOpen={visible}>\\n        <div className='alert-body'>\\n          <AlertCircle size={15} />{' '}\\n          <span className='ml-1'>\\n            the value is <strong>invalid</strong> you can only enter numbers\\n          </span>\\n        </div>\\n      </Alert>\\n    </React.Fragment>\\n  )\\n}\\nexport default AlertExample\\n        \"})});","map":{"version":3,"names":["defaultAlert","alertTitle","alertColors","alertDismissable","alertUncontrolled","alertIcon","alertExample"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/alerts/AlertSourceCode.js"],"sourcesContent":["export const defaultAlert = (\n  <pre className='language-jsx'>\n    <code className='language-jsx'>\n      {`\n\nimport { Alert } from 'reactstrap'\n\nconst DefaultAlert = () => {\n  return (\n    <React.Fragment>\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <span className='font-weight-bold'>Good Morning!</span>\n          <span> Start your day with some alerts.</span>\n        </div>\n      </Alert>\n    </React.Fragment>\n  )\n}\nexport default DefaultAlert\n  `}\n    </code>\n  </pre>\n)\n\nexport const alertTitle = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Alert } from 'reactstrap'\n\nconst AlertTitle = () => {\n  return (\n      <Alert color='warning'>\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\n        <div className='alert-body'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, laborum!.</div>\n      </Alert>\n  )\n}\nexport default AlertTitle\n`}\n    </code>\n  </pre>\n)\n\nexport const alertColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Alert } from 'reactstrap'\n\nconst AlertColors = () => {\n  return (\n    <React.Fragment>\n      <Alert color='primary'>\n        <h4 className='alert-heading'>Primary</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='secondary'>\n        <h4 className='alert-heading'>Secondary</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='success'>\n        <h4 className='alert-heading'>Success</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='danger'>\n        <h4 className='alert-heading'>Danger</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='warning'>\n        <h4 className='alert-heading'>Warning</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='info'>\n        <h4 className='alert-heading'>Info</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n      <Alert color='dark'>\n        <h4 className='alert-heading'>Dark</h4>\n        <div className='alert-body'>\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\n          cupcake cupcake.\n        </div>\n      </Alert>\n    </React.Fragment>\n  )\n}\nexport default AlertColors\n`}\n    </code>\n  </pre>\n)\n\nexport const alertDismissable = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { Alert } from 'reactstrap'\n\nconst AlertDismissable = () => {\n  const [visible, setVisible] = useState(true)\n\n  return (\n    <React.Fragment>\n      <Alert color='info' isOpen={visible} toggle={() => setVisible(false)}>\n        <div className='alert-body'>\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\n        </div>\n      </Alert>\n    </React.Fragment>\n  )\n}\nexport default AlertDismissable\n    `}\n    </code>\n  </pre>\n)\n\nexport const alertUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledAlert } from 'reactstrap'\n\nconst AlertUncontrolled = () => {\n  return (\n    <React.Fragment>\n      <UncontrolledAlert color='danger'>\n        <div className='alert-body'>\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\n        </div>\n      </UncontrolledAlert>\n    </React.Fragment>\n  )\n}\nexport default AlertUncontrolled\n      `}\n    </code>\n  </pre>\n)\n\nexport const alertIcon = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Alert } from 'reactstrap'\nimport { Star } from 'react-feather'\n\nconst AlertIcon = () => {\n  return (\n    <React.Fragment>\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <Star size={15} />\n          <span className='ml-1'>\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\n          </span>\n        </div>\n      </Alert>\n    </React.Fragment>\n  )\n}\nexport default AlertIcon\n        `}\n    </code>\n  </pre>\n)\n\nexport const alertExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { Alert, FormGroup, Label, Input } from 'reactstrap'\nimport { AlertCircle } from 'react-feather'\n\nconst AlertExample = () => {\n  const [inputTerm, setInputTerm] = useState('')\n  const [visible, setVisible] = useState('')\n\n  const handleInput = e => {\n    setInputTerm(e.target.value)\n\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\n      setVisible(true)\n    } else {\n      setVisible(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <FormGroup>\n        <Label htmlFor='numbers'>Enter numbers only</Label>\n        <Input\n          className='w-25 h-25 pl-1'\n          placeholder='0123456789'\n          value={inputTerm}\n          onChange={e => handleInput(e)}\n        />\n      </FormGroup>\n      <Alert color='danger' isOpen={visible}>\n        <div className='alert-body'>\n          <AlertCircle size={15} />{' '}\n          <span className='ml-1'>\n            the value is <strong>invalid</strong> you can only enter numbers\n          </span>\n        </div>\n      </Alert>\n    </React.Fragment>\n  )\n}\nexport default AlertExample\n        `}\n    </code>\n  </pre>\n)\n"],"mappings":"2CAAA,MAAO,IAAMA,aAAY,cACvB,YAAK,SAAS,CAAC,cAAc,uBAC3B,aAAM,SAAS,CAAC,cAAc,wZAmBvB,EAEV,CAED,MAAO,IAAMC,WAAU,cACrB,kCACE,aAAM,SAAS,CAAC,cAAc,gXAevB,EAEV,CAED,MAAO,IAAMC,YAAW,cACtB,kCACE,aAAM,SAAS,CAAC,cAAc,usEA8DvB,EAEV,CAED,MAAO,IAAMC,iBAAgB,cAC3B,kCACE,aAAM,SAAS,CAAC,cAAc,4gBAoBvB,EAEV,CAED,MAAO,IAAMC,kBAAiB,cAC5B,kCACE,aAAM,SAAS,CAAC,cAAc,2aAkBvB,EAEV,CAED,MAAO,IAAMC,UAAS,cACpB,kCACE,aAAM,SAAS,CAAC,cAAc,sfAsBvB,EAEV,CAED,MAAO,IAAMC,aAAY,cACvB,kCACE,aAAM,SAAS,CAAC,cAAc,6oCA4CvB,EAEV"},"metadata":{},"sourceType":"module"}