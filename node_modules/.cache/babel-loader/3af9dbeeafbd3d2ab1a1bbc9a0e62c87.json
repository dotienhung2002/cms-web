{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/spinners/SpinnerSourceCode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var spinnerBorder = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerBorder = () => {\\n  return <Spinner />\\n}\\nexport default SpinnerBorder\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 3\n}, this);\nexport var spinnerColors = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerColors = () => {\\n  return (\\n    <React.Fragment>\\n      <Spinner color='primary' />\\n      <Spinner color='secondary' />\\n      <Spinner color='success' />\\n      <Spinner color='danger' />\\n      <Spinner color='warning' />\\n      <Spinner color='info' />\\n      <Spinner color='light' />\\n      <Spinner color='dark' />\\n    </React.Fragment>\\n  )\\n}\\nexport default SpinnerColors\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\nexport var spinnerGrowing = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerGrowing = () => {\\n  return <Spinner type='grow' color='primary' />\\n}\\nexport default SpinnerGrowing\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\nexport var spinnerGrowColors = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerGrowColors = () => {\\n  return (\\n    <React.Fragment>\\n      <Spinner type='grow' color='primary' />\\n      <Spinner type='grow' color='secondary' />\\n      <Spinner type='grow' color='success' />\\n      <Spinner type='grow' color='danger' />\\n      <Spinner type='grow' color='warning' />\\n      <Spinner type='grow' color='info' />\\n      <Spinner type='grow' color='light' />\\n      <Spinner type='grow' color='dark' />\\n    </React.Fragment>\\n  )\\n}\\nexport default SpinnerGrowColors\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this);\nexport var spinnerFlex = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerFlex = () => {\\n  return (\\n    <React.Fragment>\\n      <div className='d-flex justify-content-center my-1'>\\n        <Spinner />\\n      </div>\\n\\n      <div className='d-flex justify-content-between align-items-center'>\\n        <strong>Loading...</strong>\\n        <Spinner />\\n      </div>\\n    </React.Fragment>\\n  )\\n}\\nexport default SpinnerFlex\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 3\n}, this);\nexport var spinnerFloat = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerFloat = () => {\\n  return <Spinner className='float-right mb-2' />\\n}\\nexport default SpinnerFloat\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 114,\n  columnNumber: 3\n}, this);\nexport var spinnerTextAlignment = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerTextAlignment = () => {\\n  return (\\n    <div className='text-center'>\\n      <Spinner />\\n    </div>\\n  )\\n}\\nexport default SpinnerTextAlignment\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 3\n}, this);\nexport var spinnerSizes = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Spinner } from 'reactstrap'\\n\\nconst SpinnerSizes = () => {\\n  return (\\n    <div className='demo-inline-spacing'>\\n      <div>\\n        <Spinner className='mr-25' size='sm' />\\n        <Spinner type='grow' size='sm' />\\n      </div>\\n      <div>\\n        <Spinner className='mr-25' />\\n        <Spinner type='grow' />\\n      </div>\\n      <div>\\n        <Spinner className='mr-25' size='lg' />\\n        <Spinner type='grow' size='lg' />\\n      </div>\\n    </div>\\n  )\\n}\\nexport default SpinnerSizes\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 150,\n  columnNumber: 3\n}, this);\nexport var spinnerButton = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: \"\\n\\nimport { Button, Spinner } from 'reactstrap'\\n\\nconst SpinnerButton = () => {\\n  return (\\n    <div className='demo-inline-spacing'>\\n      <Button.Ripple color='primary'>\\n        <Spinner color='white' size='sm' />\\n      </Button.Ripple>\\n\\n      <Button.Ripple color='primary'>\\n        <Spinner color='white' size='sm' />\\n        <span className='ml-50'>Loading...</span>\\n      </Button.Ripple>\\n\\n      <Button.Ripple color='primary'>\\n        <Spinner color='white' size='sm' type='grow' />\\n      </Button.Ripple>\\n\\n      <Button.Ripple color='primary'>\\n        <Spinner color='white' size='sm' type='grow' />\\n        <span className='ml-50'>Loading...</span>\\n      </Button.Ripple>\\n    </div>\\n  )\\n}\\nexport default SpinnerButton\\n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 181,\n  columnNumber: 3\n}, this);","map":{"version":3,"names":["spinnerBorder","spinnerColors","spinnerGrowing","spinnerGrowColors","spinnerFlex","spinnerFloat","spinnerTextAlignment","spinnerSizes","spinnerButton"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/spinners/SpinnerSourceCode.js"],"sourcesContent":["export const spinnerBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerBorder = () => {\n  return <Spinner />\n}\nexport default SpinnerBorder\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerColors = () => {\n  return (\n    <React.Fragment>\n      <Spinner color='primary' />\n      <Spinner color='secondary' />\n      <Spinner color='success' />\n      <Spinner color='danger' />\n      <Spinner color='warning' />\n      <Spinner color='info' />\n      <Spinner color='light' />\n      <Spinner color='dark' />\n    </React.Fragment>\n  )\n}\nexport default SpinnerColors\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerGrowing = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerGrowing = () => {\n  return <Spinner type='grow' color='primary' />\n}\nexport default SpinnerGrowing\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerGrowColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerGrowColors = () => {\n  return (\n    <React.Fragment>\n      <Spinner type='grow' color='primary' />\n      <Spinner type='grow' color='secondary' />\n      <Spinner type='grow' color='success' />\n      <Spinner type='grow' color='danger' />\n      <Spinner type='grow' color='warning' />\n      <Spinner type='grow' color='info' />\n      <Spinner type='grow' color='light' />\n      <Spinner type='grow' color='dark' />\n    </React.Fragment>\n  )\n}\nexport default SpinnerGrowColors`}\n    </code>\n  </pre>\n)\n\nexport const spinnerFlex = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerFlex = () => {\n  return (\n    <React.Fragment>\n      <div className='d-flex justify-content-center my-1'>\n        <Spinner />\n      </div>\n\n      <div className='d-flex justify-content-between align-items-center'>\n        <strong>Loading...</strong>\n        <Spinner />\n      </div>\n    </React.Fragment>\n  )\n}\nexport default SpinnerFlex\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerFloat = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerFloat = () => {\n  return <Spinner className='float-right mb-2' />\n}\nexport default SpinnerFloat\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerTextAlignment = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerTextAlignment = () => {\n  return (\n    <div className='text-center'>\n      <Spinner />\n    </div>\n  )\n}\nexport default SpinnerTextAlignment\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Spinner } from 'reactstrap'\n\nconst SpinnerSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <div>\n        <Spinner className='mr-25' size='sm' />\n        <Spinner type='grow' size='sm' />\n      </div>\n      <div>\n        <Spinner className='mr-25' />\n        <Spinner type='grow' />\n      </div>\n      <div>\n        <Spinner className='mr-25' size='lg' />\n        <Spinner type='grow' size='lg' />\n      </div>\n    </div>\n  )\n}\nexport default SpinnerSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerButton = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, Spinner } from 'reactstrap'\n\nconst SpinnerButton = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Button.Ripple color='primary'>\n        <Spinner color='white' size='sm' />\n      </Button.Ripple>\n\n      <Button.Ripple color='primary'>\n        <Spinner color='white' size='sm' />\n        <span className='ml-50'>Loading...</span>\n      </Button.Ripple>\n\n      <Button.Ripple color='primary'>\n        <Spinner color='white' size='sm' type='grow' />\n      </Button.Ripple>\n\n      <Button.Ripple color='primary'>\n        <Spinner color='white' size='sm' type='grow' />\n        <span className='ml-50'>Loading...</span>\n      </Button.Ripple>\n    </div>\n  )\n}\nexport default SpinnerButton\n`}\n    </code>\n  </pre>\n)\n"],"mappings":";;AAAA,OAAO,IAAMA,aAAa,gBACxB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAUvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,aAAa,gBACxB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAqBvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,cAAc,gBACzB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAUvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,iBAAiB,gBAC5B;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAoBvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,WAAW,gBACtB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAqBvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,YAAY,gBACvB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAUvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,oBAAoB,gBAC/B;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAcvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,YAAY,gBACvB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAyBvB;EAAA;EAAA;EAAA;AAAA,QAEV;AAED,OAAO,IAAMC,aAAa,gBACxB;EAAA,uBACE;IAAM,SAAS,EAAC,cAAc;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AA8BvB;EAAA;EAAA;EAAA;AAAA,QAEV"},"metadata":{},"sourceType":"module"}