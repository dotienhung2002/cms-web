{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/alerts/AlertExample.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Alert, FormGroup, Label, Input } from 'reactstrap';\nimport { AlertCircle } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertExample = () => {\n  _s();\n\n  const [inputTerm, setInputTerm] = useState('');\n  const [visible, setVisible] = useState(true);\n\n  const handleInput = e => {\n    setInputTerm(e.target.value);\n\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-spacing-0\",\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"numbers\",\n        children: \"Enter numbers only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"w-25 h-25 pl-1\",\n        placeholder: \"0123456789\",\n        value: inputTerm,\n        onChange: e => handleInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"danger\",\n      isOpen: visible,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-body\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-1\",\n          children: [\"The value is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 26\n          }, this), \" you can only enter numbers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertExample, \"Ir6ttLInuVWIqg05zs0K6vsPqeA=\");\n\n_c = AlertExample;\nexport default AlertExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertExample\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/alerts/AlertExample.js"],"names":["useState","Alert","FormGroup","Label","Input","AlertCircle","AlertExample","inputTerm","setInputTerm","visible","setVisible","handleInput","e","target","value","length","isNaN"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,KAAlC,QAA+C,YAA/C;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMW,WAAW,GAAGC,CAAC,IAAI;AACvBJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;;AAEA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAxB,IAA6BC,KAAK,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC,EAAwD;AACtDJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,WAAW,EAAC,YAA9C;AAA2D,QAAA,KAAK,EAAEH,SAAlE;AAA6E,QAAA,QAAQ,EAAEK,CAAC,IAAID,WAAW,CAACC,CAAD;AAAvG;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAsB,MAAA,MAAM,EAAEH,OAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAC4B,GAD5B,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,mDACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9BD;;GAAMH,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import { useState } from 'react'\nimport { Alert, FormGroup, Label, Input } from 'reactstrap'\nimport { AlertCircle } from 'react-feather'\n\nconst AlertExample = () => {\n  const [inputTerm, setInputTerm] = useState('')\n  const [visible, setVisible] = useState(true)\n\n  const handleInput = e => {\n    setInputTerm(e.target.value)\n\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\n      setVisible(true)\n    } else {\n      setVisible(false)\n    }\n  }\n\n  return (\n    <div className='demo-spacing-0'>\n      <FormGroup>\n        <Label htmlFor='numbers'>Enter numbers only</Label>\n        <Input className='w-25 h-25 pl-1' placeholder='0123456789' value={inputTerm} onChange={e => handleInput(e)} />\n      </FormGroup>\n      <Alert color='danger' isOpen={visible}>\n        <div className='alert-body'>\n          <AlertCircle size={15} />{' '}\n          <span className='ml-1'>\n            The value is <strong>invalid</strong> you can only enter numbers\n          </span>\n        </div>\n      </Alert>\n    </div>\n  )\n}\nexport default AlertExample\n"]},"metadata":{},"sourceType":"module"}