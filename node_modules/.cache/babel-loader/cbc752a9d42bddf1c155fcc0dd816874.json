{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/calendar/AddEventSidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Custom Components\n\nimport Avatar from '@Components/avatar'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { toast } from 'react-toastify';\nimport Flatpickr from 'react-flatpickr';\nimport { X, Check, Trash } from 'react-feather';\nimport Select, { components } from 'react-select';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, Label, CustomInput, Input, Form } from 'reactstrap'; // ** Utils\n\nimport { selectThemeColors, isObjEmpty } from '@Utils'; // ** Avatar Images\n\nimport img1 from '@Assets/images/avatars/1-small.png';\nimport img2 from '@Assets/images/avatars/3-small.png';\nimport img3 from '@Assets/images/avatars/5-small.png';\nimport img4 from '@Assets/images/avatars/7-small.png';\nimport img5 from '@Assets/images/avatars/9-small.png';\nimport img6 from '@Assets/images/avatars/11-small.png'; // ** Styles Imports\n\nimport '@Styles/react/libs/react-select/_react-select.scss';\nimport '@Styles/react/libs/flatpickr/flatpickr.scss'; // ** Toast Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToastComponent = ({\n  title,\n  icon,\n  color\n}) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toastify-header pb-0\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        size: \"sm\",\n        color: color,\n        icon: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"toast-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\n_c = ToastComponent;\n\nconst AddEventSidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    store,\n    dispatch,\n    open,\n    handleAddEventSidebar,\n    calendarsColor,\n    calendarApi,\n    refetchEvents,\n    addEvent,\n    selectEvent,\n    updateEvent,\n    removeEvent\n  } = props; // ** Vars\n\n  const selectedEvent = store.selectedEvent;\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm(); // ** States\n\n  const [url, setUrl] = useState('');\n  const [desc, setDesc] = useState('');\n  const [title, setTitle] = useState('');\n  const [guests, setGuests] = useState({});\n  const [allDay, setAllDay] = useState(false);\n  const [location, setLocation] = useState('');\n  const [endPicker, setEndPicker] = useState(new Date());\n  const [startPicker, setStartPicker] = useState(new Date());\n  const [value, setValue] = useState([{\n    value: 'Business',\n    label: 'Business',\n    color: 'primary'\n  }]); // ** Select Options\n\n  const options = [{\n    value: 'Business',\n    label: 'Business',\n    color: 'primary'\n  }, {\n    value: 'Personal',\n    label: 'Personal',\n    color: 'danger'\n  }, {\n    value: 'Family',\n    label: 'Family',\n    color: 'warning'\n  }, {\n    value: 'Holiday',\n    label: 'Holiday',\n    color: 'success'\n  }, {\n    value: 'ETC',\n    label: 'ETC',\n    color: 'info'\n  }];\n  const guestsOptions = [{\n    value: 'Donna Frank',\n    label: 'Donna Frank',\n    avatar: img1\n  }, {\n    value: 'Jane Foster',\n    label: 'Jane Foster',\n    avatar: img2\n  }, {\n    value: 'Gabrielle Robertson',\n    label: 'Gabrielle Robertson',\n    avatar: img3\n  }, {\n    value: 'Lori Spears',\n    label: 'Lori Spears',\n    avatar: img4\n  }, {\n    value: 'Sandy Vega',\n    label: 'Sandy Vega',\n    avatar: img5\n  }, {\n    value: 'Cheryl May',\n    label: 'Cheryl May',\n    avatar: img6\n  }]; // ** Custom select components\n\n  const OptionComponent = ({\n    data,\n    ...props\n  }) => {\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bullet bullet-${data.color} bullet-sm mr-50`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), data.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n\n  const GuestsComponent = ({\n    data,\n    ...props\n  }) => {\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"my-0 mr-1\",\n          size: \"sm\",\n          img: data.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }; // ** Adds New Event\n\n\n  const handleAddEvent = () => {\n    const obj = {\n      title,\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: value[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    };\n    dispatch(addEvent(obj));\n    refetchEvents();\n    handleAddEventSidebar();\n    toast.success( /*#__PURE__*/_jsxDEV(ToastComponent, {\n      title: \"Event Added\",\n      color: \"success\",\n      icon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }, this), {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    });\n  }; // ** Reset Input Values on Close\n\n\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}));\n    setTitle('');\n    setAllDay(false);\n    setUrl('');\n    setLocation('');\n    setDesc('');\n    setGuests({});\n    setValue([{\n      value: 'Business',\n      label: 'Business',\n      color: 'primary'\n    }]);\n    setStartPicker(new Date());\n    setEndPicker(new Date());\n  }; // ** Set sidebar fields\n\n\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar;\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return {\n            label: calendar,\n            value: calendar,\n            color: calendarsColor[calendar]\n          };\n        } else {\n          return {\n            value: 'Business',\n            label: 'Business',\n            color: 'primary'\n          };\n        }\n      };\n\n      setTitle(selectedEvent.title || title);\n      setAllDay(selectedEvent.allDay || allDay);\n      setUrl(selectedEvent.url || url);\n      setLocation(selectedEvent.extendedProps.location || location);\n      setDesc(selectedEvent.extendedProps.description || desc);\n      setGuests(selectedEvent.extendedProps.guests || guests);\n      setStartPicker(new Date(selectedEvent.start));\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end));\n      setValue([resolveLabel()]);\n    }\n  }; // ** (UI) updateEventInCalendar\n\n\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id); // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index];\n      existingEvent.setProp(propName, updatedEventData[propName]);\n    } // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n\n\n    existingEvent.setDates(updatedEventData.start, updatedEventData.end, {\n      allDay: updatedEventData.allDay\n    }); // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index];\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName]);\n    }\n  }; // ** Updates Event in Store\n\n\n  const handleUpdateEvent = () => {\n    const eventToUpdate = {\n      id: selectedEvent.id,\n      title,\n      allDay,\n      start: startPicker,\n      end: endPicker,\n      url,\n      extendedProps: {\n        location,\n        description: desc,\n        guests,\n        calendar: value[0].label\n      }\n    };\n    const propsToUpdate = ['id', 'title', 'url'];\n    const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description'];\n    dispatch(updateEvent(eventToUpdate));\n    updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\n    handleAddEventSidebar();\n    toast.success( /*#__PURE__*/_jsxDEV(ToastComponent, {\n      title: \"Event Updated\",\n      color: \"success\",\n      icon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }, this), {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    });\n  }; // ** (UI) removeEventInCalendar\n\n\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove();\n  };\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id));\n    removeEventInCalendar(selectedEvent.id);\n    handleAddEventSidebar();\n    toast.error( /*#__PURE__*/_jsxDEV(ToastComponent, {\n      title: \"Event Removed\",\n      color: \"danger\",\n      icon: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this), {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    });\n  }; // ** Event Action buttons\n\n\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          className: \"mr-1\",\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"secondary\",\n          type: \"reset\",\n          onClick: handleAddEventSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          className: \"mr-1\",\n          color: \"primary\" // onClick={handleUpdateEvent}\n          ,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"danger\",\n          onClick: handleDeleteEvent,\n          outline: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this);\n    }\n  }; // ** Close BTN\n\n\n  const CloseBtn = /*#__PURE__*/_jsxDEV(X, {\n    className: \"cursor-pointer\",\n    size: 15,\n    onClick: handleAddEventSidebar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 20\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: handleAddEventSidebar,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSelectedEvent,\n    onClosed: handleResetInputValues,\n    modalClassName: \"modal-slide-in event-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"mb-1\",\n      toggle: handleAddEventSidebar,\n      close: CloseBtn,\n      tag: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        children: [selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add', \" Event\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"flex-grow-1 pb-sm-0 pb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(data => {\n          if (isObjEmpty(errors)) {\n            if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n              handleAddEvent();\n            } else {\n              handleUpdateEvent();\n            }\n\n            handleAddEventSidebar();\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"title\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            innerRef: register({\n              register: true,\n              validate: value => value !== ''\n            }),\n            className: classnames({\n              'is-invalid': errors.title\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"label\",\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"label\",\n            value: value,\n            options: options,\n            theme: selectThemeColors,\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            onChange: data => setValue([data]),\n            components: {\n              Option: OptionComponent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            required: true,\n            id: \"startDate\" // tag={Flatpickr}\n            ,\n            name: \"startDate\",\n            className: \"form-control\",\n            onChange: date => setStartPicker(date[0]),\n            value: startPicker,\n            options: {\n              enableTime: allDay === false,\n              dateFormat: 'Y-m-d H:i'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"endDate\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            required: true,\n            id: \"endDate\" // tag={Flatpickr}\n            ,\n            name: \"endDate\",\n            className: \"form-control\",\n            onChange: date => setEndPicker(date[0]),\n            value: endPicker,\n            options: {\n              enableTime: allDay === false,\n              dateFormat: 'Y-m-d H:i'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            type: \"switch\",\n            id: \"allDay\",\n            name: \"customSwitch\",\n            label: \"All Day\",\n            checked: allDay,\n            onChange: e => setAllDay(e.target.checked),\n            inline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"eventURL\",\n            children: \"Event URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"url\",\n            id: \"eventURL\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            placeholder: \"https://www.google.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"guests\",\n            children: \"Guests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            id: \"guests\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: guestsOptions,\n            theme: selectThemeColors,\n            value: guests.length ? [...guests] : null,\n            onChange: data => setGuests([...data]),\n            components: {\n              Option: GuestsComponent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"location\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"location\",\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            placeholder: \"Office\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"text\",\n            id: \"description\",\n            rows: \"3\",\n            value: desc,\n            onChange: e => setDesc(e.target.value),\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(EventActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventSidebar, \"DGRxtgIa7d0JHFWZ/1QjkFVzjnk=\", false, function () {\n  return [useForm];\n});\n\n_c2 = AddEventSidebar;\nexport default AddEventSidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToastComponent\");\n$RefreshReg$(_c2, \"AddEventSidebar\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/calendar/AddEventSidebar.js"],"names":["Fragment","useState","Avatar","classnames","toast","Flatpickr","X","Check","Trash","Select","components","useForm","Controller","Button","Modal","ModalHeader","ModalBody","FormGroup","Label","CustomInput","Input","Form","selectThemeColors","isObjEmpty","img1","img2","img3","img4","img5","img6","ToastComponent","title","icon","color","AddEventSidebar","props","store","dispatch","open","handleAddEventSidebar","calendarsColor","calendarApi","refetchEvents","addEvent","selectEvent","updateEvent","removeEvent","selectedEvent","register","errors","handleSubmit","url","setUrl","desc","setDesc","setTitle","guests","setGuests","allDay","setAllDay","location","setLocation","endPicker","setEndPicker","Date","startPicker","setStartPicker","value","setValue","label","options","guestsOptions","avatar","OptionComponent","data","GuestsComponent","handleAddEvent","obj","start","end","display","extendedProps","calendar","length","undefined","success","autoClose","hideProgressBar","closeButton","handleResetInputValues","handleSelectedEvent","resolveLabel","description","updateEventInCalendar","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","id","index","propName","setProp","setDates","setExtendedProp","handleUpdateEvent","eventToUpdate","removeEventInCalendar","eventId","remove","handleDeleteEvent","error","EventActions","CloseBtn","e","target","validate","Option","date","enableTime","dateFormat","checked"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@Components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { toast } from 'react-toastify'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Check, Trash } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, Label, CustomInput, Input, Form } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors, isObjEmpty } from '@Utils'\n\n// ** Avatar Images\nimport img1 from '@Assets/images/avatars/1-small.png'\nimport img2 from '@Assets/images/avatars/3-small.png'\nimport img3 from '@Assets/images/avatars/5-small.png'\nimport img4 from '@Assets/images/avatars/7-small.png'\nimport img5 from '@Assets/images/avatars/9-small.png'\nimport img6 from '@Assets/images/avatars/11-small.png'\n\n// ** Styles Imports\nimport '@Styles/react/libs/react-select/_react-select.scss'\nimport '@Styles/react/libs/flatpickr/flatpickr.scss'\n\n// ** Toast Component\nconst ToastComponent = ({ title, icon, color }) => (\n  <Fragment>\n    <div className='toastify-header pb-0'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color={color} icon={icon} />\n        <h6 className='toast-title'>{title}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst AddEventSidebar = props => {\n  // ** Props\n  const {\n    store,\n    dispatch,\n    open,\n    handleAddEventSidebar,\n    calendarsColor,\n    calendarApi,\n    refetchEvents,\n    addEvent,\n    selectEvent,\n    updateEvent,\n    removeEvent\n  } = props\n\n  // ** Vars\n  const selectedEvent = store.selectedEvent\n  const { register, errors, handleSubmit } = useForm()\n\n  // ** States\n  const [url, setUrl] = useState('')\n  const [desc, setDesc] = useState('')\n  const [title, setTitle] = useState('')\n  const [guests, setGuests] = useState({})\n  const [allDay, setAllDay] = useState(false)\n  const [location, setLocation] = useState('')\n  const [endPicker, setEndPicker] = useState(new Date())\n  const [startPicker, setStartPicker] = useState(new Date())\n  const [value, setValue] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\n\n  // ** Select Options\n  const options = [\n    { value: 'Business', label: 'Business', color: 'primary' },\n    { value: 'Personal', label: 'Personal', color: 'danger' },\n    { value: 'Family', label: 'Family', color: 'warning' },\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\n    { value: 'ETC', label: 'ETC', color: 'info' }\n  ]\n\n  const guestsOptions = [\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\n  ]\n\n  // ** Custom select components\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <span className={`bullet bullet-${data.color} bullet-sm mr-50`}></span>\n        {data.label}\n      </components.Option>\n    )\n  }\n\n  const GuestsComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 mr-1' size='sm' img={data.avatar} />\n          <div>{data.label}</div>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title,\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: value[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    }\n    dispatch(addEvent(obj))\n    refetchEvents()\n    handleAddEventSidebar()\n    toast.success(<ToastComponent title='Event Added' color='success' icon={<Check />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}))\n    setTitle('')\n    setAllDay(false)\n    setUrl('')\n    setLocation('')\n    setDesc('')\n    setGuests({})\n    setValue([{ value: 'Business', label: 'Business', color: 'primary' }])\n    setStartPicker(new Date())\n    setEndPicker(new Date())\n  }\n\n  // ** Set sidebar fields\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\n        } else {\n          return { value: 'Business', label: 'Business', color: 'primary' }\n        }\n      }\n      setTitle(selectedEvent.title || title)\n      setAllDay(selectedEvent.allDay || allDay)\n      setUrl(selectedEvent.url || url)\n      setLocation(selectedEvent.extendedProps.location || location)\n      setDesc(selectedEvent.extendedProps.description || desc)\n      setGuests(selectedEvent.extendedProps.guests || guests)\n      setStartPicker(new Date(selectedEvent.start))\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\n      setValue([resolveLabel()])\n    }\n  }\n\n  // ** (UI) updateEventInCalendar\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n    // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index]\n      existingEvent.setProp(propName, updatedEventData[propName])\n    }\n\n    // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n    existingEvent.setDates(updatedEventData.start, updatedEventData.end, { allDay: updatedEventData.allDay })\n\n    // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index]\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n    }\n  }\n\n  // ** Updates Event in Store\n  const handleUpdateEvent = () => {\n    const eventToUpdate = {\n      id: selectedEvent.id,\n      title,\n      allDay,\n      start: startPicker,\n      end: endPicker,\n      url,\n      extendedProps: {\n        location,\n        description: desc,\n        guests,\n        calendar: value[0].label\n      }\n    }\n\n    const propsToUpdate = ['id', 'title', 'url']\n    const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\n\n    dispatch(updateEvent(eventToUpdate))\n    updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\n    handleAddEventSidebar()\n    toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** (UI) removeEventInCalendar\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove()\n  }\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id))\n    removeEventInCalendar(selectedEvent.id)\n    handleAddEventSidebar()\n    toast.error(<ToastComponent title='Event Removed' color='danger' icon={<Trash />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Event Action buttons\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n      return (\n        <Fragment>\n          <Button.Ripple className='mr-1' type='submit' color='primary'>\n            Add\n          </Button.Ripple>\n          <Button.Ripple color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\n            Cancel\n          </Button.Ripple>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button.Ripple\n            className='mr-1'\n            color='primary'\n            // onClick={handleUpdateEvent}\n          >\n            Update\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={handleDeleteEvent} outline>\n            Delete\n          </Button.Ripple>\n        </Fragment>\n      )\n    }\n  }\n\n  // ** Close BTN\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleAddEventSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSelectedEvent}\n      onClosed={handleResetInputValues}\n      modalClassName='modal-slide-in event-sidebar'\n    >\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\n        </h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n        <Form\n          onSubmit={handleSubmit(data => {\n            if (isObjEmpty(errors)) {\n              if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                handleAddEvent()\n              } else {\n                handleUpdateEvent()\n              }\n              handleAddEventSidebar()\n            }\n          })}\n        >\n          <FormGroup>\n            <Label for='title'>\n              Title <span className='text-danger'>*</span>\n            </Label>\n            <Input\n              id='title'\n              name='title'\n              placeholder='Title'\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              innerRef={register({ register: true, validate: value => value !== '' })}\n              className={classnames({\n                'is-invalid': errors.title\n              })}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='label'>Label</Label>\n            <Select\n              id='label'\n              value={value}\n              options={options}\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              onChange={data => setValue([data])}\n              components={{\n                Option: OptionComponent\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='startDate'>Start Date</Label>\n            <Flatpickr\n              required\n              id='startDate'\n              // tag={Flatpickr}\n              name='startDate'\n              className='form-control'\n              onChange={date => setStartPicker(date[0])}\n              value={startPicker}\n              options={{\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='endDate'>End Date</Label>\n            <Flatpickr\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='endDate'\n              className='form-control'\n              onChange={date => setEndPicker(date[0])}\n              value={endPicker}\n              options={{\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <CustomInput\n              type='switch'\n              id='allDay'\n              name='customSwitch'\n              label='All Day'\n              checked={allDay}\n              onChange={e => setAllDay(e.target.checked)}\n              inline\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='eventURL'>Event URL</Label>\n            <Input\n              type='url'\n              id='eventURL'\n              value={url}\n              onChange={e => setUrl(e.target.value)}\n              placeholder='https://www.google.com'\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='guests'>Guests</Label>\n            <Select\n              isMulti\n              id='guests'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={guestsOptions}\n              theme={selectThemeColors}\n              value={guests.length ? [...guests] : null}\n              onChange={data => setGuests([...data])}\n              components={{\n                Option: GuestsComponent\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='location'>Location</Label>\n            <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='description'>Description</Label>\n            <Input\n              type='textarea'\n              name='text'\n              id='description'\n              rows='3'\n              value={desc}\n              onChange={e => setDesc(e.target.value)}\n              placeholder='Description'\n            />\n          </FormGroup>\n          <FormGroup className='d-flex'>\n            <EventActions />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddEventSidebar\n"]},"metadata":{},"sourceType":"module"}