{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/modal/ModalSizes.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ModalConfig = [{\n  id: 1,\n  btnTitle: 'Extra Small',\n  modalTitle: 'Extra Small modal',\n  modalClass: 'modal-xs'\n}, {\n  id: 2,\n  btnTitle: 'Small Modal',\n  modalTitle: 'Small Modal',\n  modalClass: 'modal-sm'\n}, {\n  id: 3,\n  btnTitle: 'Default Modal',\n  modalTitle: 'Default Modal',\n  modalClass: ''\n}, {\n  id: 4,\n  btnTitle: 'Large Modal',\n  modalTitle: 'Large Modal',\n  modalClass: 'modal-lg'\n}, {\n  id: 5,\n  btnTitle: 'Extra Large Modal',\n  modalTitle: 'Extra Large Modal',\n  modalClass: 'modal-xl'\n}];\n\nvar ModalSizes = function ModalSizes() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggleModal = function toggleModal(id) {\n    if (modal !== id) {\n      setModal(id);\n    } else {\n      setModal(null);\n    }\n  };\n\n  var renderModal = ModalConfig.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return toggleModal(item.id);\n          },\n          outline: true,\n          children: item.btnTitle\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal === item.id,\n        toggle: function toggle() {\n          return toggleModal(item.id);\n        },\n        className: \"modal-dialog-centered \".concat(item.modalClass),\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: function toggle() {\n            return toggleModal(item.id);\n          },\n          children: [item.modalTitle, item.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Halvah powder wafer. Chupa chups pie topping carrot cake cake. Tootsie roll sesame snaps jelly-o marshmallow marshmallow jelly jujubes candy. Chupa chups cheesecake gingerbread chupa chups cake candy canes sweet roll.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: function onClick() {\n              return toggleModal(item.id);\n            },\n            outline: true,\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-inline-spacing\",\n    children: renderModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ModalSizes, \"+2xwMS3J0RcBA0qWw62dnTGSPTE=\");\n\n_c = ModalSizes;\nexport default ModalSizes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSizes\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/modal/ModalSizes.js"],"names":["Fragment","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalConfig","id","btnTitle","modalTitle","modalClass","ModalSizes","modal","setModal","toggleModal","renderModal","map","item","title"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;AAEA,IAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,QAAQ,EAAE,aAFZ;AAGEC,EAAAA,UAAU,EAAE,mBAHd;AAIEC,EAAAA,UAAU,EAAE;AAJd,CADkB,EAOlB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,QAAQ,EAAE,aAFZ;AAGEC,EAAAA,UAAU,EAAE,aAHd;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAPkB,EAalB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,QAAQ,EAAE,eAFZ;AAGEC,EAAAA,UAAU,EAAE,eAHd;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAbkB,EAmBlB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,QAAQ,EAAE,aAFZ;AAGEC,EAAAA,UAAU,EAAE,aAHd;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAnBkB,EAyBlB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,QAAQ,EAAE,mBAFZ;AAGEC,EAAAA,UAAU,EAAE,mBAHd;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAzBkB,CAApB;;AAiCA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACGX,QAAQ,CAAC,IAAD,CADX;AAAA;AAAA,MAChBY,KADgB;AAAA,MACTC,QADS;;AAGvB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAP,EAAE,EAAI;AACxB,QAAIK,KAAK,KAAKL,EAAd,EAAkB;AAChBM,MAAAA,QAAQ,CAACN,EAAD,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAND;;AAQA,MAAME,WAAW,GAAGT,WAAW,CAACU,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AAC1C,wBACE,QAAC,QAAD;AAAA,8BACE;AAAA,+BACE,QAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,KAAK,EAAC,SAArB;AAA+B,UAAA,OAAO,EAAE;AAAA,mBAAMH,WAAW,CAACG,IAAI,CAACV,EAAN,CAAjB;AAAA,WAAxC;AAAqF,UAAA,OAAO,MAA5F;AAAA,oBACGU,IAAI,CAACT;AADR,WAAyES,IAAI,CAACC,KAA9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,KAAD;AACE,QAAA,MAAM,EAAEN,KAAK,KAAKK,IAAI,CAACV,EADzB;AAEE,QAAA,MAAM,EAAE;AAAA,iBAAMO,WAAW,CAACG,IAAI,CAACV,EAAN,CAAjB;AAAA,SAFV;AAGE,QAAA,SAAS,kCAA2BU,IAAI,CAACP,UAAhC,CAHX;AAAA,gCAME,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE;AAAA,mBAAMI,WAAW,CAACG,IAAI,CAACV,EAAN,CAAjB;AAAA,WAArB;AAAA,qBACGU,IAAI,CAACR,UADR,EAEGQ,IAAI,CAACC,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,eAcE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAE;AAAA,qBAAMJ,WAAW,CAACG,IAAI,CAACV,EAAN,CAAjB;AAAA,aAAjC;AAA6D,YAAA,OAAO,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAdF;AAAA,SAIOU,IAAI,CAACV,EAJZ;AAAA;AAAA;AAAA;AAAA,eANF;AAAA,OAAeU,IAAI,CAACV,EAApB;AAAA;AAAA;AAAA;AAAA,aADF;AA6BD,GA9BmB,CAApB;AAgCA,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cAAsCQ;AAAtC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA5CD;;GAAMJ,U;;KAAAA,U;AA6CN,eAAeA,UAAf","sourcesContent":["import { Fragment, useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nconst ModalConfig = [\n  {\n    id: 1,\n    btnTitle: 'Extra Small',\n    modalTitle: 'Extra Small modal',\n    modalClass: 'modal-xs'\n  },\n  {\n    id: 2,\n    btnTitle: 'Small Modal',\n    modalTitle: 'Small Modal',\n    modalClass: 'modal-sm'\n  },\n  {\n    id: 3,\n    btnTitle: 'Default Modal',\n    modalTitle: 'Default Modal',\n    modalClass: ''\n  },\n  {\n    id: 4,\n    btnTitle: 'Large Modal',\n    modalTitle: 'Large Modal',\n    modalClass: 'modal-lg'\n  },\n  {\n    id: 5,\n    btnTitle: 'Extra Large Modal',\n    modalTitle: 'Extra Large Modal',\n    modalClass: 'modal-xl'\n  }\n]\n\nconst ModalSizes = () => {\n  const [modal, setModal] = useState(null)\n\n  const toggleModal = id => {\n    if (modal !== id) {\n      setModal(id)\n    } else {\n      setModal(null)\n    }\n  }\n\n  const renderModal = ModalConfig.map(item => {\n    return (\n      <Fragment key={item.id}>\n        <div>\n          <Button.Ripple color='primary' onClick={() => toggleModal(item.id)} key={item.title} outline>\n            {item.btnTitle}\n          </Button.Ripple>\n        </div>\n        <Modal\n          isOpen={modal === item.id}\n          toggle={() => toggleModal(item.id)}\n          className={`modal-dialog-centered ${item.modalClass}`}\n          key={item.id}\n        >\n          <ModalHeader toggle={() => toggleModal(item.id)}>\n            {item.modalTitle}\n            {item.title}\n          </ModalHeader>\n          <ModalBody>\n            Halvah powder wafer. Chupa chups pie topping carrot cake cake. Tootsie roll sesame snaps jelly-o marshmallow\n            marshmallow jelly jujubes candy. Chupa chups cheesecake gingerbread chupa chups cake candy canes sweet roll.\n          </ModalBody>\n          <ModalFooter>\n            <Button color='primary' onClick={() => toggleModal(item.id)} outline>\n              Accept\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    )\n  })\n\n  return <div className='demo-inline-spacing'>{renderModal}</div>\n}\nexport default ModalSizes\n"]},"metadata":{},"sourceType":"module"}