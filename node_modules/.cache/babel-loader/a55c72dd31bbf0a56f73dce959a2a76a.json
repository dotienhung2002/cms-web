{"ast":null,"code":"/**\n * IE11-safe version of getCanonicalLocales since it's ES2016\n * @param locales locales\n */\nexport function getCanonicalLocales(locales) {\n  // IE11\n  var getCanonicalLocales = Intl.getCanonicalLocales;\n  if (typeof getCanonicalLocales === 'function') {\n    return getCanonicalLocales(locales);\n  }\n  // NOTE: we must NOT call `supportedLocalesOf` of a formatjs polyfill, or their implementation\n  // will even eventually call this method recursively. Here we use `Intl.DateTimeFormat` since it\n  // is not polyfilled by `@formatjs`.\n  // TODO: Fix TypeScript type def for this bc undefined is just fine\n  return Intl.DateTimeFormat.supportedLocalesOf(locales);\n}","map":{"version":3,"mappings":"AAAA;;;;AAIA,OAAM,SAAUA,mBAAmB,CAACC,OAA2B;EAC7D;EACO,kDAAmB;EAC1B,IAAI,OAAOD,mBAAmB,KAAK,UAAU,EAAE;IAC7C,OAAOA,mBAAmB,CAACC,OAAO,CAAa;;EAEjD;EACA;EACA;EACA;EACA,OAAOC,IAAI,CAACC,cAAc,CAACC,kBAAkB,CAACH,OAAQ,CAAC;AACzD","names":["getCanonicalLocales","locales","Intl","DateTimeFormat","supportedLocalesOf"],"sourceRoot":"","sources":["../src/get-canonical-locales.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}