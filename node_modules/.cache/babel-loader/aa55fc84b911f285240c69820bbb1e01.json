{"ast":null,"code":"import _objectSpread from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/card-actions/index.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react';\n\n// ** Third Party Components\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport UiLoader from '@Components/ui-loader';\nimport { ChevronDown, RotateCw, X } from 'react-feather';\nimport { Card, CardHeader, CardTitle, Collapse, Spinner } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CardActions = function CardActions(props) {\n  _s();\n  // ** Props\n  var title = props.title,\n    actions = props.actions,\n    children = props.children,\n    collapseIcon = props.collapseIcon,\n    reloadIcon = props.reloadIcon,\n    removeIcon = props.removeIcon,\n    endReload = props.endReload,\n    color = props.color,\n    isOutline = props.isOutline;\n\n  // ** States\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    reload = _useState2[0],\n    setReload = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    collapse = _useState4[0],\n    setCollapse = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    visibility = _useState6[0],\n    setVisibility = _useState6[1];\n\n  /**\n   ** If custom icon is defined then consider that else default icons\n   */\n  var Icons = {\n    collapse: collapseIcon ? collapseIcon : ChevronDown,\n    remove: removeIcon ? removeIcon : X,\n    reload: reloadIcon ? reloadIcon : RotateCw\n  };\n\n  // ** Action to call\n  var callAction = function callAction(action) {\n    switch (action) {\n      case 'collapse':\n        return setCollapse(!collapse);\n      case 'remove':\n        return setVisibility(false);\n      case 'reload':\n        return setReload(true);\n      default:\n    }\n  };\n\n  // ** Renders card actions\n  var renderIcons = function renderIcons() {\n    /**\n     ** IF: user passes array of actions then loop through them & render all of the actions\n     ** ELSE: render single action\n     */\n\n    if (Array.isArray(actions)) {\n      return actions.map(function (action, i) {\n        var Tag = Icons[action];\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          className: classnames('cursor-pointer', {\n            'mr-50': i < actions.length - 1\n          }),\n          size: 15,\n          onClick: function onClick() {\n            return callAction(action);\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this);\n      });\n    } else {\n      var Tag = Icons[actions];\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"cursor-pointer\",\n        size: 15,\n        onClick: function onClick() {\n          return callAction(actions);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, _this);\n    }\n  };\n\n  // ** Ends reload\n  var removeReload = function removeReload() {\n    setReload(false);\n  };\n\n  // ** If user passes endReload function call it.\n  useEffect(function () {\n    if (reload) {\n      endReload(removeReload);\n    }\n  });\n\n  // ** If user passes collapse action then return <Collapse> as Wrapper else return <Fragment>\n  var CollapseWrapper = actions === 'collapse' || actions.includes('collapse') ? Collapse : Fragment;\n\n  // ** If user passes reload action then return <BlockUi> as Wrapper else return <Fragment>\n  var BlockUiWrapper = actions === 'reload' || actions.includes('reload') ? UiLoader : Fragment;\n  return /*#__PURE__*/_jsxDEV(BlockUiWrapper\n  /*eslint-disable */, _objectSpread(_objectSpread({}, actions === 'reload' || actions.includes('reload') ? {\n    blocking: reload\n  } : {}), {}, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classnames('card-action', {\n        'd-none': !visibility\n      }),\n      color: color,\n      outline: isOutline,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"1rem\"\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 32\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-icons\",\n          children: renderIcons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CollapseWrapper, _objectSpread(_objectSpread({}, actions === 'collapse' || actions.includes('collapse') ? {\n        isOpen: collapse\n      } : {}), {}, {\n        children: children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, _this);\n};\n_s(CardActions, \"H34FB3UQW6V15UpRvUt3rdzmeXw=\");\n_c = CardActions;\nexport default CardActions;\n\n// ** PropTypes\nCardActions.propTypes = {\n  title: PropTypes.string.isRequired,\n  collapseIcon: PropTypes.any,\n  removeIcon: PropTypes.any,\n  reloadIcon: PropTypes.any,\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  endReload: function endReload(props) {\n    // ** User passes reload action and doesn't pass endReload then return Error\n    if (props['actions'] === 'reload' && props['endReload'] === undefined || props['actions'].includes('reload') && props['endReload'] === undefined) {\n      return new Error('Please provide a function to end reload!');\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"CardActions\");","map":{"version":3,"names":["Fragment","useState","useEffect","PropTypes","classnames","UiLoader","ChevronDown","RotateCw","X","Card","CardHeader","CardTitle","Collapse","Spinner","CardActions","props","title","actions","children","collapseIcon","reloadIcon","removeIcon","endReload","color","isOutline","reload","setReload","collapse","setCollapse","visibility","setVisibility","Icons","remove","callAction","action","renderIcons","Array","isArray","map","i","Tag","length","removeReload","CollapseWrapper","includes","BlockUiWrapper","blocking","fontSize","isOpen","propTypes","string","isRequired","any","oneOfType","arrayOf","undefined","Error"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/card-actions/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport UiLoader from '@Components/ui-loader'\nimport { ChevronDown, RotateCw, X } from 'react-feather'\nimport { Card, CardHeader, CardTitle, Collapse, Spinner } from 'reactstrap'\n\nconst CardActions = props => {\n  // ** Props\n  const { title, actions, children, collapseIcon, reloadIcon, removeIcon, endReload ,color,isOutline} = props\n\n  // ** States\n  const [reload, setReload] = useState(false)\n  const [collapse, setCollapse] = useState(true)\n  const [visibility, setVisibility] = useState(true)\n\n  /**\n   ** If custom icon is defined then consider that else default icons\n   */\n  const Icons = {\n    collapse: collapseIcon ? collapseIcon : ChevronDown,\n    remove: removeIcon ? removeIcon : X,\n    reload: reloadIcon ? reloadIcon : RotateCw\n  }\n\n  // ** Action to call\n  const callAction = action => {\n    switch (action) {\n      case 'collapse':\n        return setCollapse(!collapse)\n      case 'remove':\n        return setVisibility(false)\n      case 'reload':\n        return setReload(true)\n      default:\n    }\n  }\n\n  // ** Renders card actions\n  const renderIcons = () => {\n    /**\n     ** IF: user passes array of actions then loop through them & render all of the actions\n     ** ELSE: render single action\n     */\n\n    if (Array.isArray(actions)) {\n      return actions.map((action, i) => {\n        const Tag = Icons[action]\n        return (\n          <Tag\n            key={i}\n            className={classnames('cursor-pointer', {\n              'mr-50': i < actions.length - 1\n            })}\n            size={15}\n            onClick={() => callAction(action)}\n          />\n        )\n      })\n    } else {\n      const Tag = Icons[actions]\n      return <Tag className='cursor-pointer' size={15} onClick={() => callAction(actions)} />\n    }\n  }\n\n  // ** Ends reload\n  const removeReload = () => {\n    setReload(false)\n  }\n\n  // ** If user passes endReload function call it.\n  useEffect(() => {\n    if (reload) {\n      endReload(removeReload)\n    }\n  })\n\n  // ** If user passes collapse action then return <Collapse> as Wrapper else return <Fragment>\n  const CollapseWrapper = actions === 'collapse' || actions.includes('collapse') ? Collapse : Fragment\n\n  // ** If user passes reload action then return <BlockUi> as Wrapper else return <Fragment>\n  const BlockUiWrapper = actions === 'reload' || actions.includes('reload') ? UiLoader : Fragment\n\n  return (\n    <BlockUiWrapper\n      /*eslint-disable */\n      {...(actions === 'reload' || actions.includes('reload')\n        ? {\n            blocking: reload\n          }\n        : {})}\n      /*eslint-enable */\n    >\n      <Card\n        className={classnames('card-action', {\n          'd-none': !visibility\n        })}\n        color={color}\n        outline={isOutline}\n      >\n        <CardHeader>\n          <CardTitle tag='h5' ><span style={{fontSize:\"1rem\"}}>{title}</span></CardTitle>\n          <div className='action-icons'>{renderIcons()}</div>\n        </CardHeader>\n        <CollapseWrapper {...(actions === 'collapse' || actions.includes('collapse') ? { isOpen: collapse } : {})}>\n          {children}\n        </CollapseWrapper>\n      </Card>\n    </BlockUiWrapper>\n  )\n}\n\nexport default CardActions\n\n// ** PropTypes\nCardActions.propTypes = {\n  title: PropTypes.string.isRequired,\n  collapseIcon: PropTypes.any,\n  removeIcon: PropTypes.any,\n  reloadIcon: PropTypes.any,\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  endReload(props) {\n    // ** User passes reload action and doesn't pass endReload then return Error\n    if (\n      (props['actions'] === 'reload' && props['endReload'] === undefined) ||\n      (props['actions'].includes('reload') && props['endReload'] === undefined)\n    ) {\n      return new Error('Please provide a function to end reload!')\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}