{"ast":null,"code":"import{Fragment,useEffect}from'react';import Prism from'prismjs';import{Row,Col,CardText}from'reactstrap';import BreadCrumbs from'@Components/breadcrumbs';import Card from'@Components/card-snippet';import AvatarInitials from'./AvatarInitials';import AvatarSizes from'./AvatarSizes';import AvatarColors from'./AvatarColors';import AvatarLightColors from'./AvatarLightColors';import AvatarIcons from'./AvatarIcons';import AvatarStatus from'./AvatarStatus';import AvatarGroup from'./AvatarGroup';import AvatarGroupTooltip from'./AvatarGroupTooltip';import{avatarColors,avatarLightColors,avatarInitials,avatarIcons,avatarSizes,avatarGroup,avatarGroupTooltip,avatarStatus}from'./AvatarSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Avatar=function Avatar(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Avatar\",breadCrumbParent:\"Extra Components\",breadCrumbActive:\"Avatar\"}),/*#__PURE__*/_jsxs(Row,{className:\"match-height\",children:[/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:avatarSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"size=[sm | lg | xl]\"}),\" prop to change avatar's size. You can also use \",/*#__PURE__*/_jsx(\"code\",{children:\"height\"}),\" &\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"width\"}),\" prop for a custom size\"]}),/*#__PURE__*/_jsx(AvatarSizes,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Intials\",code:avatarInitials,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"initials\"}),\" to show only Initials of content.\"]}),/*#__PURE__*/_jsx(AvatarInitials,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Colors\",code:avatarColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop\",/*#__PURE__*/_jsx(\"code\",{children:\"color=[primary | success | danger | info | warning | dark]\"}),\"to change background color of your avatar.\"]}),/*#__PURE__*/_jsx(AvatarColors,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Light Colors\",code:avatarLightColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop\",/*#__PURE__*/_jsx(\"code\",{children:\"color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\"}),\"to change background color of your avatar.\"]}),/*#__PURE__*/_jsx(AvatarLightColors,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icons\",code:avatarIcons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"icon\"}),\" to create avatar with icon.\"]}),/*#__PURE__*/_jsx(AvatarIcons,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Status\",code:avatarStatus,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop\",/*#__PURE__*/_jsx(\"code\",{children:\"status=[online | offline | away | busy]\"}),\" to create avatar with status.\"]}),/*#__PURE__*/_jsx(AvatarStatus,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Avatar Group\",code:avatarGroup,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"<AvatarGroup />\"}),\" component and pass \",/*#__PURE__*/_jsx(\"code\",{children:\"data\"}),\" prop to create a grouped avatar.\"]}),/*#__PURE__*/_jsx(CardText,{children:\"Data prop must be an array of object which contains props to be passed on avatar.\"}),/*#__PURE__*/_jsx(AvatarGroup,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Avatar Group Tooltip\",code:avatarGroupTooltip,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Add an extra property of \",/*#__PURE__*/_jsx(\"code\",{children:\"title\"}),\" in the data you pass in \",/*#__PURE__*/_jsx(\"code\",{children:\"<AvatarGroup />\"}),\" to create avatar group with tooltip.\"]}),/*#__PURE__*/_jsx(AvatarGroupTooltip,{})]})})]})]});};export default Avatar;","map":{"version":3,"names":["Fragment","useEffect","Prism","Row","Col","CardText","BreadCrumbs","Card","AvatarInitials","AvatarSizes","AvatarColors","AvatarLightColors","AvatarIcons","AvatarStatus","AvatarGroup","AvatarGroupTooltip","avatarColors","avatarLightColors","avatarInitials","avatarIcons","avatarSizes","avatarGroup","avatarGroupTooltip","avatarStatus","Avatar","highlightAll"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/avatar/index.js"],"sourcesContent":["import { Fragment, useEffect } from 'react'\nimport Prism from 'prismjs'\nimport { Row, Col, CardText } from 'reactstrap'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport Card from '@Components/card-snippet'\nimport AvatarInitials from './AvatarInitials'\nimport AvatarSizes from './AvatarSizes'\nimport AvatarColors from './AvatarColors'\nimport AvatarLightColors from './AvatarLightColors'\nimport AvatarIcons from './AvatarIcons'\nimport AvatarStatus from './AvatarStatus'\nimport AvatarGroup from './AvatarGroup'\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\nimport {\n  avatarColors,\n  avatarLightColors,\n  avatarInitials,\n  avatarIcons,\n  avatarSizes,\n  avatarGroup,\n  avatarGroupTooltip,\n  avatarStatus\n} from './AvatarSourceCode'\n\nconst Avatar = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Avatar' breadCrumbParent='Extra Components' breadCrumbActive='Avatar' />\n      <Row className='match-height'>\n        <Col xl='6' lg='12'>\n          <Card title='Sizes' code={avatarSizes}>\n            <CardText className='mb-0'>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\n              <code>width</code> prop for a custom size\n            </CardText>\n            <AvatarSizes />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Intials' code={avatarInitials}>\n            <CardText className='mb-0'>\n              Use prop <code>initials</code> to show only Initials of content.\n            </CardText>\n            <AvatarInitials />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Colors' code={avatarColors}>\n            <CardText className='mb-0'>\n              Use prop\n              <code>color=[primary | success | danger | info | warning | dark]</code>\n              to change background color of your avatar.\n            </CardText>\n            <AvatarColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Light Colors' code={avatarLightColors}>\n            <CardText className='mb-0'>\n              Use prop\n              <code>\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\n              </code>\n              to change background color of your avatar.\n            </CardText>\n            <AvatarLightColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Icons' code={avatarIcons}>\n            <CardText className='mb-0'>\n              Use prop <code>icon</code> to create avatar with icon.\n            </CardText>\n            <AvatarIcons />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Status' code={avatarStatus}>\n            <CardText className='mb-0'>\n              Use prop<code>status=[online | offline | away | busy]</code> to create avatar with status.\n            </CardText>\n            <AvatarStatus />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group' code={avatarGroup}>\n            <CardText>\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\n              avatar.\n            </CardText>\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\n            <AvatarGroup />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\n            <CardText>\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\n              create avatar group with tooltip.\n            </CardText>\n\n            <AvatarGroupTooltip />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Avatar\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAOC,MAAK,KAAM,SAAS,CAC3B,OAASC,GAAG,CAAEC,GAAG,CAAEC,QAAQ,KAAQ,YAAY,CAC/C,MAAOC,YAAW,KAAM,yBAAyB,CACjD,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,eAAc,KAAM,kBAAkB,CAC7C,MAAOC,YAAW,KAAM,eAAe,CACvC,MAAOC,aAAY,KAAM,gBAAgB,CACzC,MAAOC,kBAAiB,KAAM,qBAAqB,CACnD,MAAOC,YAAW,KAAM,eAAe,CACvC,MAAOC,aAAY,KAAM,gBAAgB,CACzC,MAAOC,YAAW,KAAM,eAAe,CACvC,MAAOC,mBAAkB,KAAM,sBAAsB,CACrD,OACEC,YAAY,CACZC,iBAAiB,CACjBC,cAAc,CACdC,WAAW,CACXC,WAAW,CACXC,WAAW,CACXC,kBAAkB,CAClBC,YAAY,KACP,oBAAoB,yFAE3B,GAAMC,OAAM,CAAG,QAATA,OAAM,EAAS,CACnBvB,SAAS,CAAC,UAAM,CACdC,KAAK,CAACuB,YAAY,EAAE,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,MAAC,QAAQ,yBACP,KAAC,WAAW,EAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,QAAQ,EAAG,cACtG,MAAC,GAAG,EAAC,SAAS,CAAC,cAAc,wBAC3B,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAEL,WAAY,wBACpC,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,+BACpB,6CAAgC,iEAAgD,gCAAmB,MAAG,GAAG,cAC7G,+BAAkB,6BACT,cACX,KAAC,WAAW,IAAG,GACV,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAEF,cAAe,wBACzC,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,oCACf,kCAAqB,wCACrB,cACX,KAAC,cAAc,IAAG,GACb,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAEF,YAAa,wBACtC,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,mCAExB,oFAAuE,gDAE9D,cACX,KAAC,YAAY,IAAG,GACX,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAEC,iBAAkB,wBACjD,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,mCAExB,wHAEO,gDAEE,cACX,KAAC,iBAAiB,IAAG,GAChB,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAEE,WAAY,wBACpC,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,oCACf,8BAAiB,kCACjB,cACX,KAAC,WAAW,IAAG,GACV,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAEI,YAAa,wBACtC,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,mCAChB,iEAAoD,oCACnD,cACX,KAAC,YAAY,IAAG,GACX,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAEF,WAAY,wBAC3C,MAAC,QAAQ,gCACH,yCAAkC,qCAAoB,8BAAiB,uCAElE,cACX,KAAC,QAAQ,gGAA6F,cACtG,KAAC,WAAW,IAAG,GACV,EACH,cACN,KAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,uBACjB,MAAC,IAAI,EAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAEC,kBAAmB,wBAC1D,MAAC,QAAQ,qDACkB,+BAAkB,0CAAyB,yCAAkC,2CAE7F,cAEX,KAAC,kBAAkB,IAAG,GACjB,EACH,GACF,GACG,CAEf,CAAC,CACD,cAAeE,OAAM"},"metadata":{},"sourceType":"module"}