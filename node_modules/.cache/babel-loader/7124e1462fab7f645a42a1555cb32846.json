{"ast":null,"code":"// ** Initial State\nconst initialState = {\n  mails: [],\n  params: {},\n  currentMail: null,\n  emailsMeta: {},\n  selectedMails: []\n};\n\nconst EmailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_MAILS':\n      // ** If currentMail is not null / undefined then find and set currentMail\n      let currMail = null;\n\n      if (state.currentMail !== null && state.currentMail !== undefined) {\n        currMail = action.data.emails.find(i => i.id === state.currentMail.id);\n      }\n\n      return { ...state,\n        mails: action.data.emails,\n        emailsMeta: action.data.emailsMeta,\n        params: action.params,\n        currentMail: currMail\n      };\n\n    case 'PAGINATE_MAIL':\n      // ** Find current mail & add hasNextMail & hasPreviousMail props to current mail object based on index\n      const data = action.data;\n      const dataIndex = state.mails.findIndex(i => i.id === data.id);\n      dataIndex === 0 ? data.hasPreviousMail = false : data.hasPreviousMail = true;\n      dataIndex === state.mails.length - 1 ? data.hasNextMail = false : data.hasNextMail = true;\n      return { ...state,\n        currentMail: data\n      };\n\n    case 'UPDATE_MAILS':\n      // ** Find and updated mail\n      function updateMailData(email) {\n        Object.assign(email, action.dataToUpdate);\n      }\n\n      state.mails.forEach(email => {\n        if (action.emailIds.includes(email.id)) updateMailData(email);\n      });\n      return { ...state\n      };\n\n    case 'UPDATE_MAIL_LABEL':\n      return { ...state\n      };\n\n    case 'SELECT_CURRENT_MAIL':\n      return { ...state,\n        currentMail: action.mail\n      };\n\n    case 'SELECT_MAIL':\n      // ** Select mails\n      const selectedMails = state.selectedMails;\n\n      if (!selectedMails.includes(action.id)) {\n        selectedMails.push(action.id);\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.id), 1);\n      }\n\n      return { ...state,\n        selectedMails\n      };\n\n    case 'SELECT_ALL_MAIL':\n      // ** Select all mails\n      const selectAllMails = [];\n\n      if (action.val) {\n        selectAllMails.length = 0;\n        state.mails.forEach(mail => selectAllMails.push(mail.id));\n      } else {\n        selectAllMails.length = 0;\n      }\n\n      return { ...state,\n        selectedMails: selectAllMails\n      };\n\n    case 'RESET_SELECT_MAILS':\n      // ** Reset(remove) all selected mails\n      return { ...state,\n        selectedMails: []\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = EmailReducer;\nexport default EmailReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailReducer\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/email/store/reducer/index.js"],"names":["initialState","mails","params","currentMail","emailsMeta","selectedMails","EmailReducer","state","action","type","currMail","undefined","data","emails","find","i","id","dataIndex","findIndex","hasPreviousMail","length","hasNextMail","updateMailData","email","Object","assign","dataToUpdate","forEach","emailIds","includes","mail","push","splice","indexOf","selectAllMails","val"],"mappings":"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","sourcesContent":["// ** Initial State\nconst initialState = {\n  mails: [],\n  params: {},\n  currentMail: null,\n  emailsMeta: {},\n  selectedMails: []\n}\n\nconst EmailReducer = (state = initialState, action:any) => {\n  switch (action.type) {\n    case 'GET_MAILS':\n      // ** If currentMail is not null / undefined then find and set currentMail\n      let currMail = null\n      if (state.currentMail !== null && state.currentMail !== undefined) {\n        currMail = action.data.emails.find(i => i.id === state.currentMail.id)\n      }\n      return {\n        ...state,\n        mails: action.data.emails,\n        emailsMeta: action.data.emailsMeta,\n        params: action.params,\n        currentMail: currMail\n      }\n    case 'PAGINATE_MAIL':\n      // ** Find current mail & add hasNextMail & hasPreviousMail props to current mail object based on index\n      const data = action.data\n      const dataIndex = state.mails.findIndex(i => i.id === data.id)\n      dataIndex === 0 ? (data.hasPreviousMail = false) : (data.hasPreviousMail = true)\n      dataIndex === state.mails.length - 1 ? (data.hasNextMail = false) : (data.hasNextMail = true)\n      return { ...state, currentMail: data }\n    case 'UPDATE_MAILS':\n      // ** Find and updated mail\n      function updateMailData(email) {\n        Object.assign(email, action.dataToUpdate)\n      }\n      state.mails.forEach(email => {\n        if (action.emailIds.includes(email.id)) updateMailData(email)\n      })\n      return { ...state }\n    case 'UPDATE_MAIL_LABEL':\n      return { ...state }\n    case 'SELECT_CURRENT_MAIL':\n      return { ...state, currentMail: action.mail }\n    case 'SELECT_MAIL':\n      // ** Select mails\n      const selectedMails = state.selectedMails\n      if (!selectedMails.includes(action.id)) {\n        selectedMails.push(action.id)\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.id), 1)\n      }\n      return { ...state, selectedMails }\n    case 'SELECT_ALL_MAIL':\n      // ** Select all mails\n      const selectAllMails = []\n      if (action.val) {\n        selectAllMails.length = 0\n        state.mails.forEach(mail => selectAllMails.push(mail.id))\n      } else {\n        selectAllMails.length = 0\n      }\n      return { ...state, selectedMails: selectAllMails }\n    case 'RESET_SELECT_MAILS':\n      // ** Reset(remove) all selected mails\n      return { ...state, selectedMails: [] }\n    default:\n      return state\n  }\n}\n\nexport default EmailReducer\n"]},"metadata":{},"sourceType":"module"}