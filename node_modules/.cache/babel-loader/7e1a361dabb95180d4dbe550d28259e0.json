{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/views/forms/validations/react-hook-form/AsyncValidation.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AsyncValidationForm = function AsyncValidationForm() {\n  _s();\n  var _useForm = useForm(),\n    register = _useForm.register,\n    errors = _useForm.errors,\n    handleSubmit = _useForm.handleSubmit;\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      var sleep;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sleep = function sleep(ms) {\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, ms);\n                });\n              };\n              _context.next = 3;\n              return sleep(1000);\n            case 3:\n              alert('Form Submitted');\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Async Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"firstNameAsync\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"firstNameAsync\",\n            name: \"firstNameAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.firstNameAsync && true,\n            placeholder: \"Bruce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"lastNameAsync\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"lastNameAsync\",\n            name: \"lastNameAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.lastNameAsync && true,\n            placeholder: \"Wayne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"emailAsync\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"emailAsync\",\n            id: \"emailAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.emailAsync && true,\n            placeholder: \"bruce.wayne@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"passwordAsync\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"passwordAsync\",\n            name: \"passwordAsync\",\n            innerRef: register({\n              required: true\n            }),\n            invalid: errors.passwordAsync && true,\n            placeholder: \"passwordAsync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"d-flex mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n            className: \"mr-1\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n            outline: true,\n            color: \"secondary\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n_s(AsyncValidationForm, \"CvCMr/aFHOfjpy7piEeMvygciec=\", false, function () {\n  return [useForm];\n});\n_c = AsyncValidationForm;\nexport default AsyncValidationForm;\nvar _c;\n$RefreshReg$(_c, \"AsyncValidationForm\");","map":{"version":3,"names":["useForm","Card","CardHeader","CardTitle","CardBody","Button","Form","FormGroup","Label","Input","AsyncValidationForm","register","errors","handleSubmit","onSubmit","data","sleep","ms","Promise","resolve","setTimeout","alert","required","firstNameAsync","lastNameAsync","emailAsync","passwordAsync"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-websitebangiay/src/views/forms/validations/react-hook-form/AsyncValidation.js"],"sourcesContent":["import { useForm } from 'react-hook-form'\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap'\n\nconst AsyncValidationForm = () => {\n  const { register, errors, handleSubmit } = useForm()\n\n  const onSubmit = async data => {\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n    await sleep(1000)\n    alert('Form Submitted')\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Async Submit</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label for='firstNameAsync'>First Name</Label>\n            <Input\n              id='firstNameAsync'\n              name='firstNameAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.firstNameAsync && true}\n              placeholder='Bruce'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='lastNameAsync'>Last Name</Label>\n            <Input\n              id='lastNameAsync'\n              name='lastNameAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.lastNameAsync && true}\n              placeholder='Wayne'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='emailAsync'>Email</Label>\n            <Input\n              type='email'\n              name='emailAsync'\n              id='emailAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.emailAsync && true}\n              placeholder='bruce.wayne@email.com'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='passwordAsync'>Password</Label>\n            <Input\n              type='password'\n              id='passwordAsync'\n              name='passwordAsync'\n              innerRef={register({ required: true })}\n              invalid={errors.passwordAsync && true}\n              placeholder='passwordAsync'\n            />\n          </FormGroup>\n          <FormGroup className='d-flex mb-0'>\n            <Button.Ripple className='mr-1' color='primary' type='submit'>\n              Submit\n            </Button.Ripple>\n            <Button.Ripple outline color='secondary' type='reset'>\n              Reset\n            </Button.Ripple>\n          </FormGroup>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default AsyncValidationForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}