{"ast":null,"code":"function t() {\n  return (t = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var o in n) {\n        Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);\n      }\n    }\n    return t;\n  }).apply(this, arguments);\n}\nfunction e(t) {\n  if (\"undefined\" != typeof window && window.navigator) return !!navigator.userAgent.match(t);\n}\nvar n = e(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i),\n  o = e(/Edge/i),\n  i = e(/firefox/i),\n  r = e(/safari/i) && !e(/chrome/i) && !e(/android/i),\n  a = e(/iP(ad|od|hone)/i),\n  l = e(/chrome/i) && e(/android/i),\n  s = {\n    capture: !1,\n    passive: !1\n  };\nfunction c(t, e, o) {\n  t.addEventListener(e, o, !n && s);\n}\nfunction u(t, e, o) {\n  t.removeEventListener(e, o, !n && s);\n}\nfunction d(t, e) {\n  if (e) {\n    if (\">\" === e[0] && (e = e.substring(1)), t) try {\n      if (t.matches) return t.matches(e);\n      if (t.msMatchesSelector) return t.msMatchesSelector(e);\n      if (t.webkitMatchesSelector) return t.webkitMatchesSelector(e);\n    } catch (t) {\n      return !1;\n    }\n    return !1;\n  }\n}\nfunction h(t) {\n  return t.host && t !== document && t.host.nodeType ? t.host : t.parentNode;\n}\nfunction f(t, e, n, o) {\n  if (t) {\n    n = n || document;\n    do {\n      if (null != e && (\">\" === e[0] ? t.parentNode === n && d(t, e) : d(t, e)) || o && t === n) return t;\n      if (t === n) break;\n    } while (t = h(t));\n  }\n  return null;\n}\nvar p,\n  g = /\\s+/g;\nfunction v(t, e, n) {\n  if (t && e) if (t.classList) t.classList[n ? \"add\" : \"remove\"](e);else {\n    var o = (\" \" + t.className + \" \").replace(g, \" \").replace(\" \" + e + \" \", \" \");\n    t.className = (o + (n ? \" \" + e : \"\")).replace(g, \" \");\n  }\n}\nfunction m(t, e, n) {\n  var o = t && t.style;\n  if (o) {\n    if (void 0 === n) return document.defaultView && document.defaultView.getComputedStyle ? n = document.defaultView.getComputedStyle(t, \"\") : t.currentStyle && (n = t.currentStyle), void 0 === e ? n : n[e];\n    e in o || -1 !== e.indexOf(\"webkit\") || (e = \"-webkit-\" + e), o[e] = n + (\"string\" == typeof n ? \"\" : \"px\");\n  }\n}\nfunction b(t, e) {\n  var n = \"\";\n  if (\"string\" == typeof t) n = t;else do {\n    var o = m(t, \"transform\");\n    o && \"none\" !== o && (n = o + \" \" + n);\n  } while (!e && (t = t.parentNode));\n  var i = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  return i && new i(n);\n}\nfunction w(t, e, n) {\n  if (t) {\n    var o = t.getElementsByTagName(e),\n      i = 0,\n      r = o.length;\n    if (n) for (; i < r; i++) {\n      n(o[i], i);\n    }\n    return o;\n  }\n  return [];\n}\nfunction E() {\n  return document.scrollingElement || document.documentElement;\n}\nfunction y(t, e, o, i, r) {\n  if (t.getBoundingClientRect || t === window) {\n    var a, l, s, c, u, d, h;\n    if (t !== window && t !== E() ? (l = (a = t.getBoundingClientRect()).top, s = a.left, c = a.bottom, u = a.right, d = a.height, h = a.width) : (l = 0, s = 0, c = window.innerHeight, u = window.innerWidth, d = window.innerHeight, h = window.innerWidth), (e || o) && t !== window && (r = r || t.parentNode, !n)) do {\n      if (r && r.getBoundingClientRect && (\"none\" !== m(r, \"transform\") || o && \"static\" !== m(r, \"position\"))) {\n        var f = r.getBoundingClientRect();\n        l -= f.top + parseInt(m(r, \"border-top-width\")), s -= f.left + parseInt(m(r, \"border-left-width\")), c = l + a.height, u = s + a.width;\n        break;\n      }\n    } while (r = r.parentNode);\n    if (i && t !== window) {\n      var p = b(r || t),\n        g = p && p.a,\n        v = p && p.d;\n      p && (c = (l /= v) + (d /= v), u = (s /= g) + (h /= g));\n    }\n    return {\n      top: l,\n      left: s,\n      bottom: c,\n      right: u,\n      width: h,\n      height: d\n    };\n  }\n}\nfunction D(t, e, n) {\n  for (var o = x(t, !0), i = y(t)[e]; o;) {\n    var r = y(o)[n];\n    if (!(\"top\" === n || \"left\" === n ? i >= r : i <= r)) return o;\n    if (o === E()) break;\n    o = x(o, !1);\n  }\n  return !1;\n}\nfunction _(t, e, n) {\n  for (var o = 0, i = 0, r = t.children; i < r.length;) {\n    if (\"none\" !== r[i].style.display && r[i] !== It.ghost && r[i] !== It.dragged && f(r[i], n.draggable, t, !1)) {\n      if (o === e) return r[i];\n      o++;\n    }\n    i++;\n  }\n  return null;\n}\nfunction S(t, e) {\n  for (var n = t.lastElementChild; n && (n === It.ghost || \"none\" === m(n, \"display\") || e && !d(n, e));) {\n    n = n.previousElementSibling;\n  }\n  return n || null;\n}\nfunction C(t, e) {\n  var n = 0;\n  if (!t || !t.parentNode) return -1;\n  for (; t = t.previousElementSibling;) {\n    \"TEMPLATE\" === t.nodeName.toUpperCase() || t === It.clone || e && !d(t, e) || n++;\n  }\n  return n;\n}\nfunction T(t) {\n  var e = 0,\n    n = 0,\n    o = E();\n  if (t) do {\n    var i = b(t);\n    e += t.scrollLeft * i.a, n += t.scrollTop * i.d;\n  } while (t !== o && (t = t.parentNode));\n  return [e, n];\n}\nfunction x(t, e) {\n  if (!t || !t.getBoundingClientRect) return E();\n  var n = t,\n    o = !1;\n  do {\n    if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {\n      var i = m(n);\n      if (n.clientWidth < n.scrollWidth && (\"auto\" == i.overflowX || \"scroll\" == i.overflowX) || n.clientHeight < n.scrollHeight && (\"auto\" == i.overflowY || \"scroll\" == i.overflowY)) {\n        if (!n.getBoundingClientRect || n === document.body) return E();\n        if (o || e) return n;\n        o = !0;\n      }\n    }\n  } while (n = n.parentNode);\n  return E();\n}\nfunction M(t, e) {\n  return Math.round(t.top) === Math.round(e.top) && Math.round(t.left) === Math.round(e.left) && Math.round(t.height) === Math.round(e.height) && Math.round(t.width) === Math.round(e.width);\n}\nfunction N(t, e) {\n  return function () {\n    if (!p) {\n      var n = arguments,\n        o = this;\n      1 === n.length ? t.call(o, n[0]) : t.apply(o, n), p = setTimeout(function () {\n        p = void 0;\n      }, e);\n    }\n  };\n}\nfunction O(t, e, n) {\n  t.scrollLeft += e, t.scrollTop += n;\n}\nfunction A(t) {\n  var e = window.Polymer,\n    n = window.jQuery || window.Zepto;\n  return e && e.dom ? e.dom(t).cloneNode(!0) : n ? n(t).clone(!0)[0] : t.cloneNode(!0);\n}\nfunction I(t, e) {\n  m(t, \"position\", \"absolute\"), m(t, \"top\", e.top), m(t, \"left\", e.left), m(t, \"width\", e.width), m(t, \"height\", e.height);\n}\nfunction P(t) {\n  m(t, \"position\", \"\"), m(t, \"top\", \"\"), m(t, \"left\", \"\"), m(t, \"width\", \"\"), m(t, \"height\", \"\");\n}\nvar k = \"Sortable\" + new Date().getTime(),\n  R = [],\n  X = {\n    initializeByDefault: !0\n  },\n  Y = {\n    mount: function mount(t) {\n      for (var e in X) {\n        X.hasOwnProperty(e) && !(e in t) && (t[e] = X[e]);\n      }\n      R.push(t);\n    },\n    pluginEvent: function pluginEvent(e, n, o) {\n      var i = this;\n      this.eventCanceled = !1, o.cancel = function () {\n        i.eventCanceled = !0;\n      };\n      var r = e + \"Global\";\n      R.forEach(function (i) {\n        n[i.pluginName] && (n[i.pluginName][r] && n[i.pluginName][r](t({\n          sortable: n\n        }, o)), n.options[i.pluginName] && n[i.pluginName][e] && n[i.pluginName][e](t({\n          sortable: n\n        }, o)));\n      });\n    },\n    initializePlugins: function initializePlugins(t, e, n, o) {\n      for (var i in R.forEach(function (o) {\n        var i = o.pluginName;\n        if (t.options[i] || o.initializeByDefault) {\n          var r = new o(t, e, t.options);\n          r.sortable = t, r.options = t.options, t[i] = r, Object.assign(n, r.defaults);\n        }\n      }), t.options) {\n        if (t.options.hasOwnProperty(i)) {\n          var r = this.modifyOption(t, i, t.options[i]);\n          void 0 !== r && (t.options[i] = r);\n        }\n      }\n    },\n    getEventProperties: function getEventProperties(t, e) {\n      var n = {};\n      return R.forEach(function (o) {\n        \"function\" == typeof o.eventProperties && Object.assign(n, o.eventProperties.call(e[o.pluginName], t));\n      }), n;\n    },\n    modifyOption: function modifyOption(t, e, n) {\n      var o;\n      return R.forEach(function (i) {\n        t[i.pluginName] && i.optionListeners && \"function\" == typeof i.optionListeners[e] && (o = i.optionListeners[e].call(t[i.pluginName], n));\n      }), o;\n    }\n  };\nfunction B(e) {\n  var i = e.sortable,\n    r = e.rootEl,\n    a = e.name,\n    l = e.targetEl,\n    s = e.cloneEl,\n    c = e.toEl,\n    u = e.fromEl,\n    d = e.oldIndex,\n    h = e.newIndex,\n    f = e.oldDraggableIndex,\n    p = e.newDraggableIndex,\n    g = e.originalEvent,\n    v = e.putSortable,\n    m = e.extraEventProperties;\n  if (i = i || r && r[k]) {\n    var b,\n      w = i.options,\n      E = \"on\" + a.charAt(0).toUpperCase() + a.substr(1);\n    !window.CustomEvent || n || o ? (b = document.createEvent(\"Event\")).initEvent(a, !0, !0) : b = new CustomEvent(a, {\n      bubbles: !0,\n      cancelable: !0\n    }), b.to = c || r, b.from = u || r, b.item = l || r, b.clone = s, b.oldIndex = d, b.newIndex = h, b.oldDraggableIndex = f, b.newDraggableIndex = p, b.originalEvent = g, b.pullMode = v ? v.lastPutMode : void 0;\n    var y = t({}, m, Y.getEventProperties(a, i));\n    for (var D in y) {\n      b[D] = y[D];\n    }\n    r && r.dispatchEvent(b), w[E] && w[E].call(i, b);\n  }\n}\nvar H = function H(e, n, o) {\n  var i = void 0 === o ? {} : o,\n    r = i.evt,\n    a = function (t, e) {\n      if (null == t) return {};\n      var n,\n        o,\n        i = {},\n        r = Object.keys(t);\n      for (o = 0; o < r.length; o++) {\n        e.indexOf(n = r[o]) >= 0 || (i[n] = t[n]);\n      }\n      return i;\n    }(i, [\"evt\"]);\n  Y.pluginEvent.bind(It)(e, n, t({\n    dragEl: L,\n    parentEl: K,\n    ghostEl: W,\n    rootEl: j,\n    nextEl: z,\n    lastDownEl: G,\n    cloneEl: U,\n    cloneHidden: q,\n    dragStarted: lt,\n    putSortable: tt,\n    activeSortable: It.active,\n    originalEvent: r,\n    oldIndex: V,\n    oldDraggableIndex: Q,\n    newIndex: Z,\n    newDraggableIndex: $,\n    hideGhostForTarget: xt,\n    unhideGhostForTarget: Mt,\n    cloneNowHidden: function cloneNowHidden() {\n      q = !0;\n    },\n    cloneNowShown: function cloneNowShown() {\n      q = !1;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(t) {\n      F({\n        sortable: n,\n        name: t,\n        originalEvent: r\n      });\n    }\n  }, a));\n};\nfunction F(e) {\n  B(t({\n    putSortable: tt,\n    cloneEl: U,\n    targetEl: L,\n    rootEl: j,\n    oldIndex: V,\n    oldDraggableIndex: Q,\n    newIndex: Z,\n    newDraggableIndex: $\n  }, e));\n}\nvar L,\n  K,\n  W,\n  j,\n  z,\n  G,\n  U,\n  q,\n  V,\n  Z,\n  Q,\n  $,\n  J,\n  tt,\n  et,\n  nt,\n  ot,\n  it,\n  rt,\n  at,\n  lt,\n  st,\n  ct,\n  ut,\n  dt,\n  ht = !1,\n  ft = !1,\n  pt = [],\n  gt = !1,\n  vt = !1,\n  mt = [],\n  bt = !1,\n  wt = [],\n  Et = \"undefined\" != typeof document,\n  yt = a,\n  Dt = o || n ? \"cssFloat\" : \"float\",\n  _t = Et && !l && !a && \"draggable\" in document.createElement(\"div\"),\n  St = function () {\n    if (Et) {\n      if (n) return !1;\n      var t = document.createElement(\"x\");\n      return t.style.cssText = \"pointer-events:auto\", \"auto\" === t.style.pointerEvents;\n    }\n  }(),\n  Ct = function Ct(t, e) {\n    var n = m(t),\n      o = parseInt(n.width) - parseInt(n.paddingLeft) - parseInt(n.paddingRight) - parseInt(n.borderLeftWidth) - parseInt(n.borderRightWidth),\n      i = _(t, 0, e),\n      r = _(t, 1, e),\n      a = i && m(i),\n      l = r && m(r),\n      s = a && parseInt(a.marginLeft) + parseInt(a.marginRight) + y(i).width,\n      c = l && parseInt(l.marginLeft) + parseInt(l.marginRight) + y(r).width;\n    return \"flex\" === n.display ? \"column\" === n.flexDirection || \"column-reverse\" === n.flexDirection ? \"vertical\" : \"horizontal\" : \"grid\" === n.display ? n.gridTemplateColumns.split(\" \").length <= 1 ? \"vertical\" : \"horizontal\" : i && a.float && \"none\" !== a.float ? !r || \"both\" !== l.clear && l.clear !== (\"left\" === a.float ? \"left\" : \"right\") ? \"horizontal\" : \"vertical\" : i && (\"block\" === a.display || \"flex\" === a.display || \"table\" === a.display || \"grid\" === a.display || s >= o && \"none\" === n[Dt] || r && \"none\" === n[Dt] && s + c > o) ? \"vertical\" : \"horizontal\";\n  },\n  Tt = function Tt(t) {\n    function e(t, n) {\n      return function (o, i, r, a) {\n        if (null == t && (n || o.options.group.name && i.options.group.name && o.options.group.name === i.options.group.name)) return !0;\n        if (null == t || !1 === t) return !1;\n        if (n && \"clone\" === t) return t;\n        if (\"function\" == typeof t) return e(t(o, i, r, a), n)(o, i, r, a);\n        var l = (n ? o : i).options.group.name;\n        return !0 === t || \"string\" == typeof t && t === l || t.join && t.indexOf(l) > -1;\n      };\n    }\n    var n = {},\n      o = t.group;\n    o && \"object\" == typeof o || (o = {\n      name: o\n    }), n.name = o.name, n.checkPull = e(o.pull, !0), n.checkPut = e(o.put), n.revertClone = o.revertClone, t.group = n;\n  },\n  xt = function xt() {\n    !St && W && m(W, \"display\", \"none\");\n  },\n  Mt = function Mt() {\n    !St && W && m(W, \"display\", \"\");\n  };\nEt && document.addEventListener(\"click\", function (t) {\n  if (ft) return t.preventDefault(), t.stopPropagation && t.stopPropagation(), t.stopImmediatePropagation && t.stopImmediatePropagation(), ft = !1, !1;\n}, !0);\nvar Nt,\n  Ot = function Ot(t) {\n    if (L) {\n      var e = (i = (t = t.touches ? t.touches[0] : t).clientX, r = t.clientY, pt.some(function (t) {\n        if (!S(t)) {\n          var e = y(t),\n            n = t[k].options.emptyInsertThreshold;\n          return n && i >= e.left - n && i <= e.right + n && r >= e.top - n && r <= e.bottom + n ? a = t : void 0;\n        }\n      }), a);\n      if (e) {\n        var n = {};\n        for (var o in t) {\n          t.hasOwnProperty(o) && (n[o] = t[o]);\n        }\n        n.target = n.rootEl = e, n.preventDefault = void 0, n.stopPropagation = void 0, e[k]._onDragOver(n);\n      }\n    }\n    var i, r, a;\n  },\n  At = function At(t) {\n    L && L.parentNode[k]._isOutsideThisEl(t.target);\n  };\nfunction It(e, n) {\n  if (!e || !e.nodeType || 1 !== e.nodeType) throw \"Sortable: `el` must be an HTMLElement, not \" + {}.toString.call(e);\n  this.el = e, this.options = n = Object.assign({}, n), e[k] = this;\n  var o,\n    i,\n    r = {\n      group: null,\n      sort: !0,\n      disabled: !1,\n      store: null,\n      handle: null,\n      draggable: /^[uo]l$/i.test(e.nodeName) ? \">li\" : \">*\",\n      swapThreshold: 1,\n      invertSwap: !1,\n      invertedSwapThreshold: null,\n      removeCloneOnHide: !0,\n      direction: function direction() {\n        return Ct(e, this.options);\n      },\n      ghostClass: \"sortable-ghost\",\n      chosenClass: \"sortable-chosen\",\n      dragClass: \"sortable-drag\",\n      ignore: \"a, img\",\n      filter: null,\n      preventOnFilter: !0,\n      animation: 0,\n      easing: null,\n      setData: function setData(t, e) {\n        t.setData(\"Text\", e.textContent);\n      },\n      dropBubble: !1,\n      dragoverBubble: !1,\n      dataIdAttr: \"data-id\",\n      delay: 0,\n      delayOnTouchOnly: !1,\n      touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n      forceFallback: !1,\n      fallbackClass: \"sortable-fallback\",\n      fallbackOnBody: !1,\n      fallbackTolerance: 0,\n      fallbackOffset: {\n        x: 0,\n        y: 0\n      },\n      supportPointer: !1 !== It.supportPointer && \"PointerEvent\" in window,\n      emptyInsertThreshold: 5\n    };\n  for (var a in Y.initializePlugins(this, e, r), r) {\n    !(a in n) && (n[a] = r[a]);\n  }\n  for (var l in Tt(n), this) {\n    \"_\" === l.charAt(0) && \"function\" == typeof this[l] && (this[l] = this[l].bind(this));\n  }\n  this.nativeDraggable = !n.forceFallback && _t, this.nativeDraggable && (this.options.touchStartThreshold = 1), n.supportPointer ? c(e, \"pointerdown\", this._onTapStart) : (c(e, \"mousedown\", this._onTapStart), c(e, \"touchstart\", this._onTapStart)), this.nativeDraggable && (c(e, \"dragover\", this), c(e, \"dragenter\", this)), pt.push(this.el), n.store && n.store.get && this.sort(n.store.get(this) || []), Object.assign(this, (i = [], {\n    captureAnimationState: function captureAnimationState() {\n      i = [], this.options.animation && [].slice.call(this.el.children).forEach(function (e) {\n        if (\"none\" !== m(e, \"display\") && void 0 !== e) {\n          i.push({\n            target: e,\n            rect: y(e)\n          });\n          var n = t({}, i[i.length - 1].rect);\n          if (e.thisAnimationDuration) {\n            var o = b(e, !0);\n            o && (n.top -= o.f, n.left -= o.e);\n          }\n          e.fromRect = n;\n        }\n      });\n    },\n    addAnimationState: function addAnimationState(t) {\n      i.push(t);\n    },\n    removeAnimationState: function removeAnimationState(t) {\n      i.splice(function (t, e) {\n        for (var n in t) {\n          if (t.hasOwnProperty(n)) for (var o in e) {\n            if (e.hasOwnProperty(o) && e[o] === t[n][o]) return Number(n);\n          }\n        }\n        return -1;\n      }(i, {\n        target: t\n      }), 1);\n    },\n    animateAll: function animateAll(t) {\n      var e = this;\n      if (!this.options.animation) return clearTimeout(o), void (\"function\" == typeof t && t());\n      var n = !1,\n        r = 0;\n      i.forEach(function (t) {\n        var o = 0,\n          i = t.target,\n          a = i.fromRect,\n          l = y(i),\n          s = i.prevFromRect,\n          c = i.prevToRect,\n          u = t.rect,\n          d = b(i, !0);\n        d && (l.top -= d.f, l.left -= d.e), i.toRect = l, i.thisAnimationDuration && M(s, l) && !M(a, l) && (u.top - l.top) / (u.left - l.left) == (a.top - l.top) / (a.left - l.left) && (o = function (t, e, n, o) {\n          return Math.sqrt(Math.pow(e.top - t.top, 2) + Math.pow(e.left - t.left, 2)) / Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) * o.animation;\n        }(u, s, c, e.options)), M(l, a) || (i.prevFromRect = a, i.prevToRect = l, o || (o = e.options.animation), e.animate(i, u, l, o)), o && (n = !0, r = Math.max(r, o), clearTimeout(i.animationResetTimer), i.animationResetTimer = setTimeout(function () {\n          i.animationTime = 0, i.prevFromRect = null, i.fromRect = null, i.prevToRect = null, i.thisAnimationDuration = null;\n        }, o), i.thisAnimationDuration = o);\n      }), clearTimeout(o), n ? o = setTimeout(function () {\n        \"function\" == typeof t && t();\n      }, r) : \"function\" == typeof t && t(), i = [];\n    },\n    animate: function animate(t, e, n, o) {\n      if (o) {\n        m(t, \"transition\", \"\"), m(t, \"transform\", \"\");\n        var i = b(this.el),\n          r = (e.left - n.left) / (i && i.a || 1),\n          a = (e.top - n.top) / (i && i.d || 1);\n        t.animatingX = !!r, t.animatingY = !!a, m(t, \"transform\", \"translate3d(\" + r + \"px,\" + a + \"px,0)\"), this.forRepaintDummy = function (t) {\n          return t.offsetWidth;\n        }(t), m(t, \"transition\", \"transform \" + o + \"ms\" + (this.options.easing ? \" \" + this.options.easing : \"\")), m(t, \"transform\", \"translate3d(0,0,0)\"), \"number\" == typeof t.animated && clearTimeout(t.animated), t.animated = setTimeout(function () {\n          m(t, \"transition\", \"\"), m(t, \"transform\", \"\"), t.animated = !1, t.animatingX = !1, t.animatingY = !1;\n        }, o);\n      }\n    }\n  }));\n}\nfunction Pt(t, e, i, r, a, l, s, c) {\n  var u,\n    d,\n    h = t[k],\n    f = h.options.onMove;\n  return !window.CustomEvent || n || o ? (u = document.createEvent(\"Event\")).initEvent(\"move\", !0, !0) : u = new CustomEvent(\"move\", {\n    bubbles: !0,\n    cancelable: !0\n  }), u.to = e, u.from = t, u.dragged = i, u.draggedRect = r, u.related = a || e, u.relatedRect = l || y(e), u.willInsertAfter = c, u.originalEvent = s, t.dispatchEvent(u), f && (d = f.call(h, u, s)), d;\n}\nfunction kt(t) {\n  t.draggable = !1;\n}\nfunction Rt() {\n  bt = !1;\n}\nfunction Xt(t) {\n  for (var e = t.tagName + t.className + t.src + t.href + t.textContent, n = e.length, o = 0; n--;) {\n    o += e.charCodeAt(n);\n  }\n  return o.toString(36);\n}\nfunction Yt(t) {\n  return setTimeout(t, 0);\n}\nfunction Bt(t) {\n  return clearTimeout(t);\n}\nIt.prototype = {\n  constructor: It,\n  _isOutsideThisEl: function _isOutsideThisEl(t) {\n    this.el.contains(t) || t === this.el || (st = null);\n  },\n  _getDirection: function _getDirection(t, e) {\n    return \"function\" == typeof this.options.direction ? this.options.direction.call(this, t, e, L) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(t) {\n    if (t.cancelable) {\n      var e = this,\n        n = this.el,\n        o = this.options,\n        i = o.preventOnFilter,\n        a = t.type,\n        l = t.touches && t.touches[0] || t.pointerType && \"touch\" === t.pointerType && t,\n        s = (l || t).target,\n        c = t.target.shadowRoot && (t.path && t.path[0] || t.composedPath && t.composedPath()[0]) || s,\n        u = o.filter;\n      if (function (t) {\n        wt.length = 0;\n        for (var e = t.getElementsByTagName(\"input\"), n = e.length; n--;) {\n          var o = e[n];\n          o.checked && wt.push(o);\n        }\n      }(n), !L && !(/mousedown|pointerdown/.test(a) && 0 !== t.button || o.disabled) && !c.isContentEditable && (this.nativeDraggable || !r || !s || \"SELECT\" !== s.tagName.toUpperCase()) && !((s = f(s, o.draggable, n, !1)) && s.animated || G === s)) {\n        if (V = C(s), Q = C(s, o.draggable), \"function\" == typeof u) {\n          if (u.call(this, t, s, this)) return F({\n            sortable: e,\n            rootEl: c,\n            name: \"filter\",\n            targetEl: s,\n            toEl: n,\n            fromEl: n\n          }), H(\"filter\", e, {\n            evt: t\n          }), void (i && t.cancelable && t.preventDefault());\n        } else if (u && (u = u.split(\",\").some(function (o) {\n          if (o = f(c, o.trim(), n, !1)) return F({\n            sortable: e,\n            rootEl: o,\n            name: \"filter\",\n            targetEl: s,\n            fromEl: n,\n            toEl: n\n          }), H(\"filter\", e, {\n            evt: t\n          }), !0;\n        }))) return void (i && t.cancelable && t.preventDefault());\n        o.handle && !f(c, o.handle, n, !1) || this._prepareDragStart(t, l, s);\n      }\n    }\n  },\n  _prepareDragStart: function _prepareDragStart(t, e, r) {\n    var a,\n      l = this,\n      s = l.el,\n      u = l.options,\n      d = s.ownerDocument;\n    if (r && !L && r.parentNode === s) {\n      var h = y(r);\n      if (j = s, K = (L = r).parentNode, z = L.nextSibling, G = r, J = u.group, It.dragged = L, rt = (et = {\n        target: L,\n        clientX: (e || t).clientX,\n        clientY: (e || t).clientY\n      }).clientX - h.left, at = et.clientY - h.top, this._lastX = (e || t).clientX, this._lastY = (e || t).clientY, L.style[\"will-change\"] = \"all\", a = function a() {\n        H(\"delayEnded\", l, {\n          evt: t\n        }), It.eventCanceled ? l._onDrop() : (l._disableDelayedDragEvents(), !i && l.nativeDraggable && (L.draggable = !0), l._triggerDragStart(t, e), F({\n          sortable: l,\n          name: \"choose\",\n          originalEvent: t\n        }), v(L, u.chosenClass, !0));\n      }, u.ignore.split(\",\").forEach(function (t) {\n        w(L, t.trim(), kt);\n      }), c(d, \"dragover\", Ot), c(d, \"mousemove\", Ot), c(d, \"touchmove\", Ot), c(d, \"mouseup\", l._onDrop), c(d, \"touchend\", l._onDrop), c(d, \"touchcancel\", l._onDrop), i && this.nativeDraggable && (this.options.touchStartThreshold = 4, L.draggable = !0), H(\"delayStart\", this, {\n        evt: t\n      }), !u.delay || u.delayOnTouchOnly && !e || this.nativeDraggable && (o || n)) a();else {\n        if (It.eventCanceled) return void this._onDrop();\n        c(d, \"mouseup\", l._disableDelayedDrag), c(d, \"touchend\", l._disableDelayedDrag), c(d, \"touchcancel\", l._disableDelayedDrag), c(d, \"mousemove\", l._delayedDragTouchMoveHandler), c(d, \"touchmove\", l._delayedDragTouchMoveHandler), u.supportPointer && c(d, \"pointermove\", l._delayedDragTouchMoveHandler), l._dragStartTimer = setTimeout(a, u.delay);\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(t) {\n    var e = t.touches ? t.touches[0] : t;\n    Math.max(Math.abs(e.clientX - this._lastX), Math.abs(e.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag();\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    L && kt(L), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var t = this.el.ownerDocument;\n    u(t, \"mouseup\", this._disableDelayedDrag), u(t, \"touchend\", this._disableDelayedDrag), u(t, \"touchcancel\", this._disableDelayedDrag), u(t, \"mousemove\", this._delayedDragTouchMoveHandler), u(t, \"touchmove\", this._delayedDragTouchMoveHandler), u(t, \"pointermove\", this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(t, e) {\n    e = e || \"touch\" == t.pointerType && t, !this.nativeDraggable || e ? c(document, this.options.supportPointer ? \"pointermove\" : e ? \"touchmove\" : \"mousemove\", this._onTouchMove) : (c(L, \"dragend\", this), c(j, \"dragstart\", this._onDragStart));\n    try {\n      document.selection ? Yt(function () {\n        document.selection.empty();\n      }) : window.getSelection().removeAllRanges();\n    } catch (t) {}\n  },\n  _dragStarted: function _dragStarted(t, e) {\n    if (ht = !1, j && L) {\n      H(\"dragStarted\", this, {\n        evt: e\n      }), this.nativeDraggable && c(document, \"dragover\", At);\n      var n = this.options;\n      !t && v(L, n.dragClass, !1), v(L, n.ghostClass, !0), It.active = this, t && this._appendGhost(), F({\n        sortable: this,\n        name: \"start\",\n        originalEvent: e\n      });\n    } else this._nulling();\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (nt) {\n      this._lastX = nt.clientX, this._lastY = nt.clientY, xt();\n      for (var t = document.elementFromPoint(nt.clientX, nt.clientY), e = t; t && t.shadowRoot && (t = t.shadowRoot.elementFromPoint(nt.clientX, nt.clientY)) !== e;) {\n        e = t;\n      }\n      if (L.parentNode[k]._isOutsideThisEl(t), e) do {\n        if (e[k] && e[k]._onDragOver({\n          clientX: nt.clientX,\n          clientY: nt.clientY,\n          target: t,\n          rootEl: e\n        }) && !this.options.dragoverBubble) break;\n        t = e;\n      } while (e = e.parentNode);\n      Mt();\n    }\n  },\n  _onTouchMove: function _onTouchMove(t) {\n    if (et) {\n      var e = this.options,\n        n = e.fallbackTolerance,\n        o = e.fallbackOffset,\n        i = t.touches ? t.touches[0] : t,\n        r = W && b(W, !0),\n        a = W && r && r.a,\n        l = W && r && r.d,\n        s = yt && dt && T(dt),\n        c = (i.clientX - et.clientX + o.x) / (a || 1) + (s ? s[0] - mt[0] : 0) / (a || 1),\n        u = (i.clientY - et.clientY + o.y) / (l || 1) + (s ? s[1] - mt[1] : 0) / (l || 1);\n      if (!It.active && !ht) {\n        if (n && Math.max(Math.abs(i.clientX - this._lastX), Math.abs(i.clientY - this._lastY)) < n) return;\n        this._onDragStart(t, !0);\n      }\n      if (W) {\n        r ? (r.e += c - (ot || 0), r.f += u - (it || 0)) : r = {\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: c,\n          f: u\n        };\n        var d = \"matrix(\" + r.a + \",\" + r.b + \",\" + r.c + \",\" + r.d + \",\" + r.e + \",\" + r.f + \")\";\n        m(W, \"webkitTransform\", d), m(W, \"mozTransform\", d), m(W, \"msTransform\", d), m(W, \"transform\", d), ot = c, it = u, nt = i;\n      }\n      t.cancelable && t.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    if (!W) {\n      var t = this.options.fallbackOnBody ? document.body : j,\n        e = y(L, !0, yt, !0, t),\n        n = this.options;\n      if (yt) {\n        for (dt = t; \"static\" === m(dt, \"position\") && \"none\" === m(dt, \"transform\") && dt !== document;) {\n          dt = dt.parentNode;\n        }\n        dt !== document.body && dt !== document.documentElement ? (dt === document && (dt = E()), e.top += dt.scrollTop, e.left += dt.scrollLeft) : dt = E(), mt = T(dt);\n      }\n      v(W = L.cloneNode(!0), n.ghostClass, !1), v(W, n.fallbackClass, !0), v(W, n.dragClass, !0), m(W, \"transition\", \"\"), m(W, \"transform\", \"\"), m(W, \"box-sizing\", \"border-box\"), m(W, \"margin\", 0), m(W, \"top\", e.top), m(W, \"left\", e.left), m(W, \"width\", e.width), m(W, \"height\", e.height), m(W, \"opacity\", \"0.8\"), m(W, \"position\", yt ? \"absolute\" : \"fixed\"), m(W, \"zIndex\", \"100000\"), m(W, \"pointerEvents\", \"none\"), It.ghost = W, t.appendChild(W), m(W, \"transform-origin\", rt / parseInt(W.style.width) * 100 + \"% \" + at / parseInt(W.style.height) * 100 + \"%\");\n    }\n  },\n  _onDragStart: function _onDragStart(t, e) {\n    var n = this,\n      o = t.dataTransfer,\n      i = n.options;\n    H(\"dragStart\", this, {\n      evt: t\n    }), It.eventCanceled ? this._onDrop() : (H(\"setupClone\", this), It.eventCanceled || ((U = A(L)).draggable = !1, U.style[\"will-change\"] = \"\", this._hideClone(), v(U, this.options.chosenClass, !1), It.clone = U), n.cloneId = Yt(function () {\n      H(\"clone\", n), It.eventCanceled || (n.options.removeCloneOnHide || j.insertBefore(U, L), n._hideClone(), F({\n        sortable: n,\n        name: \"clone\"\n      }));\n    }), !e && v(L, i.dragClass, !0), e ? (ft = !0, n._loopId = setInterval(n._emulateDragOver, 50)) : (u(document, \"mouseup\", n._onDrop), u(document, \"touchend\", n._onDrop), u(document, \"touchcancel\", n._onDrop), o && (o.effectAllowed = \"move\", i.setData && i.setData.call(n, o, L)), c(document, \"drop\", n), m(L, \"transform\", \"translateZ(0)\")), ht = !0, n._dragStartId = Yt(n._dragStarted.bind(n, e, t)), c(document, \"selectstart\", n), lt = !0, r && m(document.body, \"user-select\", \"none\"));\n  },\n  _onDragOver: function _onDragOver(e) {\n    var n,\n      o,\n      i,\n      r,\n      a = this.el,\n      l = e.target,\n      s = this.options,\n      c = s.group,\n      u = It.active,\n      d = J === c,\n      h = s.sort,\n      p = tt || u,\n      g = this,\n      b = !1;\n    if (!bt) {\n      if (void 0 !== e.preventDefault && e.cancelable && e.preventDefault(), l = f(l, s.draggable, a, !0), B(\"dragOver\"), It.eventCanceled) return b;\n      if (L.contains(e.target) || l.animated && l.animatingX && l.animatingY || g._ignoreWhileAnimating === l) return U(!1);\n      if (ft = !1, u && !s.disabled && (d ? h || (i = !j.contains(L)) : tt === this || (this.lastPutMode = J.checkPull(this, u, L, e)) && c.checkPut(this, u, L, e))) {\n        if (r = \"vertical\" === this._getDirection(e, l), n = y(L), B(\"dragOverValid\"), It.eventCanceled) return b;\n        if (i) return K = j, G(), this._hideClone(), B(\"revert\"), It.eventCanceled || (z ? j.insertBefore(L, z) : j.appendChild(L)), U(!0);\n        var w = S(a, s.draggable);\n        if (!w || function (t, e, n) {\n          var o = y(S(n.el, n.options.draggable));\n          return e ? t.clientX > o.right + 10 || t.clientX <= o.right && t.clientY > o.bottom && t.clientX >= o.left : t.clientX > o.right && t.clientY > o.top || t.clientX <= o.right && t.clientY > o.bottom + 10;\n        }(e, r, this) && !w.animated) {\n          if (w === L) return U(!1);\n          if (w && a === e.target && (l = w), l && (o = y(l)), !1 !== Pt(j, a, L, n, l, o, e, !!l)) return G(), a.appendChild(L), K = a, q(), U(!0);\n        } else if (l.parentNode === a) {\n          o = y(l);\n          var E,\n            _,\n            T,\n            x = L.parentNode !== a,\n            M = !function (t, e, n) {\n              var o = n ? t.left : t.top,\n                i = n ? e.left : e.top;\n              return o === i || (n ? t.right : t.bottom) === (n ? e.right : e.bottom) || o + (n ? t.width : t.height) / 2 === i + (n ? e.width : e.height) / 2;\n            }(L.animated && L.toRect || n, l.animated && l.toRect || o, r),\n            N = r ? \"top\" : \"left\",\n            A = D(l, \"top\", \"top\") || D(L, \"top\", \"top\"),\n            I = A ? A.scrollTop : void 0;\n          if (st !== l && (_ = o[N], gt = !1, vt = !M && s.invertSwap || x), 0 !== (E = function (t, e, n, o, i, r, a, l) {\n            var s = o ? t.clientY : t.clientX,\n              c = o ? n.height : n.width,\n              u = o ? n.top : n.left,\n              d = o ? n.bottom : n.right,\n              h = !1;\n            if (!a) if (l && ut < c * i) {\n              if (!gt && (1 === ct ? s > u + c * r / 2 : s < d - c * r / 2) && (gt = !0), gt) h = !0;else if (1 === ct ? s < u + ut : s > d - ut) return -ct;\n            } else if (s > u + c * (1 - i) / 2 && s < d - c * (1 - i) / 2) return function (t) {\n              return C(L) < C(t) ? 1 : -1;\n            }(e);\n            return (h = h || a) && (s < u + c * r / 2 || s > d - c * r / 2) ? s > u + c / 2 ? 1 : -1 : 0;\n          }(e, l, o, r, M ? 1 : s.swapThreshold, null == s.invertedSwapThreshold ? s.swapThreshold : s.invertedSwapThreshold, vt, st === l))) {\n            var P = C(L);\n            do {\n              T = K.children[P -= E];\n            } while (T && (\"none\" === m(T, \"display\") || T === W));\n          }\n          if (0 === E || T === l) return U(!1);\n          st = l, ct = E;\n          var R = l.nextElementSibling,\n            X = !1,\n            Y = Pt(j, a, L, n, l, o, e, X = 1 === E);\n          if (!1 !== Y) return 1 !== Y && -1 !== Y || (X = 1 === Y), bt = !0, setTimeout(Rt, 30), G(), X && !R ? a.appendChild(L) : l.parentNode.insertBefore(L, X ? R : l), A && O(A, 0, I - A.scrollTop), K = L.parentNode, void 0 === _ || vt || (ut = Math.abs(_ - y(l)[N])), q(), U(!0);\n        }\n        if (a.contains(L)) return U(!1);\n      }\n      return !1;\n    }\n    function B(s, c) {\n      H(s, g, t({\n        evt: e,\n        isOwner: d,\n        axis: r ? \"vertical\" : \"horizontal\",\n        revert: i,\n        dragRect: n,\n        targetRect: o,\n        canSort: h,\n        fromSortable: p,\n        target: l,\n        completed: U,\n        onMove: function onMove(t, o) {\n          return Pt(j, a, L, n, t, y(t), e, o);\n        },\n        changed: q\n      }, c));\n    }\n    function G() {\n      B(\"dragOverAnimationCapture\"), g.captureAnimationState(), g !== p && p.captureAnimationState();\n    }\n    function U(t) {\n      return B(\"dragOverCompleted\", {\n        insertion: t\n      }), t && (d ? u._hideClone() : u._showClone(g), g !== p && (v(L, tt ? tt.options.ghostClass : u.options.ghostClass, !1), v(L, s.ghostClass, !0)), tt !== g && g !== It.active ? tt = g : g === It.active && tt && (tt = null), p === g && (g._ignoreWhileAnimating = l), g.animateAll(function () {\n        B(\"dragOverAnimationComplete\"), g._ignoreWhileAnimating = null;\n      }), g !== p && (p.animateAll(), p._ignoreWhileAnimating = null)), (l === L && !L.animated || l === a && !l.animated) && (st = null), s.dragoverBubble || e.rootEl || l === document || (L.parentNode[k]._isOutsideThisEl(e.target), !t && Ot(e)), !s.dragoverBubble && e.stopPropagation && e.stopPropagation(), b = !0;\n    }\n    function q() {\n      Z = C(L), $ = C(L, s.draggable), F({\n        sortable: g,\n        name: \"change\",\n        toEl: a,\n        newIndex: Z,\n        newDraggableIndex: $,\n        originalEvent: e\n      });\n    }\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    u(document, \"mousemove\", this._onTouchMove), u(document, \"touchmove\", this._onTouchMove), u(document, \"pointermove\", this._onTouchMove), u(document, \"dragover\", Ot), u(document, \"mousemove\", Ot), u(document, \"touchmove\", Ot);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var t = this.el.ownerDocument;\n    u(t, \"mouseup\", this._onDrop), u(t, \"touchend\", this._onDrop), u(t, \"pointerup\", this._onDrop), u(t, \"touchcancel\", this._onDrop), u(document, \"selectstart\", this);\n  },\n  _onDrop: function _onDrop(t) {\n    var e = this.el,\n      n = this.options;\n    Z = C(L), $ = C(L, n.draggable), H(\"drop\", this, {\n      evt: t\n    }), K = L && L.parentNode, Z = C(L), $ = C(L, n.draggable), It.eventCanceled || (ht = !1, vt = !1, gt = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), Bt(this.cloneId), Bt(this._dragStartId), this.nativeDraggable && (u(document, \"drop\", this), u(e, \"dragstart\", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), r && m(document.body, \"user-select\", \"\"), m(L, \"transform\", \"\"), t && (lt && (t.cancelable && t.preventDefault(), !n.dropBubble && t.stopPropagation()), W && W.parentNode && W.parentNode.removeChild(W), (j === K || tt && \"clone\" !== tt.lastPutMode) && U && U.parentNode && U.parentNode.removeChild(U), L && (this.nativeDraggable && u(L, \"dragend\", this), kt(L), L.style[\"will-change\"] = \"\", lt && !ht && v(L, tt ? tt.options.ghostClass : this.options.ghostClass, !1), v(L, this.options.chosenClass, !1), F({\n      sortable: this,\n      name: \"unchoose\",\n      toEl: K,\n      newIndex: null,\n      newDraggableIndex: null,\n      originalEvent: t\n    }), j !== K ? (Z >= 0 && (F({\n      rootEl: K,\n      name: \"add\",\n      toEl: K,\n      fromEl: j,\n      originalEvent: t\n    }), F({\n      sortable: this,\n      name: \"remove\",\n      toEl: K,\n      originalEvent: t\n    }), F({\n      rootEl: K,\n      name: \"sort\",\n      toEl: K,\n      fromEl: j,\n      originalEvent: t\n    }), F({\n      sortable: this,\n      name: \"sort\",\n      toEl: K,\n      originalEvent: t\n    })), tt && tt.save()) : Z !== V && Z >= 0 && (F({\n      sortable: this,\n      name: \"update\",\n      toEl: K,\n      originalEvent: t\n    }), F({\n      sortable: this,\n      name: \"sort\",\n      toEl: K,\n      originalEvent: t\n    })), It.active && (null != Z && -1 !== Z || (Z = V, $ = Q), F({\n      sortable: this,\n      name: \"end\",\n      toEl: K,\n      originalEvent: t\n    }), this.save())))), this._nulling();\n  },\n  _nulling: function _nulling() {\n    H(\"nulling\", this), j = L = K = W = z = U = G = q = et = nt = lt = Z = $ = V = Q = st = ct = tt = J = It.dragged = It.ghost = It.clone = It.active = null, wt.forEach(function (t) {\n      t.checked = !0;\n    }), wt.length = ot = it = 0;\n  },\n  handleEvent: function handleEvent(t) {\n    switch (t.type) {\n      case \"drop\":\n      case \"dragend\":\n        this._onDrop(t);\n        break;\n      case \"dragenter\":\n      case \"dragover\":\n        L && (this._onDragOver(t), function (t) {\n          t.dataTransfer && (t.dataTransfer.dropEffect = \"move\"), t.cancelable && t.preventDefault();\n        }(t));\n        break;\n      case \"selectstart\":\n        t.preventDefault();\n    }\n  },\n  toArray: function toArray() {\n    for (var t, e = [], n = this.el.children, o = 0, i = n.length, r = this.options; o < i; o++) {\n      f(t = n[o], r.draggable, this.el, !1) && e.push(t.getAttribute(r.dataIdAttr) || Xt(t));\n    }\n    return e;\n  },\n  sort: function sort(t) {\n    var e = {},\n      n = this.el;\n    this.toArray().forEach(function (t, o) {\n      var i = n.children[o];\n      f(i, this.options.draggable, n, !1) && (e[t] = i);\n    }, this), t.forEach(function (t) {\n      e[t] && (n.removeChild(e[t]), n.appendChild(e[t]));\n    });\n  },\n  save: function save() {\n    var t = this.options.store;\n    t && t.set && t.set(this);\n  },\n  closest: function closest(t, e) {\n    return f(t, e || this.options.draggable, this.el, !1);\n  },\n  option: function option(t, e) {\n    var n = this.options;\n    if (void 0 === e) return n[t];\n    var o = Y.modifyOption(this, t, e);\n    n[t] = void 0 !== o ? o : e, \"group\" === t && Tt(n);\n  },\n  destroy: function destroy() {\n    H(\"destroy\", this);\n    var t = this.el;\n    t[k] = null, u(t, \"mousedown\", this._onTapStart), u(t, \"touchstart\", this._onTapStart), u(t, \"pointerdown\", this._onTapStart), this.nativeDraggable && (u(t, \"dragover\", this), u(t, \"dragenter\", this)), Array.prototype.forEach.call(t.querySelectorAll(\"[draggable]\"), function (t) {\n      t.removeAttribute(\"draggable\");\n    }), this._onDrop(), this._disableDelayedDragEvents(), pt.splice(pt.indexOf(this.el), 1), this.el = t = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!q) {\n      if (H(\"hideClone\", this), It.eventCanceled) return;\n      m(U, \"display\", \"none\"), this.options.removeCloneOnHide && U.parentNode && U.parentNode.removeChild(U), q = !0;\n    }\n  },\n  _showClone: function _showClone(t) {\n    if (\"clone\" === t.lastPutMode) {\n      if (q) {\n        if (H(\"showClone\", this), It.eventCanceled) return;\n        L.parentNode != j || this.options.group.revertClone ? z ? j.insertBefore(U, z) : j.appendChild(U) : j.insertBefore(U, L), this.options.group.revertClone && this.animate(L, U), m(U, \"display\", \"\"), q = !1;\n      }\n    } else this._hideClone();\n  }\n}, Et && c(document, \"touchmove\", function (t) {\n  (It.active || ht) && t.cancelable && t.preventDefault();\n}), It.utils = {\n  on: c,\n  off: u,\n  css: m,\n  find: w,\n  is: function is(t, e) {\n    return !!f(t, e, t, !1);\n  },\n  extend: function extend(t, e) {\n    if (t && e) for (var n in e) {\n      e.hasOwnProperty(n) && (t[n] = e[n]);\n    }\n    return t;\n  },\n  throttle: N,\n  closest: f,\n  toggleClass: v,\n  clone: A,\n  index: C,\n  nextTick: Yt,\n  cancelNextTick: Bt,\n  detectDirection: Ct,\n  getChild: _\n}, It.get = function (t) {\n  return t[k];\n}, It.mount = function () {\n  var e = [].slice.call(arguments);\n  e[0].constructor === Array && (e = e[0]), e.forEach(function (e) {\n    if (!e.prototype || !e.prototype.constructor) throw \"Sortable: Mounted plugin must be a constructor function, not \" + {}.toString.call(e);\n    e.utils && (It.utils = t({}, It.utils, e.utils)), Y.mount(e);\n  });\n}, It.create = function (t, e) {\n  return new It(t, e);\n}, It.version = \"1.12.0\";\nvar Ht,\n  Ft,\n  Lt,\n  Kt,\n  Wt,\n  jt = [],\n  zt = [],\n  Gt = !1,\n  Ut = !1,\n  qt = !1;\nfunction Vt(t, e) {\n  zt.forEach(function (n, o) {\n    var i = e.children[n.sortableIndex + (t ? Number(o) : 0)];\n    i ? e.insertBefore(n, i) : e.appendChild(n);\n  });\n}\nfunction Zt() {\n  jt.forEach(function (t) {\n    t !== Lt && t.parentNode && t.parentNode.removeChild(t);\n  });\n}\nvar Qt = function Qt(t) {\n  var e = t.originalEvent,\n    n = t.putSortable,\n    o = t.dragEl,\n    i = t.dispatchSortableEvent,\n    r = t.unhideGhostForTarget;\n  if (e) {\n    var a = n || t.activeSortable;\n    (0, t.hideGhostForTarget)();\n    var l = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e,\n      s = document.elementFromPoint(l.clientX, l.clientY);\n    r(), a && !a.el.contains(s) && (i(\"spill\"), this.onSpill({\n      dragEl: o,\n      putSortable: n\n    }));\n  }\n};\nfunction $t() {}\nfunction Jt() {}\n$t.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(t) {\n    this.startIndex = t.oldDraggableIndex;\n  },\n  onSpill: function onSpill(t) {\n    var e = t.dragEl,\n      n = t.putSortable;\n    this.sortable.captureAnimationState(), n && n.captureAnimationState();\n    var o = _(this.sortable.el, this.startIndex, this.options);\n    o ? this.sortable.el.insertBefore(e, o) : this.sortable.el.appendChild(e), this.sortable.animateAll(), n && n.animateAll();\n  },\n  drop: Qt\n}, Object.assign($t, {\n  pluginName: \"revertOnSpill\"\n}), Jt.prototype = {\n  onSpill: function onSpill(t) {\n    var e = t.dragEl,\n      n = t.putSortable || this.sortable;\n    n.captureAnimationState(), e.parentNode && e.parentNode.removeChild(e), n.animateAll();\n  },\n  drop: Qt\n}, Object.assign(Jt, {\n  pluginName: \"removeOnSpill\"\n});\nvar te,\n  ee,\n  ne,\n  oe,\n  ie,\n  re,\n  ae = [],\n  le = !1;\nfunction se() {\n  ae.forEach(function (t) {\n    clearInterval(t.pid);\n  }), ae = [];\n}\nfunction ce() {\n  clearInterval(re);\n}\nvar ue = N(function (t, e, n, o) {\n  if (e.scroll) {\n    var i,\n      r = (t.touches ? t.touches[0] : t).clientX,\n      a = (t.touches ? t.touches[0] : t).clientY,\n      l = e.scrollSensitivity,\n      s = e.scrollSpeed,\n      c = E(),\n      u = !1;\n    ee !== n && (ee = n, se(), i = e.scrollFn, !0 === (te = e.scroll) && (te = x(n, !0)));\n    var d = 0,\n      h = te;\n    do {\n      var f = h,\n        p = y(f),\n        g = p.top,\n        v = p.bottom,\n        b = p.left,\n        w = p.right,\n        D = p.width,\n        _ = p.height,\n        S = void 0,\n        C = void 0,\n        T = f.scrollWidth,\n        M = f.scrollHeight,\n        N = m(f),\n        A = f.scrollLeft,\n        I = f.scrollTop;\n      f === c ? (S = D < T && (\"auto\" === N.overflowX || \"scroll\" === N.overflowX || \"visible\" === N.overflowX), C = _ < M && (\"auto\" === N.overflowY || \"scroll\" === N.overflowY || \"visible\" === N.overflowY)) : (S = D < T && (\"auto\" === N.overflowX || \"scroll\" === N.overflowX), C = _ < M && (\"auto\" === N.overflowY || \"scroll\" === N.overflowY));\n      var P = S && (Math.abs(w - r) <= l && A + D < T) - (Math.abs(b - r) <= l && !!A),\n        R = C && (Math.abs(v - a) <= l && I + _ < M) - (Math.abs(g - a) <= l && !!I);\n      if (!ae[d]) for (var X = 0; X <= d; X++) {\n        ae[X] || (ae[X] = {});\n      }\n      ae[d].vx == P && ae[d].vy == R && ae[d].el === f || (ae[d].el = f, ae[d].vx = P, ae[d].vy = R, clearInterval(ae[d].pid), 0 == P && 0 == R || (u = !0, ae[d].pid = setInterval(function () {\n        o && 0 === this.layer && It.active._onTouchMove(ie);\n        var e = ae[this.layer].vy ? ae[this.layer].vy * s : 0,\n          n = ae[this.layer].vx ? ae[this.layer].vx * s : 0;\n        \"function\" == typeof i && \"continue\" !== i.call(It.dragged.parentNode[k], n, e, t, ie, ae[this.layer].el) || O(ae[this.layer].el, n, e);\n      }.bind({\n        layer: d\n      }), 24))), d++;\n    } while (e.bubbleScroll && h !== c && (h = x(h, !1)));\n    le = u;\n  }\n}, 30);\nIt.mount(new function () {\n  function t() {\n    for (var t in this.defaults = {\n      scroll: !0,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: !0\n    }, this) {\n      \"_\" === t.charAt(0) && \"function\" == typeof this[t] && (this[t] = this[t].bind(this));\n    }\n  }\n  return t.prototype = {\n    dragStarted: function dragStarted(t) {\n      var e = t.originalEvent;\n      this.sortable.nativeDraggable ? c(document, \"dragover\", this._handleAutoScroll) : c(document, this.options.supportPointer ? \"pointermove\" : e.touches ? \"touchmove\" : \"mousemove\", this._handleFallbackAutoScroll);\n    },\n    dragOverCompleted: function dragOverCompleted(t) {\n      var e = t.originalEvent;\n      this.options.dragOverBubble || e.rootEl || this._handleAutoScroll(e);\n    },\n    drop: function drop() {\n      this.sortable.nativeDraggable ? u(document, \"dragover\", this._handleAutoScroll) : (u(document, \"pointermove\", this._handleFallbackAutoScroll), u(document, \"touchmove\", this._handleFallbackAutoScroll), u(document, \"mousemove\", this._handleFallbackAutoScroll)), ce(), se(), clearTimeout(p), p = void 0;\n    },\n    nulling: function nulling() {\n      ie = ee = te = le = re = ne = oe = null, ae.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(t) {\n      this._handleAutoScroll(t, !0);\n    },\n    _handleAutoScroll: function _handleAutoScroll(t, e) {\n      var i = this,\n        a = (t.touches ? t.touches[0] : t).clientX,\n        l = (t.touches ? t.touches[0] : t).clientY,\n        s = document.elementFromPoint(a, l);\n      if (ie = t, e || o || n || r) {\n        ue(t, this.options, s, e);\n        var c = x(s, !0);\n        !le || re && a === ne && l === oe || (re && ce(), re = setInterval(function () {\n          var n = x(document.elementFromPoint(a, l), !0);\n          n !== c && (c = n, se()), ue(t, i.options, n, e);\n        }, 10), ne = a, oe = l);\n      } else {\n        if (!this.options.bubbleScroll || x(s, !0) === E()) return void se();\n        ue(t, this.options, x(s, !1), !1);\n      }\n    }\n  }, Object.assign(t, {\n    pluginName: \"scroll\",\n    initializeByDefault: !0\n  });\n}()), It.mount(Jt, $t), It.mount(new function () {\n  function t() {\n    this.defaults = {\n      swapClass: \"sortable-swap-highlight\"\n    };\n  }\n  return t.prototype = {\n    dragStart: function dragStart(t) {\n      Nt = t.dragEl;\n    },\n    dragOverValid: function dragOverValid(t) {\n      var e = t.completed,\n        n = t.target,\n        o = t.changed,\n        i = t.cancel;\n      if (t.activeSortable.options.swap) {\n        var r = this.options;\n        if (n && n !== this.sortable.el) {\n          var a = Nt;\n          !1 !== (0, t.onMove)(n) ? (v(n, r.swapClass, !0), Nt = n) : Nt = null, a && a !== Nt && v(a, r.swapClass, !1);\n        }\n        o(), e(!0), i();\n      }\n    },\n    drop: function drop(t) {\n      var e,\n        n,\n        o,\n        i,\n        r,\n        a,\n        l = t.activeSortable,\n        s = t.putSortable,\n        c = t.dragEl,\n        u = s || this.sortable,\n        d = this.options;\n      Nt && v(Nt, d.swapClass, !1), Nt && (d.swap || s && s.options.swap) && c !== Nt && (u.captureAnimationState(), u !== l && l.captureAnimationState(), a = (n = Nt).parentNode, (r = (e = c).parentNode) && a && !r.isEqualNode(n) && !a.isEqualNode(e) && (o = C(e), i = C(n), r.isEqualNode(a) && o < i && i++, r.insertBefore(n, r.children[o]), a.insertBefore(e, a.children[i])), u.animateAll(), u !== l && l.animateAll());\n    },\n    nulling: function nulling() {\n      Nt = null;\n    }\n  }, Object.assign(t, {\n    pluginName: \"swap\",\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: Nt\n      };\n    }\n  });\n}()), It.mount(new function () {\n  function t(t) {\n    for (var e in this) {\n      \"_\" === e.charAt(0) && \"function\" == typeof this[e] && (this[e] = this[e].bind(this));\n    }\n    t.options.supportPointer ? c(document, \"pointerup\", this._deselectMultiDrag) : (c(document, \"mouseup\", this._deselectMultiDrag), c(document, \"touchend\", this._deselectMultiDrag)), c(document, \"keydown\", this._checkKeyDown), c(document, \"keyup\", this._checkKeyUp), this.defaults = {\n      selectedClass: \"sortable-selected\",\n      multiDragKey: null,\n      setData: function setData(e, n) {\n        var o = \"\";\n        jt.length && Ft === t ? jt.forEach(function (t, e) {\n          o += (e ? \", \" : \"\") + t.textContent;\n        }) : o = n.textContent, e.setData(\"Text\", o);\n      }\n    };\n  }\n  return t.prototype = {\n    multiDragKeyDown: !1,\n    isMultiDrag: !1,\n    delayStartGlobal: function delayStartGlobal(t) {\n      Lt = t.dragEl;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~jt.indexOf(Lt);\n    },\n    setupClone: function setupClone(t) {\n      var e = t.sortable,\n        n = t.cancel;\n      if (this.isMultiDrag) {\n        for (var o = 0; o < jt.length; o++) {\n          zt.push(A(jt[o])), zt[o].sortableIndex = jt[o].sortableIndex, zt[o].draggable = !1, zt[o].style[\"will-change\"] = \"\", v(zt[o], this.options.selectedClass, !1), jt[o] === Lt && v(zt[o], this.options.chosenClass, !1);\n        }\n        e._hideClone(), n();\n      }\n    },\n    clone: function clone(t) {\n      var e = t.dispatchSortableEvent,\n        n = t.cancel;\n      this.isMultiDrag && (this.options.removeCloneOnHide || jt.length && Ft === t.sortable && (Vt(!0, t.rootEl), e(\"clone\"), n()));\n    },\n    showClone: function showClone(t) {\n      var e = t.cloneNowShown,\n        n = t.cancel;\n      this.isMultiDrag && (Vt(!1, t.rootEl), zt.forEach(function (t) {\n        m(t, \"display\", \"\");\n      }), e(), Wt = !1, n());\n    },\n    hideClone: function hideClone(t) {\n      var e = this,\n        n = t.cloneNowHidden,\n        o = t.cancel;\n      this.isMultiDrag && (zt.forEach(function (t) {\n        m(t, \"display\", \"none\"), e.options.removeCloneOnHide && t.parentNode && t.parentNode.removeChild(t);\n      }), n(), Wt = !0, o());\n    },\n    dragStartGlobal: function dragStartGlobal(t) {\n      !this.isMultiDrag && Ft && Ft.multiDrag._deselectMultiDrag(), jt.forEach(function (t) {\n        t.sortableIndex = C(t);\n      }), jt = jt.sort(function (t, e) {\n        return t.sortableIndex - e.sortableIndex;\n      }), qt = !0;\n    },\n    dragStarted: function dragStarted(t) {\n      var e = this,\n        n = t.sortable;\n      if (this.isMultiDrag) {\n        if (this.options.sort && (n.captureAnimationState(), this.options.animation)) {\n          jt.forEach(function (t) {\n            t !== Lt && m(t, \"position\", \"absolute\");\n          });\n          var o = y(Lt, !1, !0, !0);\n          jt.forEach(function (t) {\n            t !== Lt && I(t, o);\n          }), Ut = !0, Gt = !0;\n        }\n        n.animateAll(function () {\n          Ut = !1, Gt = !1, e.options.animation && jt.forEach(function (t) {\n            P(t);\n          }), e.options.sort && Zt();\n        });\n      }\n    },\n    dragOver: function dragOver(t) {\n      var e = t.completed,\n        n = t.cancel;\n      Ut && ~jt.indexOf(t.target) && (e(!1), n());\n    },\n    revert: function revert(t) {\n      var e = t.fromSortable,\n        n = t.rootEl,\n        o = t.sortable,\n        i = t.dragRect;\n      jt.length > 1 && (jt.forEach(function (t) {\n        o.addAnimationState({\n          target: t,\n          rect: Ut ? y(t) : i\n        }), P(t), t.fromRect = i, e.removeAnimationState(t);\n      }), Ut = !1, function (t, e) {\n        jt.forEach(function (n, o) {\n          var i = e.children[n.sortableIndex + (t ? Number(o) : 0)];\n          i ? e.insertBefore(n, i) : e.appendChild(n);\n        });\n      }(!this.options.removeCloneOnHide, n));\n    },\n    dragOverCompleted: function dragOverCompleted(t) {\n      var e = t.sortable,\n        n = t.isOwner,\n        o = t.activeSortable,\n        i = t.parentEl,\n        r = t.putSortable,\n        a = this.options;\n      if (t.insertion) {\n        if (n && o._hideClone(), Gt = !1, a.animation && jt.length > 1 && (Ut || !n && !o.options.sort && !r)) {\n          var l = y(Lt, !1, !0, !0);\n          jt.forEach(function (t) {\n            t !== Lt && (I(t, l), i.appendChild(t));\n          }), Ut = !0;\n        }\n        if (!n) if (Ut || Zt(), jt.length > 1) {\n          var s = Wt;\n          o._showClone(e), o.options.animation && !Wt && s && zt.forEach(function (t) {\n            o.addAnimationState({\n              target: t,\n              rect: Kt\n            }), t.fromRect = Kt, t.thisAnimationDuration = null;\n          });\n        } else o._showClone(e);\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(t) {\n      var e = t.dragRect,\n        n = t.isOwner,\n        o = t.activeSortable;\n      if (jt.forEach(function (t) {\n        t.thisAnimationDuration = null;\n      }), o.options.animation && !n && o.multiDrag.isMultiDrag) {\n        Kt = Object.assign({}, e);\n        var i = b(Lt, !0);\n        Kt.top -= i.f, Kt.left -= i.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      Ut && (Ut = !1, Zt());\n    },\n    drop: function drop(t) {\n      var e = t.originalEvent,\n        n = t.rootEl,\n        o = t.parentEl,\n        i = t.sortable,\n        r = t.dispatchSortableEvent,\n        a = t.oldIndex,\n        l = t.putSortable,\n        s = l || this.sortable;\n      if (e) {\n        var c = this.options,\n          u = o.children;\n        if (!qt) if (c.multiDragKey && !this.multiDragKeyDown && this._deselectMultiDrag(), v(Lt, c.selectedClass, !~jt.indexOf(Lt)), ~jt.indexOf(Lt)) jt.splice(jt.indexOf(Lt), 1), Ht = null, B({\n          sortable: i,\n          rootEl: n,\n          name: \"deselect\",\n          targetEl: Lt,\n          originalEvt: e\n        });else {\n          if (jt.push(Lt), B({\n            sortable: i,\n            rootEl: n,\n            name: \"select\",\n            targetEl: Lt,\n            originalEvt: e\n          }), e.shiftKey && Ht && i.el.contains(Ht)) {\n            var d,\n              h,\n              f = C(Ht),\n              p = C(Lt);\n            if (~f && ~p && f !== p) for (p > f ? (h = f, d = p) : (h = p, d = f + 1); h < d; h++) {\n              ~jt.indexOf(u[h]) || (v(u[h], c.selectedClass, !0), jt.push(u[h]), B({\n                sortable: i,\n                rootEl: n,\n                name: \"select\",\n                targetEl: u[h],\n                originalEvt: e\n              }));\n            }\n          } else Ht = Lt;\n          Ft = s;\n        }\n        if (qt && this.isMultiDrag) {\n          if ((o[k].options.sort || o !== n) && jt.length > 1) {\n            var g = y(Lt),\n              m = C(Lt, \":not(.\" + this.options.selectedClass + \")\");\n            if (!Gt && c.animation && (Lt.thisAnimationDuration = null), s.captureAnimationState(), !Gt && (c.animation && (Lt.fromRect = g, jt.forEach(function (t) {\n              if (t.thisAnimationDuration = null, t !== Lt) {\n                var e = Ut ? y(t) : g;\n                t.fromRect = e, s.addAnimationState({\n                  target: t,\n                  rect: e\n                });\n              }\n            })), Zt(), jt.forEach(function (t) {\n              u[m] ? o.insertBefore(t, u[m]) : o.appendChild(t), m++;\n            }), a === C(Lt))) {\n              var b = !1;\n              jt.forEach(function (t) {\n                t.sortableIndex === C(t) || (b = !0);\n              }), b && r(\"update\");\n            }\n            jt.forEach(function (t) {\n              P(t);\n            }), s.animateAll();\n          }\n          Ft = s;\n        }\n        (n === o || l && \"clone\" !== l.lastPutMode) && zt.forEach(function (t) {\n          t.parentNode && t.parentNode.removeChild(t);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = qt = !1, zt.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag(), u(document, \"pointerup\", this._deselectMultiDrag), u(document, \"mouseup\", this._deselectMultiDrag), u(document, \"touchend\", this._deselectMultiDrag), u(document, \"keydown\", this._checkKeyDown), u(document, \"keyup\", this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(t) {\n      if (!(void 0 !== qt && qt || Ft !== this.sortable || t && f(t.target, this.options.draggable, this.sortable.el, !1) || t && 0 !== t.button)) for (; jt.length;) {\n        var e = jt[0];\n        v(e, this.options.selectedClass, !1), jt.shift(), B({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: \"deselect\",\n          targetEl: e,\n          originalEvt: t\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(t) {\n      t.key === this.options.multiDragKey && (this.multiDragKeyDown = !0);\n    },\n    _checkKeyUp: function _checkKeyUp(t) {\n      t.key === this.options.multiDragKey && (this.multiDragKeyDown = !1);\n    }\n  }, Object.assign(t, {\n    pluginName: \"multiDrag\",\n    utils: {\n      select: function select(t) {\n        var e = t.parentNode[k];\n        e && e.options.multiDrag && !~jt.indexOf(t) && (Ft && Ft !== e && (Ft.multiDrag._deselectMultiDrag(), Ft = e), v(t, e.options.selectedClass, !0), jt.push(t));\n      },\n      deselect: function deselect(t) {\n        var e = t.parentNode[k],\n          n = jt.indexOf(t);\n        e && e.options.multiDrag && ~n && (v(t, e.options.selectedClass, !1), jt.splice(n, 1));\n      }\n    },\n    eventProperties: function eventProperties() {\n      var t = this,\n        e = [],\n        n = [];\n      return jt.forEach(function (o) {\n        var i;\n        e.push({\n          multiDragElement: o,\n          index: o.sortableIndex\n        }), i = Ut && o !== Lt ? -1 : Ut ? C(o, \":not(.\" + t.options.selectedClass + \")\") : C(o), n.push({\n          multiDragElement: o,\n          index: i\n        });\n      }), {\n        items: [].concat(jt),\n        clones: [].concat(zt),\n        oldIndicies: e,\n        newIndicies: n\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(t) {\n        return \"ctrl\" === (t = t.toLowerCase()) ? t = \"Control\" : t.length > 1 && (t = t.charAt(0).toUpperCase() + t.substr(1)), t;\n      }\n    }\n  });\n}());\nexport default It;\nexport { It as Sortable };","map":{"version":3,"sources":["../../utils/src/browser-info.ts","../../utils/src/utils.ts","../../sortable/src/PluginManager.ts","../../sortable/src/EventDispatcher.ts","../../sortable/src/Sortable.ts","../../plugins/swap/src/index.ts","../../sortable/src/Animation.ts","../../plugins/multi-drag/src/index.ts","../../plugins/on-spill/src/index.ts","../../plugins/auto-scroll/src/index.ts","../src/modular-complete.ts"],"names":["userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","indexOf","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","iterator","list","getElementsByTagName","i","n","length","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","arr","obj","hasOwnProperty","key","Number","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","dst","src","isRectEqual","rect1","rect2","Math","round","_throttleTimeout","throttle","callback","ms","args","arguments","_this","this","call","apply","setTimeout","clearTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","setRect","rect","unsetRect","expando","Date","getTime","plugins","defaults","initializeByDefault","pluginManager","mount","plugin","option","push","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","forEach","pluginName","initializePlugins","initialized","Object","assign","modified","modifyOption","getEventProperties","eventProperties","value","modifiedValue","optionListeners","dispatchEvent","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","bubbles","cancelable","createEvent","initEvent","to","from","item","pullMode","lastPutMode","undefined","allEventProperties","PluginManager","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","awaitingDragStarted","ignoreNextClick","sortables","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","pastFirstInvertThresh","isCircumstantialInvert","targetMoveDistance","ghostRelativeParent","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","clear","dragRect","targetRect","vertical","dragElS1Opp","targetS1Opp","ret","some","threshold","emptyInsertThreshold","_prepareGroup","toFn","pull","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","target","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","prototype","constructor","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","_saveInputCheckedState","button","isContentEditable","animated","criteria","trim","_prepareDragStart","ownerDocument","dragStartFn","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDraggable","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","max","abs","floor","_onTouchMove","_onDragStart","selection","_nextTick","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","f","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","extra","axis","completed","onMove","after","changed","captureAnimationState","insertion","_showClone","_ignoreWhileAnimating","animateAll","animatingX","animatingY","elLastChild","_ghostIsLast","targetBeforeFirstSwap","differentLevel","differentRowCol","_dragElInRowColumn","toRect","side1","scrolledPastTop","scrollBefore","_getSwapDirection","sibling","dragIndex","nextElementSibling","moveVector","_unsilent","_offMoveEvents","_offUpEvents","clearInterval","_cancelNextTick","removeChild","save","checked","handleEvent","_globalDragOver","toArray","order","getAttribute","_generateId","items","id","set","destroy","Array","querySelectorAll","removeAttribute","splice","animate","dropEffect","willInsertAfter","onMoveFn","retVal","draggedRect","related","relatedRect","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","str","href","sum","charCodeAt","root","inputs","idx","utils","is","extend","nextTick","cancelNextTick","detectDirection","element","create","version","lastSwapEl","Swap","swapClass","dragStart","dragOverValid","swap","prevSwapEl","drop","toSortable","nulling","swapItem","n1","n2","p1","p2","i1","i2","isEqualNode","animationStates","animationCallbackId","slice","child","fromRect","thisAnimationDuration","childMatrix","addAnimationState","removeAnimationState","indexOfObject","animating","animationTime","time","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animationResetTimer","currentRect","duration","translateX","translateY","forRepaintDummy","repaint","offsetWidth","sqrt","pow","multiDragElements","multiDragClones","lastMultiDragSelect","multiDragSortable","initialFolding","folding","clonesFromRect","clonesHidden","MultiDrag","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","selectedClass","multiDragKey","multiDragElement","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","sortableIndex","insertMultiDragClones","showClone","hideClone","dragStartGlobal","multiDrag","_this2","removeMultiDragElements","dragOver","insertMultiDragElements","dragOverCompleted","dragRectAbsolute","clonesHiddenBefore","dragOverAnimationCapture","dragMatrix","dragOverAnimationComplete","originalEvt","shiftKey","lastIndex","currentIndex","multiDragIndex","update","nullingGlobal","destroyGlobal","shift","select","deselect","oldIndicies","newIndicies","_this3","clones","toLowerCase","clonesInserted","elementsInserted","changedTouches","onSpill","Revert","startIndex","Remove","parentSortable","autoScrolls","scrollEl","scrollRootEl","scrolling","lastAutoScrollX","lastAutoScrollY","pointerElemChangedInterval","AutoScroll","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverBubble","clearPointerElemChangedInterval","clearAutoScrolls","autoScroll","ogElemScroller","newElem","pid","isFallback","sens","speed","scrollThisInstance","scrollCustomFn","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","RemoveOnSpill","RevertOnSpill"],"mappings":"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","sourcesContent":["function userAgent(pattern) {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return !!(/*@__PURE__*/ navigator.userAgent.match(pattern));\n  }\n}\n\nexport const IE11OrLess = userAgent(\n  /(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i\n);\nexport const Edge = userAgent(/Edge/i);\nexport const FireFox = userAgent(/firefox/i);\nexport const Safari =\n  userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nexport const IOS = userAgent(/iP(ad|od|hone)/i);\nexport const ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n","import { IE11OrLess } from \"./browser-info\";\nimport Sortable from \"../../sortable/src/Sortable\";\n\nconst captureMode = {\n  capture: false,\n  passive: false,\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(/**HTMLElement*/ el, /**String*/ selector) {\n  if (!selector) return;\n\n  selector[0] === \">\" && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode;\n}\n\nfunction closest(\n  /**HTMLElement*/ el,\n  /**String*/ selector,\n  /**HTMLElement*/ ctx,\n  includeCTX\n) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (\n        (selector != null &&\n          (selector[0] === \">\"\n            ? el.parentNode === ctx && matches(el, selector)\n            : matches(el, selector))) ||\n        (includeCTX && el === ctx)\n      ) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while ((el = getParentOrHost(el)));\n  }\n\n  return null;\n}\n\nconst R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? \"add\" : \"remove\"](name);\n    } else {\n      let className = (\" \" + el.className + \" \")\n        .replace(R_SPACE, \" \")\n        .replace(\" \" + name + \" \", \" \");\n      el.className = (className + (state ? \" \" + name : \"\")).replace(\n        R_SPACE,\n        \" \"\n      );\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  let style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, \"\");\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf(\"webkit\") === -1) {\n        prop = \"-webkit-\" + prop;\n      }\n\n      style[prop] = val + (typeof val === \"string\" ? \"\" : \"px\");\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  let appliedTransforms = \"\";\n  if (typeof el === \"string\") {\n    appliedTransforms = el;\n  } else {\n    do {\n      //@ts-ignore\n      let transform = css(el, \"transform\");\n\n      if (transform && transform !== \"none\") {\n        appliedTransforms = transform + \" \" + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  const matrixFn =\n    window.DOMMatrix ||\n    window.WebKitCSSMatrix ||\n    //@ts-ignore\n    window.CSSMatrix ||\n    //@ts-ignore\n    window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    let list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  let scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\nfunction getRect(\n  el,\n  relativeToContainingBlock,\n  relativeToNonStaticParent,\n  undoScale,\n  container\n) {\n  if (!el.getBoundingClientRect && el !== window) return;\n\n  let elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if (\n    (relativeToContainingBlock || relativeToNonStaticParent) &&\n    el !== window\n  ) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (\n          container &&\n          container.getBoundingClientRect &&\n          //@ts-ignore\n          (css(container, \"transform\") !== \"none\" ||\n            (relativeToNonStaticParent &&\n              //@ts-ignore\n              css(container, \"position\") !== \"static\"))\n        ) {\n          let containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -=\n            //@ts-ignore\n            containerRect.top + parseInt(css(container, \"border-top-width\"));\n          left -=\n            //@ts-ignore\n            containerRect.left + parseInt(css(container, \"border-left-width\"));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n\n          break;\n        }\n        /* jshint boss:true */\n      } while ((container = container.parentNode));\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    //@ts-ignore\n    let elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n\n      width /= scaleX;\n      height /= scaleY;\n\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  let parent = getParentAutoScrollElement(el, true),\n    //@ts-ignore\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    //@ts-ignore\n    let parentSideVal = getRect(parent)[parentSide],\n      visible;\n\n    if (parentSide === \"top\" || parentSide === \"left\") {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n\n    if (parent === getWindowScrollingElement()) break;\n\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\nfunction getChild(el, childNum, options) {\n  let currentChild = 0,\n    i = 0,\n    children = el.children;\n\n  while (i < children.length) {\n    if (\n      children[i].style.display !== \"none\" &&\n      //@ts-ignore\n      children[i] !== Sortable.ghost &&\n      //@ts-ignore\n      children[i] !== Sortable.dragged &&\n      closest(children[i], options.draggable, el, false)\n    ) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n\n    i++;\n  }\n  return null;\n}\n\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\nfunction lastChild(el, selector) {\n  let last = el.lastElementChild;\n\n  while (\n    last &&\n    //@ts-ignore\n    (last === Sortable.ghost ||\n      //@ts-ignore\n      css(last, \"display\") === \"none\" ||\n      (selector && !matches(last, selector)))\n  ) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\nfunction index(el, selector) {\n  let index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while ((el = el.previousElementSibling)) {\n    if (\n      el.nodeName.toUpperCase() !== \"TEMPLATE\" &&\n      //@ts-ignore\n      el !== Sortable.clone &&\n      (!selector || matches(el, selector))\n    ) {\n      index++;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\nfunction getRelativeScrollOffset(el) {\n  let offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      //@ts-ignore\n      let elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\nfunction indexOfObject(arr, obj) {\n  for (let i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n\n  let elem = el;\n  let gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (\n      elem.clientWidth < elem.scrollWidth ||\n      elem.clientHeight < elem.scrollHeight\n    ) {\n      //@ts-ignore\n      let elemCSS = css(elem);\n      if (\n        (elem.clientWidth < elem.scrollWidth &&\n          (elemCSS.overflowX == \"auto\" || elemCSS.overflowX == \"scroll\")) ||\n        (elem.clientHeight < elem.scrollHeight &&\n          (elemCSS.overflowY == \"auto\" || elemCSS.overflowY == \"scroll\"))\n      ) {\n        if (!elem.getBoundingClientRect || elem === document.body)\n          return getWindowScrollingElement();\n\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while ((elem = elem.parentNode));\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (let key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return (\n    Math.round(rect1.top) === Math.round(rect2.top) &&\n    Math.round(rect1.left) === Math.round(rect2.left) &&\n    Math.round(rect1.height) === Math.round(rect2.height) &&\n    Math.round(rect1.width) === Math.round(rect2.width)\n  );\n}\n\nlet _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      let args = arguments,\n        _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  //@ts-ignore\n  let Polymer = window.Polymer;\n  //@ts-ignore\n  let $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, \"position\", \"absolute\");\n  css(el, \"top\", rect.top);\n  css(el, \"left\", rect.left);\n  css(el, \"width\", rect.width);\n  css(el, \"height\", rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, \"position\", \"\");\n  css(el, \"top\", \"\");\n  css(el, \"left\", \"\");\n  css(el, \"width\", \"\");\n  css(el, \"height\", \"\");\n}\n\nconst expando = \"Sortable\" + new Date().getTime();\n\nexport {\n  on,\n  off,\n  matches,\n  getParentOrHost,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  indexOfObject,\n  getParentAutoScrollElement,\n  extend,\n  isRectEqual,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  clone,\n  setRect,\n  unsetRect,\n  expando,\n};\n","let plugins = [];\n\nconst defaults = {\n  initializeByDefault: true,\n};\n\nconst pluginManager = {\n  mount(plugin) {\n    // Set default static properties\n    for (let option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.push(plugin);\n  },\n  pluginEvent(eventName, sortable, evt) {\n    this.eventCanceled = false;\n    evt.cancel = () => {\n      this.eventCanceled = true;\n    };\n    const eventNameGlobal = eventName + \"Global\";\n    plugins.forEach((plugin) => {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal]({ sortable, ...evt });\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (\n        sortable.options[plugin.pluginName] &&\n        sortable[plugin.pluginName][eventName]\n      ) {\n        sortable[plugin.pluginName][eventName]({ sortable, ...evt });\n      }\n    });\n  },\n  initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach((plugin) => {\n      const pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n\n      let initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      Object.assign(defaults, initialized.defaults);\n    });\n\n    for (let option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      let modified = this.modifyOption(\n        sortable,\n        option,\n        sortable.options[option]\n      );\n      if (typeof modified !== \"undefined\") {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties(name, sortable) {\n    let eventProperties = {};\n    plugins.forEach((plugin) => {\n      if (typeof plugin.eventProperties !== \"function\") return;\n      Object.assign(\n        eventProperties,\n        plugin.eventProperties.call(sortable[plugin.pluginName], name)\n      );\n    });\n\n    return eventProperties;\n  },\n  modifyOption(sortable, name, value) {\n    let modifiedValue;\n    plugins.forEach((plugin) => {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (\n        plugin.optionListeners &&\n        typeof plugin.optionListeners[name] === \"function\"\n      ) {\n        modifiedValue = plugin.optionListeners[name].call(\n          sortable[plugin.pluginName],\n          value\n        );\n      }\n    });\n\n    return modifiedValue;\n  },\n};\n\nexport default pluginManager;\n","import { expando, IE11OrLess, Edge } from \"../../utils/src\";\nimport PluginManager from \"./PluginManager\";\n\nexport default function dispatchEvent({\n  sortable,\n  rootEl,\n  name,\n  targetEl,\n  cloneEl,\n  toEl,\n  fromEl,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  originalEvent,\n  putSortable,\n  extraEventProperties,\n}) {\n  sortable = sortable || (rootEl && rootEl[expando]);\n  if (!sortable) return;\n\n  let evt,\n    options = sortable.options,\n    onName = \"on\" + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  let allEventProperties = {\n    ...extraEventProperties,\n    ...PluginManager.getEventProperties(name, sortable),\n  };\n  for (let option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n","import { version } from \"../package.json\";\nimport AnimationStateManager from \"./Animation\";\nimport PluginManager from \"./PluginManager\";\nimport dispatchEvent from \"./EventDispatcher\";\n/**\n * @todo import as namespace: import * as utils from \"../../utils/src\"\n */\nimport {\n  on,\n  off,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  extend,\n  throttle,\n  scrollBy,\n  clone,\n  expando,\n  IE11OrLess,\n  Edge,\n  FireFox,\n  Safari,\n  IOS,\n  ChromeForAndroid,\n} from \"../../utils/src\";\n\nlet pluginEvent = function (\n  eventName,\n  sortable,\n  //@ts-ignore\n  { evt: originalEvent, ...data } = {}\n) {\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, {\n    dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    dragStarted: moved,\n    putSortable,\n    //@ts-ignore\n    activeSortable: Sortable.active,\n    originalEvent,\n\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n\n    cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown() {\n      cloneHidden = false;\n    },\n\n    dispatchSortableEvent(name) {\n      _dispatchEvent({ sortable, name, originalEvent });\n    },\n\n    ...data,\n  });\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent({\n    putSortable,\n    cloneEl,\n    targetEl: dragEl,\n    rootEl,\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n    ...info,\n  });\n}\n\nlet dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [], // (left, top)\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nconst documentExists = typeof document !== \"undefined\",\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? \"cssFloat\" : \"float\",\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable =\n    documentExists &&\n    !ChromeForAndroid &&\n    !IOS &&\n    \"draggable\" in document.createElement(\"div\"),\n  supportCssPointerEvents = (function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    let el = document.createElement(\"x\");\n    el.style.cssText = \"pointer-events:auto\";\n    return el.style.pointerEvents === \"auto\";\n  })(),\n  _detectDirection = function (el, options) {\n    //@ts-ignore\n    let elCSS = css(el),\n      elWidth =\n        parseInt(elCSS.width) -\n        parseInt(elCSS.paddingLeft) -\n        parseInt(elCSS.paddingRight) -\n        parseInt(elCSS.borderLeftWidth) -\n        parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      //@ts-ignore\n      firstChildCSS = child1 && css(child1),\n      //@ts-ignore\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth =\n        firstChildCSS &&\n        parseInt(firstChildCSS.marginLeft) +\n          parseInt(firstChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child1).width,\n      secondChildWidth =\n        secondChildCSS &&\n        parseInt(secondChildCSS.marginLeft) +\n          parseInt(secondChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child2).width;\n\n    if (elCSS.display === \"flex\") {\n      return elCSS.flexDirection === \"column\" ||\n        elCSS.flexDirection === \"column-reverse\"\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (elCSS.display === \"grid\") {\n      return elCSS.gridTemplateColumns.split(\" \").length <= 1\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (child1 && firstChildCSS.float && firstChildCSS.float !== \"none\") {\n      let touchingSideChild2 =\n        firstChildCSS.float === \"left\" ? \"left\" : \"right\";\n\n      return child2 &&\n        (secondChildCSS.clear === \"both\" ||\n          secondChildCSS.clear === touchingSideChild2)\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    return child1 &&\n      (firstChildCSS.display === \"block\" ||\n        firstChildCSS.display === \"flex\" ||\n        firstChildCSS.display === \"table\" ||\n        firstChildCSS.display === \"grid\" ||\n        (firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === \"none\") ||\n        (child2 &&\n          elCSS[CSSFloatProperty] === \"none\" &&\n          firstChildWidth + secondChildWidth > elWidth))\n      ? \"vertical\"\n      : \"horizontal\";\n  },\n  _dragElInRowColumn = function (dragRect, targetRect, vertical) {\n    let dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n\n    return (\n      dragElS1Opp === targetS1Opp ||\n      dragElS2Opp === targetS2Opp ||\n      dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2\n    );\n  },\n  /**\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n   * @param  {Number} x      X position\n   * @param  {Number} y      Y position\n   * @return {HTMLElement}   Element of the first found nearest Sortable\n   */\n  _detectNearestEmptySortable = function (x, y) {\n    let ret;\n    sortables.some((sortable) => {\n      //@ts-ignore\n      if (lastChild(sortable)) return;\n\n      //@ts-ignore\n      let rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally =\n          x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically =\n          y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n      if (threshold && insideHorizontally && insideVertically) {\n        return (ret = sortable);\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function (options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        let sameGroup =\n          to.options.group.name &&\n          from.options.group.name &&\n          to.options.group.name === from.options.group.name;\n\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === \"clone\") {\n          return value;\n        } else if (typeof value === \"function\") {\n          return toFn(value(to, from, dragEl, evt), pull)(\n            to,\n            from,\n            dragEl,\n            evt\n          );\n        } else {\n          let otherGroup = (pull ? to : from).options.group.name;\n\n          return (\n            value === true ||\n            (typeof value === \"string\" && value === otherGroup) ||\n            (value.join && value.indexOf(otherGroup) > -1)\n          );\n        }\n      };\n    }\n\n    let group = {};\n    let originalGroup = options.group;\n\n    if (!originalGroup || typeof originalGroup != \"object\") {\n      originalGroup = { name: originalGroup };\n    }\n\n    //@ts-ignore\n    group.name = originalGroup.name;\n    //@ts-ignore\n    group.checkPull = toFn(originalGroup.pull, true);\n    //@ts-ignore\n    group.checkPut = toFn(originalGroup.put);\n    //@ts-ignore\n    group.revertClone = originalGroup.revertClone;\n\n    options.group = group;\n  },\n  _hideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"none\");\n    }\n  },\n  _unhideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"\");\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists) {\n  document.addEventListener(\n    \"click\",\n    function (evt) {\n      if (ignoreNextClick) {\n        evt.preventDefault();\n        evt.stopPropagation && evt.stopPropagation();\n        evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n        ignoreNextClick = false;\n        return false;\n      }\n    },\n    true\n  );\n}\n\nlet nearestEmptyInsertDetectEvent = function (evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    let nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      let event = {};\n      for (let i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      //@ts-ignore\n      event.target = event.rootEl = nearest;\n      //@ts-ignore\n      event.preventDefault = void 0;\n      //@ts-ignore\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nlet _checkOutsideTargetEl = function (evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw `Sortable: \\`el\\` must be an HTMLElement, not ${{}.toString.call(\n      el\n    )}`;\n  }\n\n  this.el = el; // root element\n  this.options = options = Object.assign({}, options);\n\n  // Export instance\n  el[expando] = this;\n\n  let defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? \">li\" : \">*\",\n    swapThreshold: 1, // percentage; 0 <= x <= 1\n    invertSwap: false, // invert always\n    invertedSwapThreshold: null, // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function () {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: \"sortable-ghost\",\n    chosenClass: \"sortable-chosen\",\n    dragClass: \"sortable-drag\",\n    ignore: \"a, img\",\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function (dataTransfer, dragEl) {\n      dataTransfer.setData(\"Text\", dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: \"data-id\",\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold:\n      (Number.parseInt ? Number : window).parseInt(\n        //@ts-ignore\n        window.devicePixelRatio,\n        10\n      ) || 1,\n    forceFallback: false,\n    fallbackClass: \"sortable-fallback\",\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: { x: 0, y: 0 },\n    supportPointer:\n      //@ts-ignore\n      Sortable.supportPointer !== false && \"PointerEvent\" in window,\n    emptyInsertThreshold: 5,\n  };\n\n  //@ts-ignore\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (let name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (let fn in this) {\n    if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, \"pointerdown\", this._onTapStart);\n  } else {\n    on(el, \"mousedown\", this._onTapStart);\n    on(el, \"touchstart\", this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, \"dragover\", this);\n    on(el, \"dragenter\", this);\n  }\n\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store &&\n    options.store.get &&\n    this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  Object.assign(this, AnimationStateManager());\n}\n\nSortable.prototype = /** @lends Sortable.prototype */ {\n  constructor: Sortable,\n\n  _isOutsideThisEl: function (target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n\n  _getDirection: function (evt, target) {\n    return typeof this.options.direction === \"function\"\n      ? this.options.direction.call(this, evt, target, dragEl)\n      : this.options.direction;\n  },\n\n  _onTapStart: function (/** Event|TouchEvent */ evt) {\n    if (!evt.cancelable) return;\n    let _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch =\n        (evt.touches && evt.touches[0]) ||\n        (evt.pointerType && evt.pointerType === \"touch\" && evt),\n      target = (touch || evt).target,\n      originalTarget =\n        (evt.target.shadowRoot &&\n          ((evt.path && evt.path[0]) ||\n            (evt.composedPath && evt.composedPath()[0]))) ||\n        target,\n      filter = options.filter;\n\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n\n    if (\n      (/mousedown|pointerdown/.test(type) && evt.button !== 0) ||\n      options.disabled\n    ) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (\n      !this.nativeDraggable &&\n      Safari &&\n      target &&\n      target.tagName.toUpperCase() === \"SELECT\"\n    ) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === \"function\") {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: \"filter\",\n          targetEl: target,\n          toEl: el,\n          fromEl: el,\n        });\n        pluginEvent(\"filter\", _this, { evt });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(\",\").some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: \"filter\",\n            targetEl: target,\n            fromEl: el,\n            toEl: el,\n          });\n          pluginEvent(\"filter\", _this, { evt });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n\n  _prepareDragStart: function (\n    /** Event */ evt,\n    /** Touch */ touch,\n    /** HTMLElement */ target\n  ) {\n    let _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      //@ts-ignore\n      let dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n\n      //@ts-ignore\n      Sortable.dragged = dragEl;\n\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY,\n      };\n\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n\n      dragEl.style[\"will-change\"] = \"all\";\n\n      dragStartFn = function () {\n        pluginEvent(\"delayEnded\", _this, { evt });\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: \"choose\",\n          originalEvent: evt,\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(\",\").forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n\n      on(ownerDocument, \"dragover\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"mousemove\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"touchmove\", nearestEmptyInsertDetectEvent);\n\n      on(ownerDocument, \"mouseup\", _this._onDrop);\n      on(ownerDocument, \"touchend\", _this._onDrop);\n      on(ownerDocument, \"touchcancel\", _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent(\"delayStart\", this, { evt });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (\n        options.delay &&\n        (!options.delayOnTouchOnly || touch) &&\n        (!this.nativeDraggable || !(Edge || IE11OrLess))\n      ) {\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, \"mouseup\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchend\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchcancel\", _this._disableDelayedDrag);\n        on(ownerDocument, \"mousemove\", _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, \"touchmove\", _this._delayedDragTouchMoveHandler);\n        options.supportPointer &&\n          on(ownerDocument, \"pointermove\", _this._delayedDragTouchMoveHandler);\n\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n\n  _delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/ e) {\n    let touch = e.touches ? e.touches[0] : e;\n    if (\n      Math.max(\n        Math.abs(touch.clientX - this._lastX),\n        Math.abs(touch.clientY - this._lastY)\n      ) >=\n      Math.floor(\n        this.options.touchStartThreshold /\n          ((this.nativeDraggable && window.devicePixelRatio) || 1)\n      )\n    ) {\n      this._disableDelayedDrag();\n    }\n  },\n\n  _disableDelayedDrag: function () {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n\n  _disableDelayedDragEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, \"mouseup\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchend\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchcancel\", this._disableDelayedDrag);\n    off(ownerDocument, \"mousemove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"touchmove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"pointermove\", this._delayedDragTouchMoveHandler);\n  },\n\n  _triggerDragStart: function (/** Event */ evt, /** Touch */ touch) {\n    touch = touch || (evt.pointerType == \"touch\" && evt);\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, \"pointermove\", this._onTouchMove);\n      } else if (touch) {\n        on(document, \"touchmove\", this._onTouchMove);\n      } else {\n        on(document, \"mousemove\", this._onTouchMove);\n      }\n    } else {\n      on(dragEl, \"dragend\", this);\n      on(rootEl, \"dragstart\", this._onDragStart);\n    }\n\n    try {\n      //@ts-ignore\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          //@ts-ignore\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n\n  _dragStarted: function (fallback, evt) {\n    let _this = this;\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent(\"dragStarted\", this, { evt });\n\n      if (this.nativeDraggable) {\n        on(document, \"dragover\", _checkOutsideTargetEl);\n      }\n      let options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n\n      //@ts-ignore\n      Sortable.active = this;\n\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: \"start\",\n        originalEvent: evt,\n      });\n    } else {\n      this._nulling();\n    }\n  },\n\n  _emulateDragOver: function () {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      let target = document.elementFromPoint(\n        touchEvt.clientX,\n        touchEvt.clientY\n      );\n      let parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(\n          touchEvt.clientX,\n          touchEvt.clientY\n        );\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            let inserted;\n\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent,\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        } while (\n          /* jshint boss:true */\n          //@ts-ignore\n          (parent = parent.parentNode)\n        );\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n\n  _onTouchMove: function (/**TouchEvent*/ evt) {\n    if (tapEvt) {\n      let options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset =\n          PositionGhostAbsolutely &&\n          ghostRelativeParent &&\n          getRelativeScrollOffset(ghostRelativeParent),\n        dx =\n          (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]\n            : 0) /\n            (scaleX || 1),\n        dy =\n          (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]\n            : 0) /\n            (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      //@ts-ignore\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (\n          fallbackTolerance &&\n          Math.max(\n            Math.abs(touch.clientX - this._lastX),\n            Math.abs(touch.clientY - this._lastY)\n          ) < fallbackTolerance\n        ) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy,\n          };\n        }\n\n        let cssMatrix = `matrix(${ghostMatrix.a},${ghostMatrix.b},${ghostMatrix.c},${ghostMatrix.d},${ghostMatrix.e},${ghostMatrix.f})`;\n\n        css(ghostEl, \"webkitTransform\", cssMatrix);\n        css(ghostEl, \"mozTransform\", cssMatrix);\n        css(ghostEl, \"msTransform\", cssMatrix);\n        css(ghostEl, \"transform\", cssMatrix);\n\n        lastDx = dx;\n        lastDy = dy;\n\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n\n  _appendGhost: function () {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      let container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (\n          //@ts-ignore\n          css(ghostRelativeParent, \"position\") === \"static\" &&\n          //@ts-ignore\n          css(ghostRelativeParent, \"transform\") === \"none\" &&\n          ghostRelativeParent !== document\n        ) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (\n          ghostRelativeParent !== document.body &&\n          ghostRelativeParent !== document.documentElement\n        ) {\n          if (ghostRelativeParent === document)\n            ghostRelativeParent = getWindowScrollingElement();\n\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(\n          ghostRelativeParent\n        );\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n\n      css(ghostEl, \"transition\", \"\");\n      css(ghostEl, \"transform\", \"\");\n\n      css(ghostEl, \"box-sizing\", \"border-box\");\n      css(ghostEl, \"margin\", 0);\n      css(ghostEl, \"top\", rect.top);\n      css(ghostEl, \"left\", rect.left);\n      css(ghostEl, \"width\", rect.width);\n      css(ghostEl, \"height\", rect.height);\n      css(ghostEl, \"opacity\", \"0.8\");\n      css(ghostEl, \"position\", PositionGhostAbsolutely ? \"absolute\" : \"fixed\");\n      css(ghostEl, \"zIndex\", \"100000\");\n      css(ghostEl, \"pointerEvents\", \"none\");\n\n      //@ts-ignore\n      Sortable.ghost = ghostEl;\n\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(\n        ghostEl,\n        \"transform-origin\",\n        (tapDistanceLeft / parseInt(ghostEl.style.width)) * 100 +\n          \"% \" +\n          (tapDistanceTop / parseInt(ghostEl.style.height)) * 100 +\n          \"%\"\n      );\n    }\n  },\n\n  _onDragStart: function (/**Event*/ evt, /**boolean*/ fallback) {\n    let _this = this;\n    let dataTransfer = evt.dataTransfer;\n    let options = _this.options;\n\n    pluginEvent(\"dragStart\", this, { evt });\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n\n    pluginEvent(\"setupClone\", this);\n    //@ts-ignore\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n\n      cloneEl.draggable = false;\n      cloneEl.style[\"will-change\"] = \"\";\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      //@ts-ignore\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent(\"clone\", _this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: \"clone\",\n      });\n    });\n\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, \"mouseup\", _this._onDrop);\n      off(document, \"touchend\", _this._onDrop);\n      off(document, \"touchcancel\", _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = \"move\";\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, \"drop\", _this);\n\n      // #1276 fix:\n      css(dragEl, \"transform\", \"translateZ(0)\");\n    }\n\n    awaitingDragStarted = true;\n\n    _this._dragStartId = _nextTick(\n      _this._dragStarted.bind(_this, fallback, evt)\n    );\n    on(document, \"selectstart\", _this);\n\n    moved = true;\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"none\");\n    }\n  },\n\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function (/**Event*/ evt) {\n    let el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      //@ts-ignore\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, {\n        evt,\n        isOwner,\n        axis: vertical ? \"vertical\" : \"horizontal\",\n        revert,\n        dragRect,\n        targetRect,\n        canSort,\n        fromSortable,\n        target,\n        completed,\n        onMove(target, after) {\n          return onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            //@ts-ignore\n            getRect(target),\n            evt,\n            after\n          );\n        },\n        changed,\n        ...extra,\n      });\n    }\n\n    // Capture animation state\n    function capture() {\n      //@ts-ignore\n      dragOverEvent(\"dragOverAnimationCapture\");\n\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent(\"dragOverCompleted\", { insertion });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : activeSortable.options.ghostClass,\n            false\n          );\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        //@ts-ignore\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n          //@ts-ignore\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          //@ts-ignore\n          dragOverEvent(\"dragOverAnimationComplete\");\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (\n        (target === dragEl && !dragEl.animated) ||\n        (target === el && !target.animated)\n      ) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n      return (completedFired = true);\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      //@ts-ignore\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: \"change\",\n        toEl: el,\n        newIndex,\n        newDraggableIndex,\n        originalEvent: evt,\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n\n    //@ts-ignore\n    dragOverEvent(\"dragOver\");\n    //@ts-ignore\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (\n      dragEl.contains(evt.target) ||\n      (target.animated && target.animatingX && target.animatingY) ||\n      _this._ignoreWhileAnimating === target\n    ) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (\n      activeSortable &&\n      !options.disabled &&\n      (isOwner\n        ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n        : putSortable === this ||\n          ((this.lastPutMode = activeGroup.checkPull(\n            this,\n            activeSortable,\n            dragEl,\n            evt\n          )) &&\n            group.checkPut(this, activeSortable, dragEl, evt)))\n    ) {\n      vertical = this._getDirection(evt, target) === \"vertical\";\n\n      //@ts-ignore\n      dragRect = getRect(dragEl);\n\n      //@ts-ignore\n      dragOverEvent(\"dragOverValid\");\n      //@ts-ignore\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n\n        this._hideClone();\n\n        //@ts-ignore\n        dragOverEvent(\"revert\");\n\n        //@ts-ignore\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      let elLastChild = lastChild(el, options.draggable);\n\n      if (\n        !elLastChild ||\n        (_ghostIsLast(evt, vertical, this) && !elLastChild.animated)\n      ) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // assign target only if condition is true\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          //@ts-ignore\n          targetRect = getRect(target);\n        }\n\n        if (\n          onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            targetRect,\n            evt,\n            !!target\n          ) !== false\n        ) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        //@ts-ignore\n        targetRect = getRect(target);\n        let direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(\n            (dragEl.animated && dragEl.toRect) || dragRect,\n            (target.animated && target.toRect) || targetRect,\n            vertical\n          ),\n          side1 = vertical ? \"top\" : \"left\",\n          scrolledPastTop =\n            isScrolledPast(target, \"top\", \"top\") ||\n            isScrolledPast(dragEl, \"top\", \"top\"),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert =\n            (!differentRowCol && options.invertSwap) || differentLevel;\n        }\n\n        direction = _getSwapDirection(\n          evt,\n          target,\n          targetRect,\n          vertical,\n          differentRowCol ? 1 : options.swapThreshold,\n          options.invertedSwapThreshold == null\n            ? options.swapThreshold\n            : options.invertedSwapThreshold,\n          isCircumstantialInvert,\n          lastTarget === target\n        );\n\n        let sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          //@ts-ignore\n          let dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (\n            sibling &&\n            //@ts-ignore\n            (css(sibling, \"display\") === \"none\" || sibling === ghostEl)\n          );\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n\n        lastDirection = direction;\n\n        let nextSibling = target.nextElementSibling,\n          after = false;\n\n        after = direction === 1;\n\n        let moveVector = onMove(\n          rootEl,\n          el,\n          dragEl,\n          dragRect,\n          target,\n          targetRect,\n          evt,\n          after\n        );\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(\n              dragEl,\n              after ? nextSibling : target\n            );\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(\n              scrolledPastTop,\n              0,\n              scrollBefore - scrolledPastTop.scrollTop\n            );\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(\n              //@ts-ignore\n              targetBeforeFirstSwap - getRect(target)[side1]\n            );\n          }\n          changed();\n\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n\n  _ignoreWhileAnimating: null,\n\n  _offMoveEvents: function () {\n    off(document, \"mousemove\", this._onTouchMove);\n    off(document, \"touchmove\", this._onTouchMove);\n    off(document, \"pointermove\", this._onTouchMove);\n    off(document, \"dragover\", nearestEmptyInsertDetectEvent);\n    off(document, \"mousemove\", nearestEmptyInsertDetectEvent);\n    off(document, \"touchmove\", nearestEmptyInsertDetectEvent);\n  },\n\n  _offUpEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n\n    off(ownerDocument, \"mouseup\", this._onDrop);\n    off(ownerDocument, \"touchend\", this._onDrop);\n    off(ownerDocument, \"pointerup\", this._onDrop);\n    off(ownerDocument, \"touchcancel\", this._onDrop);\n    off(document, \"selectstart\", this);\n  },\n\n  _onDrop: function (/**Event*/ evt) {\n    let el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    pluginEvent(\"drop\", this, {\n      evt,\n    });\n\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n\n    clearInterval(this._loopId);\n\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, \"drop\", this);\n      off(el, \"dragstart\", this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"\");\n    }\n\n    css(dragEl, \"transform\", \"\");\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        // Remove clone(s)\n        cloneEl &&\n          cloneEl.parentNode &&\n          cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, \"dragend\", this);\n        }\n\n        _disableDraggable(dragEl);\n        dragEl.style[\"will-change\"] = \"\";\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : this.options.ghostClass,\n            false\n          );\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: \"unchoose\",\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt,\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"add\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: \"remove\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"sort\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: \"sort\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: \"update\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: \"sort\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n            }\n          }\n        }\n\n        //@ts-ignore\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: \"end\",\n            toEl: parentEl,\n            originalEvent: evt,\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n\n  _nulling: function () {\n    pluginEvent(\"nulling\", this);\n    //@ts-ignore\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n\n  handleEvent: function (/**Event*/ evt) {\n    switch (evt.type) {\n      case \"drop\":\n      case \"dragend\":\n        this._onDrop(evt);\n        break;\n\n      case \"dragenter\":\n      case \"dragover\":\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n\n      case \"selectstart\":\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function () {\n    let order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function (order) {\n    let items = {},\n      rootEl = this.el;\n\n    this.toArray().forEach(function (id, i) {\n      let el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function () {\n    let store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function (el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function (name, value) {\n    let options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      let modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== \"undefined\") {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === \"group\") {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function () {\n    pluginEvent(\"destroy\", this);\n    let el = this.el;\n\n    el[expando] = null;\n\n    off(el, \"mousedown\", this._onTapStart);\n    off(el, \"touchstart\", this._onTapStart);\n    off(el, \"pointerdown\", this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, \"dragover\", this);\n      off(el, \"dragenter\", this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll(\"[draggable]\"), function (\n      el\n    ) {\n      el.removeAttribute(\"draggable\");\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n\n    this.el = el = null;\n  },\n\n  _hideClone: function () {\n    if (!cloneHidden) {\n      pluginEvent(\"hideClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      css(cloneEl, \"display\", \"none\");\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n\n  _showClone: function (putSortable) {\n    if (putSortable.lastPutMode !== \"clone\") {\n      this._hideClone();\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent(\"showClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, \"display\", \"\");\n      cloneHidden = false;\n    }\n  },\n};\n\nfunction _globalDragOver(/**Event*/ evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = \"move\";\n  }\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction onMove(\n  fromEl,\n  toEl,\n  dragEl,\n  dragRect,\n  targetEl,\n  targetRect,\n  originalEvent,\n  willInsertAfter\n) {\n  let evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(\"move\", {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(\"move\", true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  //@ts-ignore\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n\n  evt.originalEvent = originalEvent;\n\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  //@ts-ignore\n  let rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  const spacer = 10;\n\n  return vertical\n    ? evt.clientX > rect.right + spacer ||\n        (evt.clientX <= rect.right &&\n          evt.clientY > rect.bottom &&\n          evt.clientX >= rect.left)\n    : (evt.clientX > rect.right && evt.clientY > rect.top) ||\n        (evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer);\n}\n\nfunction _getSwapDirection(\n  evt,\n  target,\n  targetRect,\n  vertical,\n  swapThreshold,\n  invertedSwapThreshold,\n  invertSwap,\n  isLastTarget\n) {\n  let mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (\n        !pastFirstInvertThresh &&\n        (lastDirection === 1\n          ? mouseOnAxis > targetS1 + (targetLength * invertedSwapThreshold) / 2\n          : mouseOnAxis < targetS2 - (targetLength * invertedSwapThreshold) / 2)\n      ) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (\n          lastDirection === 1\n            ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n            : mouseOnAxis > targetS2 - targetMoveDistance\n        ) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (\n        mouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold)) / 2 &&\n        mouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold)) / 2\n      ) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (\n      mouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold) / 2 ||\n      mouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold) / 2\n    ) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\nfunction _getInsertDirection(target) {\n  //@ts-ignore\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\nfunction _generateId(el) {\n  let str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n\n  let inputs = root.getElementsByTagName(\"input\");\n  let idx = inputs.length;\n\n  while (idx--) {\n    let el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, \"touchmove\", function (evt) {\n    //@ts-ignore\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function (el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild,\n};\n\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\nSortable.mount = function (...plugins) {\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n\n  plugins.forEach((plugin) => {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw `Sortable: Mounted plugin must be a constructor function, not ${{}.toString.call(\n        plugin\n      )}`;\n    }\n    if (plugin.utils) Sortable.utils = { ...Sortable.utils, ...plugin.utils };\n\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nexport default Sortable;\n","import { toggleClass, index } from \"../../../utils/src\";\n\nlet lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: \"sortable-swap-highlight\",\n    };\n  }\n\n  Swap.prototype = {\n    dragStart({ dragEl }) {\n      lastSwapEl = dragEl;\n    },\n    dragOverValid({\n      completed,\n      target,\n      onMove,\n      activeSortable,\n      changed,\n      cancel,\n    }) {\n      if (!activeSortable.options.swap) return;\n      let el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        let prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n\n      completed(true);\n      cancel();\n    },\n    drop({ activeSortable, putSortable, dragEl }) {\n      let toSortable = putSortable || this.sortable;\n      let options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (\n        lastSwapEl &&\n        (options.swap || (putSortable && putSortable.options.swap))\n      ) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable)\n            activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling() {\n      lastSwapEl = null;\n    },\n  };\n\n  return Object.assign(Swap, {\n    pluginName: \"swap\",\n    eventProperties() {\n      return {\n        swapItem: lastSwapEl,\n      };\n    },\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  let p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n\n  //@ts-ignore\n  i1 = index(n1);\n  //@ts-ignore\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nexport default SwapPlugin;\n","import {\n  getRect,\n  css,\n  matrix,\n  isRectEqual,\n  indexOfObject,\n} from \"../../utils/src\";\nimport * as Sortable from \"./Sortable\";\n\nexport default function AnimationStateManager() {\n  let animationStates = [],\n    animationCallbackId;\n\n  return {\n    captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      let children = [].slice.call(this.el.children);\n\n      children.forEach((child) => {\n        //@ts-ignore\n        if (css(child, \"display\") === \"none\" || child === Sortable.ghost)\n          return;\n        animationStates.push({\n          target: child,\n          //@ts-ignore\n          rect: getRect(child),\n        });\n        let fromRect = { ...animationStates[animationStates.length - 1].rect };\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          let childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n\n    addAnimationState(state) {\n      animationStates.push(state);\n    },\n\n    removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, { target }), 1);\n    },\n\n    animateAll(callback) {\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === \"function\") callback();\n        return;\n      }\n\n      let animating = false,\n        animationTime = 0;\n\n      animationStates.forEach((state) => {\n        let time = 0,\n          animatingThis = false,\n          target = state.target,\n          fromRect = target.fromRect,\n          //@ts-ignore\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (\n            isRectEqual(prevFromRect, toRect) &&\n            !isRectEqual(fromRect, toRect) &&\n            // Make sure animatingRect is on line between toRect & fromRect\n            (animatingRect.top - toRect.top) /\n              (animatingRect.left - toRect.left) ===\n              (fromRect.top - toRect.top) / (fromRect.left - toRect.left)\n          ) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(\n              animatingRect,\n              prevFromRect,\n              prevToRect,\n              this.options\n            );\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = this.options.animation;\n          }\n          this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === \"function\") callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === \"function\") callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n\n    animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, \"transition\", \"\");\n        css(target, \"transform\", \"\");\n        //@ts-ignore\n        let elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n\n        css(\n          target,\n          \"transform\",\n          \"translate3d(\" + translateX + \"px,\" + translateY + \"px,0)\"\n        );\n\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(\n          target,\n          \"transition\",\n          \"transform \" +\n            duration +\n            \"ms\" +\n            (this.options.easing ? \" \" + this.options.easing : \"\")\n        );\n        css(target, \"transform\", \"translate3d(0,0,0)\");\n        typeof target.animated === \"number\" && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, \"transition\", \"\");\n          css(target, \"transform\", \"\");\n          target.animated = false;\n\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    },\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return (\n    (Math.sqrt(\n      Math.pow(fromRect.top - animatingRect.top, 2) +\n        Math.pow(fromRect.left - animatingRect.left, 2)\n    ) /\n      Math.sqrt(\n        Math.pow(fromRect.top - toRect.top, 2) +\n          Math.pow(fromRect.left - toRect.left, 2)\n      )) *\n    options.animation\n  );\n}\n","import {\n  toggleClass,\n  getRect,\n  index,\n  closest,\n  on,\n  off,\n  clone,\n  css,\n  setRect,\n  unsetRect,\n  matrix,\n  expando,\n} from \"../../../utils/src\";\n\nimport dispatchEvent from \"../../../sortable/src/EventDispatcher\";\n\nlet multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect, // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false, // Initial multi-drag fold when drag started\n  folding = false, // Folding any other time\n  dragStarted = false,\n  dragEl,\n  clonesFromRect,\n  clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, \"pointerup\", this._deselectMultiDrag);\n    } else {\n      on(document, \"mouseup\", this._deselectMultiDrag);\n      on(document, \"touchend\", this._deselectMultiDrag);\n    }\n\n    on(document, \"keydown\", this._checkKeyDown);\n    on(document, \"keyup\", this._checkKeyUp);\n\n    this.defaults = {\n      selectedClass: \"sortable-selected\",\n      multiDragKey: null,\n      setData(dataTransfer, dragEl) {\n        let data = \"\";\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach((multiDragElement, i) => {\n            data += (!i ? \"\" : \", \") + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData(\"Text\", data);\n      },\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n\n    delayStartGlobal({ dragEl: dragged }) {\n      dragEl = dragged;\n    },\n\n    delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl);\n    },\n\n    setupClone({ sortable, cancel }) {\n      if (!this.isMultiDrag) return;\n      for (let i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style[\"will-change\"] = \"\";\n\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl &&\n          toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n      cancel();\n    },\n\n    clone({ sortable, rootEl, dispatchSortableEvent, cancel }) {\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent(\"clone\");\n\n          cancel();\n        }\n      }\n    },\n\n    showClone({ cloneNowShown, rootEl, cancel }) {\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"\");\n      });\n\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n\n    hideClone({ sortable, cloneNowHidden, cancel }) {\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"none\");\n        if (this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n\n    dragStartGlobal({ sortable }) {\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach((multiDragElement) => {\n        //@ts-ignore\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n\n    dragStarted({ sortable }) {\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            css(multiDragElement, \"position\", \"absolute\");\n          });\n\n          //@ts-ignore\n          let dragRect = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRect);\n          });\n\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(() => {\n        folding = false;\n        initialFolding = false;\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (this.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n\n    dragOver({ target, completed, cancel }) {\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n\n    revert({ fromSortable, rootEl, sortable, dragRect }) {\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach((multiDragElement) => {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            //@ts-ignore\n            rect: folding ? getRect(multiDragElement) : dragRect,\n          });\n\n          unsetRect(multiDragElement);\n\n          multiDragElement.fromRect = dragRect;\n\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n\n    dragOverCompleted({\n      sortable,\n      isOwner,\n      insertion,\n      activeSortable,\n      parentEl,\n      putSortable,\n    }) {\n      let options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (\n          options.animation &&\n          multiDragElements.length > 1 &&\n          (folding ||\n            (!isOwner && !activeSortable.options.sort && !putSortable))\n        ) {\n          //@ts-ignore\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          let dragRectAbsolute = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            let clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (\n              activeSortable.options.animation &&\n              !clonesHidden &&\n              clonesHiddenBefore\n            ) {\n              multiDragClones.forEach((clone) => {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect,\n                });\n\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n\n    dragOverAnimationCapture({ dragRect, isOwner, activeSortable }) {\n      multiDragElements.forEach((multiDragElement) => {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (\n        activeSortable.options.animation &&\n        !isOwner &&\n        activeSortable.multiDrag.isMultiDrag\n      ) {\n        clonesFromRect = Object.assign({}, dragRect);\n        let dragMatrix = matrix(dragEl, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n\n    dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n\n    drop({\n      originalEvent: evt,\n      rootEl,\n      parentEl,\n      sortable,\n      dispatchSortableEvent,\n      oldIndex,\n      putSortable,\n    }) {\n      let toSortable = putSortable || this.sortable;\n\n      if (!evt) return;\n\n      let options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(\n          dragEl,\n          options.selectedClass,\n          !~multiDragElements.indexOf(dragEl)\n        );\n\n        if (!~multiDragElements.indexOf(dragEl)) {\n          multiDragElements.push(dragEl);\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"select\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (\n            evt.shiftKey &&\n            lastMultiDragSelect &&\n            sortable.el.contains(lastMultiDragSelect)\n          ) {\n            //@ts-ignore\n            let lastIndex = index(lastMultiDragSelect),\n              //@ts-ignore\n              currentIndex = index(dragEl);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              let n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n\n                dispatchEvent({\n                  sortable,\n                  rootEl,\n                  name: \"select\",\n                  targetEl: children[i],\n                  //@ts-ignore\n                  originalEvt: evt,\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"deselect\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if (\n          (parentEl[expando].options.sort || parentEl !== rootEl) &&\n          multiDragElements.length > 1\n        ) {\n          //@ts-ignore\n          let dragRect = getRect(dragEl),\n            multiDragIndex = index(\n              dragEl,\n              \":not(.\" + this.options.selectedClass + \")\"\n            );\n\n          if (!initialFolding && options.animation)\n            dragEl.thisAnimationDuration = null;\n\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl.fromRect = dragRect;\n              multiDragElements.forEach((multiDragElement) => {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl) {\n                  //@ts-ignore\n                  let rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect,\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n\n            multiDragElements.forEach((multiDragElement) => {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(\n                  multiDragElement,\n                  children[multiDragIndex]\n                );\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            //@ts-ignore\n            if (oldIndex === index(dragEl)) {\n              let update = false;\n              multiDragElements.forEach((multiDragElement) => {\n                //@ts-ignore\n                if (\n                  //@ts-ignore\n                  multiDragElement.sortableIndex !== index(multiDragElement)\n                ) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent(\"update\");\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        multiDragClones.forEach((clone) => {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n\n    nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n\n    destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, \"pointerup\", this._deselectMultiDrag);\n      off(document, \"mouseup\", this._deselectMultiDrag);\n      off(document, \"touchend\", this._deselectMultiDrag);\n\n      off(document, \"keydown\", this._checkKeyDown);\n      off(document, \"keyup\", this._checkKeyUp);\n    },\n\n    _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (\n        evt &&\n        closest(evt.target, this.options.draggable, this.sortable.el, false)\n      )\n        return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        let el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: \"deselect\",\n          //@ts-ignore\n          targetEl: el,\n          //@ts-ignore\n          originalEvt: evt,\n        });\n      }\n    },\n\n    _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n\n    _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    },\n  };\n\n  return Object.assign(MultiDrag, {\n    // Static methods & properties\n    pluginName: \"multiDrag\",\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select(el) {\n        let sortable = el.parentNode[expando];\n        if (\n          !sortable ||\n          !sortable.options.multiDrag ||\n          ~multiDragElements.indexOf(el)\n        )\n          return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect(el) {\n        let sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      },\n    },\n    eventProperties() {\n      const oldIndicies = [],\n        newIndicies = [];\n\n      multiDragElements.forEach((multiDragElement) => {\n        oldIndicies.push({\n          multiDragElement,\n          index: multiDragElement.sortableIndex,\n        });\n\n        // multiDragElements will already be sorted if folding\n        let newIndex;\n        if (folding && multiDragElement !== dragEl) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(\n            multiDragElement,\n            \":not(.\" + this.options.selectedClass + \")\"\n          );\n        } else {\n          //@ts-ignore\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement,\n          index: newIndex,\n        });\n      });\n      return {\n        items: [...multiDragElements],\n        clones: [...multiDragClones],\n        oldIndicies,\n        newIndicies,\n      };\n    },\n    optionListeners: {\n      multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === \"ctrl\") {\n          key = \"Control\";\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      },\n    },\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach((multiDragElement, i) => {\n    let target =\n      rootEl.children[\n        multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)\n      ];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach((clone, i) => {\n    let target =\n      rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach((multiDragElement) => {\n    if (multiDragElement === dragEl) return;\n    multiDragElement.parentNode &&\n      multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nexport default MultiDragPlugin;\n","import { getChild } from \"../../../utils/src\";\n\nconst drop = function ({\n  originalEvent,\n  putSortable,\n  dragEl,\n  activeSortable,\n  dispatchSortableEvent,\n  hideGhostForTarget,\n  unhideGhostForTarget,\n}) {\n  if (!originalEvent) return;\n  let toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  let touch =\n    originalEvent.changedTouches && originalEvent.changedTouches.length\n      ? originalEvent.changedTouches[0]\n      : originalEvent;\n  let target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent(\"spill\");\n    this.onSpill({ dragEl, putSortable });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart({ oldDraggableIndex }) {\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill({ dragEl, putSortable }) {\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    let nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop,\n};\n\nObject.assign(Revert, {\n  pluginName: \"revertOnSpill\",\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill({ dragEl, putSortable }) {\n    const parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop,\n};\n\nObject.assign(Remove, {\n  pluginName: \"removeOnSpill\",\n});\n\nexport default [Remove, Revert];\n\nexport { Remove as RemoveOnSpill, Revert as RevertOnSpill };\n","import {\n  on,\n  off,\n  css,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  getParentAutoScrollElement,\n  expando,\n  getRect,\n  getWindowScrollingElement,\n  Edge,\n  IE11OrLess,\n  Safari,\n} from \"../../../utils/src\";\n\nimport Sortable from \"../../../sortable/src/Sortable\";\n\nlet autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt,\n  pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true,\n    };\n\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted({ originalEvent }) {\n      if (this.sortable.nativeDraggable) {\n        on(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, \"pointermove\", this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, \"touchmove\", this._handleFallbackAutoScroll);\n        } else {\n          on(document, \"mousemove\", this._handleFallbackAutoScroll);\n        }\n      }\n    },\n\n    dragOverCompleted({ originalEvent }) {\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n\n    drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        off(document, \"pointermove\", this._handleFallbackAutoScroll);\n        off(document, \"touchmove\", this._handleFallbackAutoScroll);\n        off(document, \"mousemove\", this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n\n    nulling() {\n      touchEvt = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n\n      autoScrolls.length = 0;\n    },\n\n    _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n\n    _handleAutoScroll(evt, fallback) {\n      const x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n\n      touchEvt = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || Edge || IE11OrLess || Safari) {\n        //@ts-ignore\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        let ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (\n          scrolling &&\n          (!pointerElemChangedInterval ||\n            x !== lastAutoScrollX ||\n            y !== lastAutoScrollY)\n        ) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(() => {\n            let newElem = getParentAutoScrollElement(\n              document.elementFromPoint(x, y),\n              true\n            );\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            //@ts-ignore\n            autoScroll(evt, this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (\n          !this.options.bubbleScroll ||\n          getParentAutoScrollElement(elem, true) === getWindowScrollingElement()\n        ) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(\n          //@ts-ignore\n          evt,\n          this.options,\n          getParentAutoScrollElement(elem, false),\n          false\n        );\n      }\n    },\n  };\n\n  return Object.assign(AutoScroll, {\n    pluginName: \"scroll\",\n    initializeByDefault: true,\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nconst autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  const x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n\n  let scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n\n    clearAutoScrolls();\n\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  let layersOut = 0;\n  let currentParent = scrollEl;\n  do {\n    let el = currentParent,\n      //@ts-ignore\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX,\n      canScrollY,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      //@ts-ignore\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" ||\n          elCSS.overflowX === \"scroll\" ||\n          elCSS.overflowX === \"visible\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" ||\n          elCSS.overflowY === \"scroll\" ||\n          elCSS.overflowY === \"visible\");\n    } else {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" || elCSS.overflowX === \"scroll\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" || elCSS.overflowY === \"scroll\");\n    }\n\n    let vx =\n      canScrollX &&\n      //@ts-ignore\n      (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) -\n        //@ts-ignore\n        (Math.abs(left - x) <= sens && !!scrollPosX);\n    let vy =\n      canScrollY &&\n      //@ts-ignore\n      (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) -\n        //@ts-ignore\n        (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (let i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (\n      autoScrolls[layersOut].vx != vx ||\n      autoScrolls[layersOut].vy != vy ||\n      autoScrolls[layersOut].el !== el\n    ) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(\n          function () {\n            // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n            if (isFallback && this.layer === 0) {\n              //@ts-ignore\n              Sortable.active._onTouchMove(touchEvt); // To move ghost if it is positioned absolutely\n            }\n            let scrollOffsetY = autoScrolls[this.layer].vy\n              ? autoScrolls[this.layer].vy * speed\n              : 0;\n            let scrollOffsetX = autoScrolls[this.layer].vx\n              ? autoScrolls[this.layer].vx * speed\n              : 0;\n\n            if (typeof scrollCustomFn === \"function\") {\n              if (\n                scrollCustomFn.call(\n                  //@ts-ignore\n                  Sortable.dragged.parentNode[expando],\n                  scrollOffsetX,\n                  scrollOffsetY,\n                  evt,\n                  touchEvt,\n                  autoScrolls[this.layer].el\n                ) !== \"continue\"\n              ) {\n                return;\n              }\n            }\n\n            scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n          }.bind({ layer: layersOut }),\n          24\n        );\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nexport default AutoScrollPlugin;\n","import Sortable from \"../../sortable/src/Sortable\";\nimport Swap from \"../../plugins/swap/src\";\nimport MultiDrag from \"../../plugins/multi-drag/src\";\nimport { RemoveOnSpill, RevertOnSpill } from \"../../plugins/on-spill/src\";\nimport AutoScroll from \"../../plugins/auto-scroll/src\";\n\n//@ts-ignore\nSortable.mount(new AutoScroll());\nSortable.mount(RemoveOnSpill, RevertOnSpill);\n//@ts-ignore\nSortable.mount(new Swap());\n//@ts-ignore\nSortable.mount(new MultiDrag());\n\nexport default Sortable;\nexport { Sortable };\n"]},"metadata":{},"sourceType":"module"}