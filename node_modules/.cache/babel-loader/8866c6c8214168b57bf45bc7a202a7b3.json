{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/pages/knowledge-base/KnowledgeBaseCategory.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as Icon from 'react-feather';\nimport classnames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport Breadcrumbs from '@Components/breadcrumbs';\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader';\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport '@Styles/base/pages/page-knowledge-base.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KnowledgeBaseCategory = () => {\n  _s();\n\n  const [data, setData] = useState(null),\n        [filteredData, setFilteredData] = useState([]),\n        [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    axios.get('/faq/data/category').then(res => setData(res.data));\n  }, []);\n  const params = useParams();\n\n  const Content = ({\n    item\n  }) => {\n    const IconTag = Icon[item.icon];\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"kb-search-content\",\n      md: \"4\",\n      sm: \"6\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"kb-title\",\n            children: [/*#__PURE__*/_jsxDEV(IconTag, {\n              size: 20,\n              className: classnames('mr-50', {\n                [item.iconColor]: item.iconColor\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.title, \" \", `(${item.questions.length})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-circle mt-2\",\n            children: item.questions.map(listItem => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              tag: Link,\n              to: `/pages/knowledge-base/${params.category}/${listItem.slug}`,\n              className: \"text-body\",\n              children: listItem.question\n            }, listItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderContent = () => {\n    const dataToMap = searchTerm.length ? filteredData : data;\n    return dataToMap.map(item => /*#__PURE__*/_jsxDEV(Content, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }, this));\n  };\n\n  const handleFilter = e => {\n    const value = e.target.value,\n          knowledgeBaseSearchQueryLower = e.target.value.toLowerCase();\n    setSearchTerm(e.target.value);\n    let arr = [];\n\n    if (value.length) {\n      arr = data.filter(item => {\n        return item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) || item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length;\n      });\n    }\n\n    setFilteredData([...arr]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      breadCrumbTitle: \"Knowledge Base\",\n      breadCrumbParent: \"Pages\",\n      breadCrumbParent2: \"Knowledge Base\",\n      breadCrumbActive: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KnowledgeBaseHeader, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), data !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"knowledge-base-category\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"kb-search-content-info match-height\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KnowledgeBaseCategory, \"t7qaaIkUu+fRIqqXVeNgFZAM+Wc=\", false, function () {\n  return [useParams];\n});\n\n_c = KnowledgeBaseCategory;\nexport default KnowledgeBaseCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"KnowledgeBaseCategory\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/pages/knowledge-base/KnowledgeBaseCategory.js"],"names":["Fragment","useState","useEffect","axios","Icon","classnames","Link","useParams","Breadcrumbs","KnowledgeBaseHeader","Row","Col","Card","CardBody","ListGroup","ListGroupItem","KnowledgeBaseCategory","data","setData","filteredData","setFilteredData","searchTerm","setSearchTerm","get","then","res","params","Content","item","IconTag","icon","iconColor","title","questions","length","map","listItem","category","slug","question","id","renderContent","dataToMap","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport * as Icon from 'react-feather'\nimport classnames from 'classnames'\nimport { Link, useParams } from 'react-router-dom'\nimport Breadcrumbs from '@Components/breadcrumbs'\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\n\nimport '@Styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBaseCategory = () => {\n  const [data, setData] = useState(null),\n    [filteredData, setFilteredData] = useState([]),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/category').then(res => setData(res.data))\n  }, [])\n\n  const params = useParams()\n\n  const Content = ({ item }) => {\n    const IconTag = Icon[item.icon]\n    return (\n      <Col className='kb-search-content' md='4' sm='6'>\n        <Card>\n          <CardBody>\n            <h6 className='kb-title'>\n              <IconTag\n                size={20}\n                className={classnames('mr-50', {\n                  [item.iconColor]: item.iconColor\n                })}\n              />\n              <span>\n                {item.title} {`(${item.questions.length})`}\n              </span>\n            </h6>\n            <ListGroup className='list-group-circle mt-2'>\n              {item.questions.map(listItem => (\n                <ListGroupItem\n                  tag={Link}\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\n                  className='text-body'\n                  key={listItem.id}\n                >\n                  {listItem.question}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n\n  const renderContent = () => {\n    const dataToMap = searchTerm.length ? filteredData : data\n\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\n  }\n\n  const handleFilter = e => {\n    const value = e.target.value,\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\n\n    setSearchTerm(e.target.value)\n\n    let arr = []\n\n    if (value.length) {\n      arr = data.filter(item => {\n        return (\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\n        )\n      })\n    }\n\n    setFilteredData([...arr])\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs\n        breadCrumbTitle='Knowledge Base'\n        breadCrumbParent='Pages'\n        breadCrumbParent2='Knowledge Base'\n        breadCrumbActive='Category'\n      />\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\n      {data !== null ? (\n        <div id='knowledge-base-category'>\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBaseCategory\n"]},"metadata":{},"sourceType":"module"}