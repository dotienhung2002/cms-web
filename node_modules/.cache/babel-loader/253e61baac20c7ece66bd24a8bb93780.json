{"ast":null,"code":"// ** Initial State\nconst initialState = {\n  events: [],\n  selectedEvent: {},\n  selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n};\n\nconst calenderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_EVENTS':\n      return { ...state,\n        events: action.events\n      };\n\n    case 'ADD_EVENT':\n      return { ...state\n      };\n\n    case 'REMOVE_EVENT':\n      return { ...state\n      };\n\n    case 'UPDATE_EVENT':\n      return { ...state\n      };\n\n    case 'UPDATE_FILTERS':\n      // ** Updates Filters based on action filter\n      const filterIndex = state.selectedCalendars.findIndex(i => i === action.filter);\n\n      if (state.selectedCalendars.includes(action.filter)) {\n        state.selectedCalendars.splice(filterIndex, 1);\n      } else {\n        state.selectedCalendars.push(action.filter);\n      }\n\n      if (state.selectedCalendars.length === 0) {\n        state.events.length = 0;\n      }\n\n      return { ...state\n      };\n\n    case 'UPDATE_ALL_FILTERS':\n      // ** Updates All Filters based on action value\n      const value = action.value;\n      let selected = [];\n\n      if (value === true) {\n        selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC'];\n      } else {\n        selected = [];\n      }\n\n      return { ...state,\n        selectedCalendars: selected\n      };\n\n    case 'SELECT_EVENT':\n      return { ...state,\n        selectedEvent: action.event\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default calenderReducer;","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/apps/calendar/store/reducer/index.js"],"names":["initialState","events","selectedEvent","selectedCalendars","calenderReducer","state","action","type","filterIndex","findIndex","i","filter","includes","splice","push","length","value","selected","event"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,iBAAiB,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,EAAmC,SAAnC,EAA8C,KAA9C;AAHA,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAsC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAA3B,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;;AACF,SAAK,gBAAL;AACE;AACA,YAAMG,WAAW,GAAGH,KAAK,CAACF,iBAAN,CAAwBM,SAAxB,CAAkCC,CAAC,IAAIA,CAAC,KAAKJ,MAAM,CAACK,MAApD,CAApB;;AACA,UAAIN,KAAK,CAACF,iBAAN,CAAwBS,QAAxB,CAAiCN,MAAM,CAACK,MAAxC,CAAJ,EAAqD;AACnDN,QAAAA,KAAK,CAACF,iBAAN,CAAwBU,MAAxB,CAA+BL,WAA/B,EAA4C,CAA5C;AACD,OAFD,MAEO;AACLH,QAAAA,KAAK,CAACF,iBAAN,CAAwBW,IAAxB,CAA6BR,MAAM,CAACK,MAApC;AACD;;AACD,UAAIN,KAAK,CAACF,iBAAN,CAAwBY,MAAxB,KAAmC,CAAvC,EAA0C;AACxCV,QAAAA,KAAK,CAACJ,MAAN,CAAac,MAAb,GAAsB,CAAtB;AACD;;AACD,aAAO,EAAE,GAAGV;AAAL,OAAP;;AACF,SAAK,oBAAL;AACE;AACA,YAAMW,KAAK,GAAGV,MAAM,CAACU,KAArB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAID,KAAK,KAAK,IAAd,EAAoB;AAClBC,QAAAA,QAAQ,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,EAAmC,SAAnC,EAA8C,KAA9C,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAG,EAAX;AACD;;AACD,aAAO,EAAE,GAAGZ,KAAL;AAAYF,QAAAA,iBAAiB,EAAEc;AAA/B,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYH,QAAAA,aAAa,EAAEI,MAAM,CAACY;AAAlC,OAAP;;AACF;AACE,aAAOb,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,eAAf","sourcesContent":["// ** Initial State\nconst initialState = {\n  events: [],\n  selectedEvent: {},\n  selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n}\n\nconst calenderReducer = (state = initialState, action:any) => {\n  switch (action.type) {\n    case 'FETCH_EVENTS':\n      return { ...state, events: action.events }\n    case 'ADD_EVENT':\n      return { ...state }\n    case 'REMOVE_EVENT':\n      return { ...state }\n    case 'UPDATE_EVENT':\n      return { ...state }\n    case 'UPDATE_FILTERS':\n      // ** Updates Filters based on action filter\n      const filterIndex = state.selectedCalendars.findIndex(i => i === action.filter)\n      if (state.selectedCalendars.includes(action.filter)) {\n        state.selectedCalendars.splice(filterIndex, 1)\n      } else {\n        state.selectedCalendars.push(action.filter)\n      }\n      if (state.selectedCalendars.length === 0) {\n        state.events.length = 0\n      }\n      return { ...state }\n    case 'UPDATE_ALL_FILTERS':\n      // ** Updates All Filters based on action value\n      const value = action.value\n      let selected = []\n      if (value === true) {\n        selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n      } else {\n        selected = []\n      }\n      return { ...state, selectedCalendars: selected }\n    case 'SELECT_EVENT':\n      return { ...state, selectedEvent: action.event }\n    default:\n      return state\n  }\n}\n\nexport default calenderReducer\n"]},"metadata":{},"sourceType":"module"}