{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/ui-elements/cards/statistics/OrdersBarChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TinyChartStats from '@Components/widgets/stats/TinyChartStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OrdersBarChart = function OrdersBarChart(_ref) {\n  _s();\n\n  var warning = _ref.warning;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    axios.get('/card/card-statistics/orders-bar-chart').then(function (res) {\n      return setData(res.data);\n    });\n  }, []);\n  var options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"bar\",\n    options: options,\n    title: data.title,\n    stats: data.statistics,\n    series: data.series\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this) : null;\n};\n\n_s(OrdersBarChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = OrdersBarChart;\nexport default OrdersBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersBarChart\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/ui-elements/cards/statistics/OrdersBarChart.js"],"names":["useEffect","useState","axios","TinyChartStats","OrdersBarChart","warning","data","setData","get","then","res","options","chart","stacked","toolbar","show","grid","padding","left","right","top","bottom","plotOptions","bar","horizontal","columnWidth","startingShape","colors","backgroundBarColors","backgroundBarRadius","legend","dataLabels","enabled","xaxis","labels","axisBorder","axisTicks","yaxis","tooltip","x","title","statistics","series"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACdJ,QAAQ,CAAC,IAAD,CADM;AAAA;AAAA,MAC/BK,IAD+B;AAAA,MACzBC,OADyB;;AAGtCP,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,KAAK,CAACM,GAAN,CAAU,wCAAV,EAAoDC,IAApD,CAAyD,UAAAC,GAAG;AAAA,aAAIH,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAX;AAAA,KAA5D;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMK,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AAFJ,KADO;AAOdC,IAAAA,IAAI,EAAE;AACJD,MAAAA,IAAI,EAAE,KADF;AAEJE,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,KAAK,EAAE,CAFA;AAGPC,QAAAA,GAAG,EAAE,CAAC,EAHC;AAIPC,QAAAA,MAAM,EAAE,CAAC;AAJF;AAFL,KAPQ;AAgBdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACHC,QAAAA,UAAU,EAAE,KADT;AAEHC,QAAAA,WAAW,EAAE,KAFV;AAGHC,QAAAA,aAAa,EAAE,SAHZ;AAIHC,QAAAA,MAAM,EAAE;AACNC,UAAAA,mBAAmB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CADf;AAENC,UAAAA,mBAAmB,EAAE;AAFf;AAJL;AADM,KAhBC;AA2BdC,IAAAA,MAAM,EAAE;AACNf,MAAAA,IAAI,EAAE;AADA,KA3BM;AA8BdgB,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KA9BE;AAiCdL,IAAAA,MAAM,EAAE,CAACtB,OAAD,CAjCM;AAkCd4B,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNnB,QAAAA,IAAI,EAAE;AADA,OADH;AAILoB,MAAAA,UAAU,EAAE;AACVpB,QAAAA,IAAI,EAAE;AADI,OAJP;AAOLqB,MAAAA,SAAS,EAAE;AACTrB,QAAAA,IAAI,EAAE;AADG;AAPN,KAlCO;AA6CdsB,IAAAA,KAAK,EAAE;AACLtB,MAAAA,IAAI,EAAE;AADD,KA7CO;AAgDduB,IAAAA,OAAO,EAAE;AACPC,MAAAA,CAAC,EAAE;AACDxB,QAAAA,IAAI,EAAE;AADL;AADI;AAhDK,GAAhB;AAuDA,SAAOT,IAAI,KAAK,IAAT,gBACL,QAAC,cAAD;AACE,IAAA,MAAM,EAAE,EADV;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,OAAO,EAAEK,OAHX;AAIE,IAAA,KAAK,EAAEL,IAAI,CAACkC,KAJd;AAKE,IAAA,KAAK,EAAElC,IAAI,CAACmC,UALd;AAME,IAAA,MAAM,EAAEnC,IAAI,CAACoC;AANf;AAAA;AAAA;AAAA;AAAA,WADK,GASH,IATJ;AAUD,CAxED;;GAAMtC,c;;KAAAA,c;AA0EN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TinyChartStats from '@Components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n"]},"metadata":{},"sourceType":"module"}