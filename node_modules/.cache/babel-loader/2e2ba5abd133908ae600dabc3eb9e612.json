{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/sidebar/index.js\";\n// ** Third Party Components\nimport { X } from 'react-feather';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props; // ** If user passes custom close btn render that else default close btn\n\n  const renderCloseBtn = closeBtn ? closeBtn : /*#__PURE__*/_jsxDEV(X, {\n    className: \"cursor-pointer\",\n    size: 15,\n    onClick: toggleSidebar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 48\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: toggleSidebar,\n    contentClassName: classnames({\n      [contentClassName]: contentClassName\n    }),\n    modalClassName: classnames('modal-slide-in', {\n      [wrapperClassName]: wrapperClassName\n    }),\n    className: classnames({\n      [className]: className,\n      'sidebar-lg': size === 'lg',\n      'sidebar-sm': size === 'sm'\n    })\n    /*eslint-disable */\n    ,\n    ...(width !== undefined ? {\n      style: {\n        width: String(width) + 'px'\n      }\n    } : {}),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: classnames({\n        [headerClassName]: headerClassName\n      }),\n      toggle: toggleSidebar,\n      close: renderCloseBtn,\n      tag: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: classnames('flex-grow-1', {\n        [bodyClassName]: bodyClassName\n      }),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Sidebar;\nexport default Sidebar; // ** PropTypes\n\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/sidebar/index.js"],"names":["X","Proptypes","classnames","Modal","ModalHeader","ModalBody","Sidebar","props","width","open","toggleSidebar","size","bodyClassName","contentClassName","wrapperClassName","headerClassName","className","title","children","closeBtn","rest","renderCloseBtn","undefined","style","String","propTypes","string","isRequired","bool","func","oneOf","any","oneOfType","number"],"mappings":"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","sourcesContent":["// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames({\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <ModalBody\n        className={classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        })}\n      >\n        {children}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n"]},"metadata":{},"sourceType":"module"}