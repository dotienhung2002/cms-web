{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/pages/account-settings/GeneralTabContent.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport classnames from 'classnames';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button, Media, Label, Row, Col, Input, FormGroup, Alert, Form } from 'reactstrap';\nimport Avatar from '@Views/components/avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeneralTabs = ({\n  data\n}) => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    control,\n    setValue,\n    trigger\n  } = useForm();\n  const [avatar, setAvatar] = useState(data.avatar ? data.avatar : '');\n\n  const onChange = e => {\n    const reader = new FileReader(),\n          files = e.target.files;\n\n    reader.onload = function () {\n      setAvatar(reader.result);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  const onSubmit = data => trigger();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Media, {\n      children: [/*#__PURE__*/_jsxDEV(Media, {\n        className: \"mr-25\",\n        left: true,\n        children: /*#__PURE__*/_jsxDEV(Media, {\n          object: true,\n          className: \"rounded mr-50\",\n          src: avatar,\n          height: \"80\",\n          width: \"80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Media, {\n        className: \"mt-75 ml-1\",\n        body: true,\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          tag: Label,\n          className: \"mr-75\",\n          size: \"sm\",\n          color: \"primary\",\n          children: [\"Upload\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: onChange,\n            hidden: true,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"secondary\",\n          size: \"sm\",\n          outline: true,\n          onClick: () => {\n            setAvatar(' ');\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-2\",\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              defaultValue: data.username,\n              control: control,\n              as: Input,\n              id: \"username\",\n              name: \"username\",\n              placeholder: \"Username\",\n              innerRef: register({\n                required: true\n              }),\n              onChange: e => setValue('username', e.target.value),\n              className: classnames({\n                'is-invalid': errors.username\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              defaultValue: data.fullName,\n              control: control,\n              as: Input,\n              id: \"name\",\n              name: \"fullName\",\n              placeholder: \"Name\",\n              innerRef: register({\n                required: true\n              }),\n              onChange: e => setValue('fullName', e.target.value),\n              className: classnames({\n                'is-invalid': errors.fullName\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              defaultValue: data.email,\n              control: control,\n              as: Input,\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              innerRef: register({\n                required: true\n              }),\n              onChange: e => setValue('email', e.target.value),\n              className: classnames({\n                'is-invalid': errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"company\",\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              defaultValue: data.company,\n              control: control,\n              as: Input,\n              id: \"company\",\n              name: \"company\",\n              placeholder: \"Company Name\",\n              innerRef: register({\n                required: true\n              }),\n              onChange: e => setValue('company', e.target.value),\n              className: classnames({\n                'is-invalid': errors.company\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-75\",\n          sm: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            className: \"mb-50\",\n            color: \"warning\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"alert-heading\",\n              children: \"Your email is not confirmed. Please check your inbox.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-body\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                className: \"alert-link\",\n                onClick: e => e.preventDefault(),\n                children: \"Resend confirmation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n            type: \"submit\",\n            className: \"mr-1\",\n            color: \"primary\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n            color: \"secondary\",\n            outline: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GeneralTabs, \"NJmEp9G9Ar76+mOLsHU9Nfpu+Kg=\", false, function () {\n  return [useForm];\n});\n\n_c = GeneralTabs;\nexport default GeneralTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralTabs\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/pages/account-settings/GeneralTabContent.js"],"names":["Fragment","useState","classnames","useForm","Controller","Button","Media","Label","Row","Col","Input","FormGroup","Alert","Form","Avatar","GeneralTabs","data","register","errors","handleSubmit","control","setValue","trigger","avatar","setAvatar","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","onSubmit","username","required","value","fullName","email","company","preventDefault"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Button, Media, Label, Row, Col, Input, FormGroup, Alert, Form } from 'reactstrap'\nimport Avatar from '@Views/components/avatar'\n\nconst GeneralTabs = ({ data }) => {\n  const { register, errors, handleSubmit, control, setValue, trigger } = useForm()\n\n  const [avatar, setAvatar] = useState(data.avatar ? data.avatar : '')\n\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setAvatar(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  const onSubmit = data => trigger()\n\n  return (\n    <Fragment>\n      <Media>\n        <Media className='mr-25' left>\n          <Media object className='rounded mr-50' src={avatar} height='80' width='80' />\n          \n        </Media>\n       \n        <Media className='mt-75 ml-1' body>\n          <Button.Ripple tag={Label} className='mr-75' size='sm' color='primary'>\n            Upload\n            <Input type='file' onChange={onChange} hidden accept='image/*' />\n          </Button.Ripple>\n          <Button.Ripple color='secondary' size='sm' outline onClick={()=>{\n            setAvatar(' ')\n          }}>\n            Reset\n          </Button.Ripple>\n          {/* <p>Allowed JPG, GIF or PNG. Max size of 800kB</p> */}\n        </Media>\n      </Media>\n      <Form className='mt-2' onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='username'>Username</Label>\n              <Controller\n                defaultValue={data.username}\n                control={control}\n                as={Input}\n                id='username'\n                name='username'\n                placeholder='Username'\n                innerRef={register({ required: true })}\n                onChange={e => setValue('username', e.target.value)}\n                className={classnames({\n                  'is-invalid': errors.username\n                })}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='name'>Name</Label>\n              <Controller\n                defaultValue={data.fullName}\n                control={control}\n                as={Input}\n                id='name'\n                name='fullName'\n                placeholder='Name'\n                innerRef={register({ required: true })}\n                onChange={e => setValue('fullName', e.target.value)}\n                className={classnames({\n                  'is-invalid': errors.fullName\n                })}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='email'>E-mail</Label>\n              <Controller\n                defaultValue={data.email}\n                control={control}\n                as={Input}\n                type='email'\n                id='email'\n                name='email'\n                placeholder='Email'\n                innerRef={register({ required: true })}\n                onChange={e => setValue('email', e.target.value)}\n                className={classnames({\n                  'is-invalid': errors.email\n                })}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='company'>Company</Label>\n              <Controller\n                defaultValue={data.company}\n                control={control}\n                as={Input}\n                id='company'\n                name='company'\n                placeholder='Company Name'\n                innerRef={register({ required: true })}\n                onChange={e => setValue('company', e.target.value)}\n                className={classnames({\n                  'is-invalid': errors.company\n                })}\n              />\n            </FormGroup>\n          </Col>\n          <Col className='mt-75' sm='12'>\n            <Alert className='mb-50' color='warning'>\n              <h4 className='alert-heading'>Your email is not confirmed. Please check your inbox.</h4>\n              <div className='alert-body'>\n                <a href='/' className='alert-link' onClick={e => e.preventDefault()}>\n                  Resend confirmation\n                </a>\n              </div>\n            </Alert>\n          </Col>\n          <Col className='mt-2' sm='12'>\n            <Button.Ripple type='submit' className='mr-1' color='primary'>\n              Save changes\n            </Button.Ripple>\n            <Button.Ripple color='secondary' outline>\n              Cancel\n            </Button.Ripple>\n          </Col>\n        </Row>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default GeneralTabs\n"]},"metadata":{},"sourceType":"module"}