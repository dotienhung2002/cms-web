{"ast":null,"code":"// ** React Imports\nimport{useContext}from'react';import{AbilityContext}from'@src/utility/context/Can';/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */export var resolveVerticalNavMenuItemComponent=function resolveVerticalNavMenuItemComponent(item){if(item.header)return'VerticalNavMenuSectionHeader';if(item.children)return'VerticalNavMenuGroup';return'VerticalNavMenuLink';};/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */export var resolveHorizontalNavMenuItemComponent=function resolveHorizontalNavMenuItemComponent(item){if(item.children)return'HorizontalNavMenuGroup';return'HorizontalNavMenuLink';};/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */ // export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\nexport var isNavLinkActive=function isNavLinkActive(link,currentURL,routerProps){return currentURL===link||routerProps&&routerProps.meta&&routerProps.meta.navLink&&routerProps.meta.navLink===link;// return currentURL === link\n};/**\n * Check if nav group is\n * @param {Array} children Group children\n */ // export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport var isNavGroupActive=function isNavGroupActive(children,currentURL,routerProps){return children.some(function(child){// If child have children => It's group => Go deeper(recursive)\nif(child.children){return isNavGroupActive(child.children,currentURL,routerProps);}// else it's link => Check for matched Route\nreturn isNavLinkActive(child.navLink,currentURL,routerProps);});};/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */ // export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\nexport var search=function search(navigation,currentURL,routerProps){var result;navigation.some(function(child){var children;// If child have children => It's group => Go deeper(recursive)\nif(child.children&&(children=search(child.children,currentURL,routerProps))){return result={id:child.id,children:children};}// else it's link => Check for matched Route\nif(isNavLinkActive(child.navLink,currentURL,routerProps)){return result={id:child.id};}});return result;};/**\n * Loop through nested object\n * @param {object} obj nested object\n */export var getAllParents=function getAllParents(obj,match){var res=[];var recurse=function recurse(obj,current){for(var key in obj){var value=obj[key];if(value!==undefined){if(value&&typeof value==='object'){recurse(value,key);}else{if(key===match){res.push(value);}}}}};recurse(obj);return res;};export var canViewMenuGroup=function canViewMenuGroup(item){// const ability = useContext(AbilityContext)\n// // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n// const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n// // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n// // ** Else check for ability using provided resource and action along with checking if has any visible child\n// if (!(item.action && item.resource)) {\n//   return hasAnyVisibleChild\n// }\n// return ability.can(item.action, item.resource) && hasAnyVisibleChild\nreturn true;};export var canViewMenuItem=function canViewMenuItem(item){// const ability = useContext(AbilityContext)\n// return ability.can(item.action, item.resource)\nvar userData=JSON.parse(localStorage.getItem('userData')||\"{}\");var permissions=userData.permissions;var arrayPers=!permissions||permissions===''?[]:permissions.split(',');var permissionsCheck=item.permissions||[];var check=true;// permissionsCheck.forEach(element => {\n//   const index = arrayPers.findIndex(el2 => el2 === element)\n//   if (index !== -1) {\n//     check = true\n//   }\n// });\nreturn check;};","map":{"version":3,"names":["useContext","AbilityContext","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","isNavLinkActive","link","currentURL","routerProps","meta","navLink","isNavGroupActive","some","child","search","navigation","result","id","getAllParents","obj","match","res","recurse","current","key","value","undefined","push","canViewMenuGroup","canViewMenuItem","userData","JSON","parse","localStorage","getItem","permissions","arrayPers","split","permissionsCheck","check"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/layouts/utils.js"],"sourcesContent":["// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  // const ability = useContext(AbilityContext)\n  // // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  // const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // // ** Else check for ability using provided resource and action along with checking if has any visible child\n  // if (!(item.action && item.resource)) {\n  //   return hasAnyVisibleChild\n  // }\n  // return ability.can(item.action, item.resource) && hasAnyVisibleChild\n  return true\n}\n\nexport const canViewMenuItem = item => {\n  // const ability = useContext(AbilityContext)\n  // return ability.can(item.action, item.resource)\n  const userData = JSON.parse(localStorage.getItem('userData') || `{}`)\n  const { permissions } = userData\n\n  const arrayPers = !permissions || permissions === '' ? [] : permissions.split(',')\n  const permissionsCheck = item.permissions || []\n  let check = true\n  // permissionsCheck.forEach(element => {\n  //   const index = arrayPers.findIndex(el2 => el2 === element)\n  //   if (index !== -1) {\n  //     check = true\n  //   }\n  // });\n\n  return check\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}