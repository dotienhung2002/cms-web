{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/sweet-alert/SweetAlertOptions.js\",\n    _this = this;\n\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport alertImg from '@Assets/images/slider/04.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MySwal = withReactContent(Swal);\n_c = MySwal;\n\nvar SweetAlertOptions = function SweetAlertOptions() {\n  var handleImageAlert = function handleImageAlert() {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n\n  var handleTimeoutAlert = function handleTimeoutAlert() {\n    var timerInterval;\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <strong></strong> seconds.',\n      timer: 2000,\n      onBeforeOpen: function onBeforeOpen() {\n        Swal.showLoading();\n        timerInterval = setInterval(function () {\n          Swal.getContent().querySelector('strong').textContent = Swal.getTimerLeft();\n        }, 100);\n      },\n      onClose: function onClose() {\n        clearInterval(timerInterval);\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer');\n      }\n    });\n  };\n\n  var handleClickOutside = function handleClickOutside() {\n    return MySwal.fire({\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n\n  var handleQuestions = function handleQuestions() {\n    return MySwal.mixin({\n      input: 'text',\n      confirmButtonText: 'Next &rarr;',\n      showCancelButton: true,\n      progressSteps: ['1', '2', '3'],\n      buttonsStyling: false,\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      }\n    }).queue(['Question 1', 'Question 2', 'Question 3']).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: 'All done!',\n          html: \"Your answers: <pre><code>\".concat(JSON.stringify(result.value), \"</code></pre>\"),\n          confirmButtonText: 'Lovely!',\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        });\n      }\n    });\n  };\n\n  var handleAjax = function handleAjax() {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm: function preConfirm(login) {\n        return fetch(\"//api.github.com/users/\".concat(login)).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          return response.json();\n        }).catch(function (error) {\n          MySwal.showValidationMessage(\"Request failed:  \".concat(error));\n        });\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: \"\".concat(result.value.login, \"'s avatar\"),\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-inline-spacing\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleImageAlert,\n          outline: true,\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleTimeoutAlert,\n          outline: true,\n          children: \"Timeout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleClickOutside,\n          outline: true,\n          children: \"Click Outside\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleQuestions,\n          outline: true,\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAjax,\n          outline: true,\n          children: \"Ajax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = SweetAlertOptions;\nexport default SweetAlertOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"SweetAlertOptions\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/sweet-alert/SweetAlertOptions.js"],"names":["Card","CardHeader","CardBody","CardTitle","Button","Swal","withReactContent","alertImg","MySwal","SweetAlertOptions","handleImageAlert","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButton","buttonsStyling","handleTimeoutAlert","timerInterval","html","timer","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","console","log","handleClickOutside","allowOutsideClick","handleQuestions","mixin","input","confirmButtonText","showCancelButton","progressSteps","cancelButton","queue","value","JSON","stringify","handleAjax","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","avatar_url"],"mappings":"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","sourcesContent":["import { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport alertImg from '@Assets/images/slider/04.jpg'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTimeoutAlert = () => {\n    let timerInterval\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <strong></strong> seconds.',\n      timer: 2000,\n      onBeforeOpen() {\n        Swal.showLoading()\n        timerInterval = setInterval(function () {\n          Swal.getContent().querySelector('strong').textContent = Swal.getTimerLeft()\n        }, 100)\n      },\n      onClose() {\n        clearInterval(timerInterval)\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer')\n      }\n    })\n  }\n\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleQuestions = () => {\n    return MySwal.mixin({\n      input: 'text',\n      confirmButtonText: 'Next &rarr;',\n      showCancelButton: true,\n      progressSteps: ['1', '2', '3'],\n      buttonsStyling: false,\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      }\n    })\n      .queue(['Question 1', 'Question 2', 'Question 3'])\n      .then(function (result) {\n        if (result.value) {\n          MySwal.fire({\n            title: 'All done!',\n            html: `Your answers: <pre><code>${JSON.stringify(result.value)}</code></pre>`,\n            confirmButtonText: 'Lovely!',\n            customClass: { confirmButton: 'btn btn-primary' }\n          })\n        }\n      })\n  }\n\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm(login) {\n        return fetch(`//api.github.com/users/${login}`)\n          .then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.statusText)\n            }\n            return response.json()\n          })\n          .catch(function (error) {\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\n          })\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleImageAlert} outline>\n            Image\n          </Button>\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\n            Timeout\n          </Button>\n          <Button color='primary' onClick={handleClickOutside} outline>\n            Click Outside\n          </Button>\n          <Button color='primary' onClick={handleQuestions} outline>\n            Question\n          </Button>\n          <Button color='primary' onClick={handleAjax} outline>\n            Ajax\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertOptions\n"]},"metadata":{},"sourceType":"module"}