{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/popovers/PopoverControlled.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopoverControlled = () => {\n  _s();\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      id: \"controlledPopover\",\n      children: \"Controlled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      placement: \"top\",\n      target: \"controlledPopover\",\n      isOpen: popoverOpen,\n      toggle: () => setPopoverOpen(!popoverOpen),\n      children: [/*#__PURE__*/_jsxDEV(PopoverHeader, {\n        children: \"Controlled Popover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n        children: \"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopoverControlled, \"r9jPo8Itcl3CH1RRAlp5f8wU2pw=\");\n\n_c = PopoverControlled;\nexport default PopoverControlled;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverControlled\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/components/popovers/PopoverControlled.js"],"names":["Fragment","useState","Button","Popover","PopoverHeader","PopoverBody","PopoverControlled","popoverOpen","setPopoverOpen"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,SAArB;AAA+B,MAAA,OAAO,MAAtC;AAAuC,MAAA,EAAE,EAAC,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,MAAM,EAAC,mBAFT;AAGE,MAAA,MAAM,EAAEM,WAHV;AAIE,MAAA,MAAM,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAJ9B;AAAA,8BAME,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArBD;;GAAMD,iB;;KAAAA,iB;AAsBN,eAAeA,iBAAf","sourcesContent":["import { Fragment, useState } from 'react'\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap'\n\nconst PopoverControlled = () => {\n  const [popoverOpen, setPopoverOpen] = useState(false)\n\n  return (\n    <Fragment>\n      <Button.Ripple color='primary' outline id='controlledPopover'>\n        Controlled\n      </Button.Ripple>\n      <Popover\n        placement='top'\n        target='controlledPopover'\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(!popoverOpen)}\n      >\n        <PopoverHeader>Controlled Popover</PopoverHeader>\n        <PopoverBody>\n          Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\n        </PopoverBody>\n      </Popover>\n    </Fragment>\n  )\n}\nexport default PopoverControlled\n"]},"metadata":{},"sourceType":"module"}