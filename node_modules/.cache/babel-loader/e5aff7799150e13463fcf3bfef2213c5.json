{"ast":null,"code":"import _objectSpread from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/app-collapse/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState } from 'react'; // ** Third Party Components\n\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ChevronUp } from 'react-feather';\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppCollapse = function AppCollapse(props) {\n  _s();\n\n  var _classnames2;\n\n  // ** Props\n  var data = props.data,\n      type = props.type,\n      accordion = props.accordion,\n      active = props.active,\n      toggle = props.toggle,\n      titleKey = props.titleKey,\n      contentKey = props.contentKey,\n      className = props.className;\n  /**\n   ** If accordion is true then return only one active index else return an Array\n   */\n\n  var defaultActive = function defaultActive() {\n    if (accordion) {\n      return active;\n    } else {\n      return _toConsumableArray(active);\n    }\n  }; // ** State\n\n\n  var _useState = useState(defaultActive()),\n      _useState2 = _slicedToArray(_useState, 2),\n      openCollapse = _useState2[0],\n      setOpenCollapse = _useState2[1]; // ** Function to handle Collapse Toggle\n\n\n  var handleCollapseToggle = function handleCollapseToggle(id) {\n    if (accordion) {\n      if (id === openCollapse) {\n        setOpenCollapse(null);\n      } else {\n        setOpenCollapse(id);\n      }\n    } else {\n      var arr = openCollapse,\n          index = arr.indexOf(id);\n\n      if (arr.includes(id)) {\n        arr.splice(index, 1);\n        setOpenCollapse(_toConsumableArray(arr));\n      } else {\n        arr.push(id);\n        setOpenCollapse(_toConsumableArray(arr));\n      }\n    }\n  }; // ** Function to render collapse\n\n\n  var renderData = function renderData() {\n    return data.map(function (item, index) {\n      var _classnames;\n\n      var title = titleKey ? item[titleKey] : item.title,\n          content = contentKey ? item[contentKey] : item.content;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classnames('app-collapse', (_classnames = {}, _defineProperty(_classnames, item.className, item.className), _defineProperty(_classnames, \"open\", accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'), _classnames)),\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, _objectSpread(_objectSpread({\n          className: classnames('align-items-center', {\n            collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\n          })\n          /*eslint-disable */\n\n        }, toggle === 'hover' ? {\n          onMouseEnter: function onMouseEnter() {\n            return handleCollapseToggle(index);\n          }\n        } : {\n          onClick: function onClick() {\n            return handleCollapseToggle(index);\n          }\n        }), {}, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"collapse-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, _this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: accordion ? openCollapse === index : openCollapse.includes(index),\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('collapse-icon', (_classnames2 = {}, _defineProperty(_classnames2, className, className), _defineProperty(_classnames2, 'collapse-default', !type), _defineProperty(_classnames2, 'collapse-shadow', type === 'shadow'), _defineProperty(_classnames2, 'collapse-border', type === 'border'), _defineProperty(_classnames2, 'collapse-margin', type === 'margin'), _classnames2)),\n    children: renderData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AppCollapse, \"Ig9QjOMNVE3rbJEt3EMD9NYprrM=\");\n\n_c = AppCollapse;\nexport default AppCollapse; // ** PropTypes\n\nAppCollapse.propTypes = {\n  data: Proptypes.array.isRequired,\n  accordion: Proptypes.bool,\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\n  titleKey: Proptypes.string,\n  contentKey: Proptypes.string,\n  className: Proptypes.string\n}; // ** Default Props\n\nAppCollapse.defaultProps = {\n  active: [],\n  toggle: 'click'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppCollapse\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@core/components/app-collapse/index.js"],"names":["useState","Proptypes","classnames","ChevronUp","Collapse","Card","CardHeader","CardBody","CardTitle","AppCollapse","props","data","type","accordion","active","toggle","titleKey","contentKey","className","defaultActive","openCollapse","setOpenCollapse","handleCollapseToggle","id","arr","index","indexOf","includes","splice","push","renderData","map","item","title","content","collapsed","onMouseEnter","onClick","propTypes","array","isRequired","bool","oneOf","oneOfType","number","string","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { ChevronUp } from 'react-feather'\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\n\nconst AppCollapse = props => {\n  // ** Props\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\n\n  /**\n   ** If accordion is true then return only one active index else return an Array\n   */\n  const defaultActive = () => {\n    if (accordion) {\n      return active\n    } else {\n      return [...active]\n    }\n  }\n\n  // ** State\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\n\n  // ** Function to handle Collapse Toggle\n  const handleCollapseToggle = id => {\n    if (accordion) {\n      if (id === openCollapse) {\n        setOpenCollapse(null)\n      } else {\n        setOpenCollapse(id)\n      }\n    } else {\n      const arr = openCollapse,\n        index = arr.indexOf(id)\n      if (arr.includes(id)) {\n        arr.splice(index, 1)\n        setOpenCollapse([...arr])\n      } else {\n        arr.push(id)\n        setOpenCollapse([...arr])\n      }\n    }\n  }\n\n  // ** Function to render collapse\n  const renderData = () => {\n    return data.map((item, index) => {\n      const title = titleKey ? item[titleKey] : item.title,\n        content = contentKey ? item[contentKey] : item.content\n\n      return (\n        <Card\n          className={classnames('app-collapse', {\n            [item.className]: item.className,\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\n          })}\n          key={index}\n        >\n          <CardHeader\n            className={classnames('align-items-center', {\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\n            })}\n            /*eslint-disable */\n            {...(toggle === 'hover'\n              ? {\n                  onMouseEnter: () => handleCollapseToggle(index)\n                }\n              : {\n                  onClick: () => handleCollapseToggle(index)\n                })}\n            /*eslint-enable */\n          >\n            <CardTitle className='collapse-title'>{title}</CardTitle>\n            <ChevronUp size={14} />\n          </CardHeader>\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\n            <CardBody>{content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames('collapse-icon', {\n        [className]: className,\n        'collapse-default': !type,\n        'collapse-shadow': type === 'shadow',\n        'collapse-border': type === 'border',\n        'collapse-margin': type === 'margin'\n      })}\n    >\n      {renderData()}\n    </div>\n  )\n}\n\nexport default AppCollapse\n\n// ** PropTypes\nAppCollapse.propTypes = {\n  data: Proptypes.array.isRequired,\n  accordion: Proptypes.bool,\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\n  titleKey: Proptypes.string,\n  contentKey: Proptypes.string,\n  className: Proptypes.string\n}\n\n// ** Default Props\nAppCollapse.defaultProps = {\n  active: [],\n  toggle: 'click'\n}\n"]},"metadata":{},"sourceType":"module"}