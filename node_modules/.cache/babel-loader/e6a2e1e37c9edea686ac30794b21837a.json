{"ast":null,"code":"import _slicedToArray from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import NumberInput from'@Components/number-input';import{Card,CardHeader,CardTitle,CardBody,CardText,Label,Alert}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NumberInputBasic=function NumberInputBasic(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Basic\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardText,{children:\"Number Input is used for incrementing or decrementing a numerical value within a range of a minimum and maximum number, with optional step value.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(Label,{for:\"basic-number-input\",children:\"Number Input\"}),/*#__PURE__*/_jsx(NumberInput,{id:\"basic-number-input\",value:count,onChange:function onChange(count){return setCount(count);}}),/*#__PURE__*/_jsxs(CardText,{className:\"mt-1\",children:[\"Value: \",count]}),/*#__PURE__*/_jsx(Alert,{className:\"mb-0\",color:\"success\",children:/*#__PURE__*/_jsx(\"div\",{className:\"alert-body\",children:/*#__PURE__*/_jsx(\"span\",{children:\"The ArrowUp and ArrowDown keys can be used to increment or decrement the value. \"})})})]})]})]});};export default NumberInputBasic;","map":{"version":3,"names":["useState","NumberInput","Card","CardHeader","CardTitle","CardBody","CardText","Label","Alert","NumberInputBasic","count","setCount"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/forms/form-elements/number-input/NumberInputBasic.js"],"sourcesContent":["import { useState } from 'react'\nimport NumberInput from '@Components/number-input'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Label, Alert } from 'reactstrap'\n\nconst NumberInputBasic = () => {\n  const [count, setCount] = useState(0)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Number Input is used for incrementing or decrementing a numerical value within a range of a minimum and\n          maximum number, with optional step value.\n        </CardText>\n\n        <div className='mt-2'>\n          <Label for='basic-number-input'>Number Input</Label>\n          <NumberInput id='basic-number-input' value={count} onChange={count => setCount(count)} />\n          <CardText className='mt-1'>Value: {count}</CardText>\n          <Alert className='mb-0' color='success'>\n            <div className='alert-body'>\n              <span>The ArrowUp and ArrowDown keys can be used to increment or decrement the value. </span>\n            </div>\n          </Alert>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputBasic\n"],"mappings":"qKAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,YAAW,KAAM,0BAA0B,CAClD,OAASC,IAAI,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,KAAK,KAAQ,YAAY,yFAE1F,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC7B,cAA0BT,QAAQ,CAAC,CAAC,CAAC,wCAA9BU,KAAK,eAAEC,QAAQ,eAEtB,mBACE,MAAC,IAAI,yBACH,KAAC,UAAU,wBACT,KAAC,SAAS,EAAC,GAAG,CAAC,IAAI,mBAAkB,EAC1B,cACb,MAAC,QAAQ,yBACP,KAAC,QAAQ,gKAGE,cAEX,aAAK,SAAS,CAAC,MAAM,wBACnB,KAAC,KAAK,EAAC,GAAG,CAAC,oBAAoB,0BAAqB,cACpD,KAAC,WAAW,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAED,KAAM,CAAC,QAAQ,CAAE,kBAAAA,KAAK,QAAIC,SAAQ,CAACD,KAAK,CAAC,EAAC,EAAG,cACzF,MAAC,QAAQ,EAAC,SAAS,CAAC,MAAM,qBAASA,KAAK,GAAY,cACpD,KAAC,KAAK,EAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,uBACrC,YAAK,SAAS,CAAC,YAAY,uBACzB,0GAA6F,EACzF,EACA,GACJ,GACG,GACN,CAEX,CAAC,CACD,cAAeD,iBAAgB"},"metadata":{},"sourceType":"module"}