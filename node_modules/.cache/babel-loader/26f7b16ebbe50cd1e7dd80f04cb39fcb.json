{"ast":null,"code":"import _objectSpread from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// ** Initial State\nvar initialState = {\n  suggestions: [],\n  bookmarks: [],\n  query: ''\n};\nvar navbarReducer = function navbarReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'HANDLE_SEARCH_QUERY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        query: action.val\n      });\n    case 'GET_BOOKMARKS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestions: action.data,\n        bookmarks: action.bookmarks\n      });\n    case 'UPDATE_BOOKMARKED':\n      var objectToUpdate;\n\n      // ** find & update object\n      state.suggestions.find(function (item) {\n        if (item.id === action.id) {\n          item.isBookmarked = !item.isBookmarked;\n          // objectToUpdate = item\n        }\n      });\n\n      // ** Get index to add or remove bookmark from array\n      var bookmarkIndex = state.bookmarks.findIndex(function (x) {\n        return x.id === action.id;\n      });\n      if (bookmarkIndex === -1) {\n        // state.bookmarks.push(objectToUpdate)\n      } else {\n        state.bookmarks.splice(bookmarkIndex, 1);\n      }\n      return _objectSpread({}, state);\n    default:\n      return state;\n  }\n};\nexport default navbarReducer;","map":{"version":3,"names":["initialState","suggestions","bookmarks","query","navbarReducer","state","action","type","val","data","objectToUpdate","find","item","id","isBookmarked","bookmarkIndex","findIndex","x","splice"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/redux/reducers/navbar/index.js"],"sourcesContent":["// ** Initial State\nconst initialState = {\n  suggestions: [],\n  bookmarks: [],\n  query: ''\n}\n\nconst navbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'HANDLE_SEARCH_QUERY':\n      return { ...state, query: action.val }\n    case 'GET_BOOKMARKS':\n      return { ...state, suggestions: action.data, bookmarks: action.bookmarks }\n    case 'UPDATE_BOOKMARKED':\n      let objectToUpdate;\n\n      // ** find & update object\n      state.suggestions.find((item) => {\n        if (item.id === action.id) {\n          item.isBookmarked = !item.isBookmarked\n          // objectToUpdate = item\n        }\n      })\n\n      // ** Get index to add or remove bookmark from array\n      const bookmarkIndex = state.bookmarks.findIndex((x) => x.id === action.id)\n\n      if (bookmarkIndex === -1) {\n        // state.bookmarks.push(objectToUpdate)\n      } else {\n        state.bookmarks.splice(bookmarkIndex, 1)\n      }\n\n      return { ...state }\n    default:\n      return state\n  }\n}\n\nexport default navbarReducer\n"],"mappings":";AAAA;AACA,IAAMA,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAqC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,qBAAqB;MACxB,uCAAYF,KAAK;QAAEF,KAAK,EAAEG,MAAM,CAACE;MAAG;IACtC,KAAK,eAAe;MAClB,uCAAYH,KAAK;QAAEJ,WAAW,EAAEK,MAAM,CAACG,IAAI;QAAEP,SAAS,EAAEI,MAAM,CAACJ;MAAS;IAC1E,KAAK,mBAAmB;MACtB,IAAIQ,cAAc;;MAElB;MACAL,KAAK,CAACJ,WAAW,CAACU,IAAI,CAAC,UAACC,IAAI,EAAK;QAC/B,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACO,EAAE,EAAE;UACzBD,IAAI,CAACE,YAAY,GAAG,CAACF,IAAI,CAACE,YAAY;UACtC;QACF;MACF,CAAC,CAAC;;MAEF;MACA,IAAMC,aAAa,GAAGV,KAAK,CAACH,SAAS,CAACc,SAAS,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACJ,EAAE,KAAKP,MAAM,CAACO,EAAE;MAAA,EAAC;MAE1E,IAAIE,aAAa,KAAK,CAAC,CAAC,EAAE;QACxB;MACF,CAAC,MAAM;QACLV,KAAK,CAACH,SAAS,CAACgB,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;MAC1C;MAEA,yBAAYV,KAAK;IACnB;MACE,OAAOA,KAAK;EAAA;AAElB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}