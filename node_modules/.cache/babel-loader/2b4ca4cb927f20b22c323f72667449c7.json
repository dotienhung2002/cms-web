{"ast":null,"code":"import _slicedToArray from\"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{ReactSortable}from'react-sortablejs';import{Card,CardHeader,CardTitle,CardBody,CardText,Row,Col,Badge}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DndClone=function DndClone(){var source1=[{text:'Youtube',color:'light-secondary'},{text:'Facebook',color:'light-primary'},{text:'Google',color:'light-success'},{text:'Instagram',color:'light-danger'},{text:'Twitter',color:'light-info'},{text:'Discord',color:'light-warning'}];var source2=[{text:'Github',color:'light-secondary'},{text:'Gitlab',color:'light-primary'},{text:'Slack',color:'light-success'},{text:'Pinterest',color:'light-danger'},{text:'Tinder',color:'light-info'},{text:'Amazon',color:'light-warning'}];var _useState=useState(source1),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var _useState3=useState(source2),_useState4=_slicedToArray(_useState3,2),list2=_useState4[0],setList2=_useState4[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Clone List\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Add \",/*#__PURE__*/_jsx(\"code\",{children:\"pull:clone\"}),\" with your group prop to clone items.\"]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:\"6\",sm:\"12\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"my-1\",children:\"Badge Source 1\"}),/*#__PURE__*/_jsx(ReactSortable,{className:\"demo-inline-spacing sortable\",group:{name:'shared-badge-group',pull:'clone'},list:list,setList:setList,children:list.map(function(item){return/*#__PURE__*/_jsx(Badge,{className:\"draggable\",color:item.color,pill:true,children:item.text},item.text);})})]}),/*#__PURE__*/_jsxs(Col,{md:\"6\",sm:\"12\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"my-1\",children:\"Badge Source 2\"}),/*#__PURE__*/_jsx(ReactSortable,{className:\"demo-inline-spacing sortable\",group:{name:'shared-badge-group',pull:'clone'},list:list2,setList:setList2,children:list2.map(function(item){return/*#__PURE__*/_jsx(Badge,{className:\"draggable\",color:item.color,pill:true,children:item.text},item.text);})})]})]})]})]});};export default DndClone;","map":{"version":3,"names":["useState","ReactSortable","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/drag-and-drop/DndClone.js"],"sourcesContent":["import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\n\nconst DndClone = () => {\n  const source1 = [\n    {\n      text: 'Youtube',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Facebook',\n      color: 'light-primary'\n    },\n    {\n      text: 'Google',\n      color: 'light-success'\n    },\n    {\n      text: 'Instagram',\n      color: 'light-danger'\n    },\n    {\n      text: 'Twitter',\n      color: 'light-info'\n    },\n    {\n      text: 'Discord',\n      color: 'light-warning'\n    }\n  ]\n  const source2 = [\n    {\n      text: 'Github',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Gitlab',\n      color: 'light-primary'\n    },\n    {\n      text: 'Slack',\n      color: 'light-success'\n    },\n    {\n      text: 'Pinterest',\n      color: 'light-danger'\n    },\n    {\n      text: 'Tinder',\n      color: 'light-info'\n    },\n    {\n      text: 'Amazon',\n      color: 'light-warning'\n    }\n  ]\n\n  const [list, setList] = useState(source1)\n  const [list2, setList2] = useState(source2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Clone List</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add <code>pull:clone</code> with your group prop to clone items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 1</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list}\n              setList={setList}\n            >\n              {list.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 2</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list2}\n              setList={setList2}\n            >\n              {list2.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndClone\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}