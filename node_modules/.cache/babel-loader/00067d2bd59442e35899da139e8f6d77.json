{"ast":null,"code":"import _slicedToArray from \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\n//** React Imports\nimport { useState, useEffect } from 'react';\n\n// ** Configs\nimport themeConfig from '@Configs/themeConfig';\nexport var useLayout = function useLayout() {\n  _s();\n  // ** States\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastLayout = _useState2[0],\n    setLastLayout = _useState2[1];\n  var _useState3 = useState(function () {\n      try {\n        return themeConfig.layout.type;\n      } catch (error) {\n        // ** If error return initialValue\n        console.log(error);\n        return themeConfig.layout.type;\n      }\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    layout = _useState4[0],\n    setLayout = _useState4[1];\n\n  // ** Return a wrapped version of useState's setter function\n  var setValue = function setValue(value) {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      var valueToStore = value instanceof Function ? value(layout) : value;\n\n      // ** Set state\n      setLayout(valueToStore);\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  var handleLayout = function handleLayout() {\n    // ** If layout is horizontal & screen size is equals to or below 1200\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\n      setLayout('vertical');\n      setLastLayout('horizontal');\n    }\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n      setLayout('horizontal');\n    }\n  };\n\n  // ** ComponentDidMount\n  useEffect(function () {\n    handleLayout();\n  }, []);\n  useEffect(function () {\n    // ** Window Resize Event\n    window.addEventListener('resize', handleLayout);\n  }, [layout, lastLayout]);\n  return [layout, setValue];\n};\n_s(useLayout, \"HOttOKKDUSBB5RyzLefw5Pamemw=\");","map":{"version":3,"names":["useState","useEffect","themeConfig","useLayout","lastLayout","setLastLayout","layout","type","error","console","log","setLayout","setValue","value","valueToStore","Function","handleLayout","window","innerWidth","addEventListener"],"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/utility/hooks/useLayout.js"],"sourcesContent":["//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@Configs/themeConfig'\n\nexport const useLayout = () => {\n  // ** States\n  const [lastLayout, setLastLayout] = useState(null)\n  const [layout, setLayout] = useState(() => {\n    try {\n      return themeConfig.layout.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(layout) : value\n\n      // ** Set state\n      setLayout(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  const handleLayout = () => {\n    // ** If layout is horizontal & screen size is equals to or below 1200\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\n      setLayout('vertical')\n      setLastLayout('horizontal')\n    }\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n      setLayout('horizontal')\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    handleLayout()\n  }, [])\n\n  useEffect(() => {\n    // ** Window Resize Event\n    window.addEventListener('resize', handleLayout)\n  }, [layout, lastLayout])\n\n  return [layout, setValue]\n}\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EAAA;EAC7B;EACA,gBAAoCH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA3CI,UAAU;IAAEC,aAAa;EAChC,iBAA4BL,QAAQ,CAAC,YAAM;MACzC,IAAI;QACF,OAAOE,WAAW,CAACI,MAAM,CAACC,IAAI;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,OAAON,WAAW,CAACI,MAAM,CAACC,IAAI;MAChC;IACF,CAAC,CAAC;IAAA;IARKD,MAAM;IAAEK,SAAS;;EAUxB;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,KAAK,EAAI;IACxB,IAAI;MACF;MACA,IAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACP,MAAM,CAAC,GAAGO,KAAK;;MAEtE;MACAF,SAAS,CAACG,YAAY,CAAC;IACzB,CAAC,CAAC,OAAON,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,IAAMQ,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB;IACA,IAAIV,MAAM,KAAK,YAAY,IAAIW,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;MACxDP,SAAS,CAAC,UAAU,CAAC;MACrBN,aAAa,CAAC,YAAY,CAAC;IAC7B;IACA;IACA,IAAID,UAAU,KAAK,YAAY,IAAIa,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;MAC5DP,SAAS,CAAC,YAAY,CAAC;IACzB;EACF,CAAC;;EAED;EACAV,SAAS,CAAC,YAAM;IACde,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,YAAM;IACd;IACAgB,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACjD,CAAC,EAAE,CAACV,MAAM,EAAEF,UAAU,CAAC,CAAC;EAExB,OAAO,CAACE,MAAM,EAAEM,QAAQ,CAAC;AAC3B,CAAC;AAAA,GAlDYT,SAAS"},"metadata":{},"sourceType":"module"}