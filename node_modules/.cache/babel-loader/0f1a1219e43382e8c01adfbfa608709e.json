{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/Export.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useRef } from 'react';\nimport ExtensionsHeader from '@Components/extensions-header';\nimport XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { Row, Col, Card, CardBody, Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, CustomInput, Label } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  website: 'hildegard.org'\n}, {\n  id: 2,\n  name: 'Ervin Howell',\n  username: 'Antonette',\n  email: 'Shanna@melissa.tv',\n  website: 'anastasia.net'\n}, {\n  id: 3,\n  name: 'Clementine Bauch',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  website: 'ramiro.info'\n}, {\n  id: 4,\n  name: 'Patricia Lebsack',\n  username: 'Karianne',\n  email: 'Julianne.OConner@kory.org',\n  website: 'kale.biz'\n}, {\n  id: 5,\n  name: 'Chelsey Dietrich',\n  username: 'Kamren',\n  email: 'Lucio_Hettinger@annie.ca',\n  website: 'demarco.info'\n}, {\n  id: 6,\n  name: 'Mrs. Dennis Schulist',\n  username: 'Leopoldo_Corkery',\n  email: 'Karley_Dach@jasper.info',\n  website: 'ola.org'\n}, {\n  id: 7,\n  name: 'Kurtis Weissnat',\n  username: 'Elwyn.Skiles',\n  email: 'Telly.Hoeger@billy.biz',\n  website: 'elvis.io'\n}, {\n  id: 8,\n  name: 'Nicholas Runolfsdottir V',\n  username: 'Maxime_Nienow',\n  email: 'Sherwood@rosamond.me',\n  website: 'jacynthe.com'\n}, {\n  id: 9,\n  name: 'Glenna Reichert',\n  username: 'Delphine',\n  email: 'Chaim_McDermott@dana.io',\n  website: 'conrad.com'\n}, {\n  id: 10,\n  name: 'Clementina DuBuque',\n  username: 'Moriah.Stanton',\n  email: 'Rey.Padberg@karina.biz',\n  website: 'ambrose.net'\n}];\n\nconst Export = () => {\n  _s();\n\n  const tableRef = useRef();\n  const [data] = useState(initialData);\n  const [filteredData, setFilteredData] = useState([]);\n  const [value, setValue] = useState('');\n  const [modal, setModal] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [fileFormat, setFileFormat] = useState('xlsx');\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  const handleFilter = e => {\n    const dataArr = data;\n    let filteredData = [];\n    const value = e.target.value;\n    setValue(value);\n\n    if (value.length) {\n      filteredData = dataArr.filter(col => {\n        const startsWithCondition = col.name.toLowerCase().startsWith(value.toLowerCase()) || col.email.toLowerCase().startsWith(value.toLowerCase()) || col.website.toLowerCase().startsWith(value.toLowerCase()) || col.id.toString().toLowerCase().startsWith(value.toLowerCase());\n        const includesCondition = col.name.toLowerCase().includes(value.toLowerCase()) || col.email.toLowerCase().includes(value.toLowerCase()) || col.website.toLowerCase().includes(value.toLowerCase()) || col.id.toString().toLowerCase().includes(value.toLowerCase());\n        if (startsWithCondition) return startsWithCondition;else if (!startsWithCondition && includesCondition) return includesCondition;else return null;\n      });\n      setFilteredData(filteredData);\n      setValue(value);\n    }\n  };\n\n  const handleExport = () => {\n    toggleModal();\n    const bookType = fileFormat;\n    const wb = XLSX.utils.table_to_book(tableRef.current, {\n      sheet: 'Sheet JS'\n    });\n    const wbout = XLSX.write(wb, {\n      bookType,\n      bookSST: true,\n      type: 'binary'\n    });\n\n    const s2ab = s => {\n      const buf = new ArrayBuffer(s.length);\n      const view = new Uint8Array(buf);\n\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff;\n\n      return buf;\n    };\n\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`;\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }), file);\n  };\n\n  const array = value ? filteredData : data;\n  const renderTableData = array.map(col => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.website\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, col.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExtensionsHeader, {\n      title: \"XLSX\",\n      subTitle: \"Xlsx is a parser and writer for various spreadsheet formats\",\n      link: \"https://github.com/AdeleD/react-paginate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"export-component\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"pb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between flex-wrap flex-sm-row flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n                color: \"primary\",\n                onClick: () => toggleModal(),\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-end mt-sm-0 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"search-input\",\n                  className: \"mr-1\",\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"search-input\",\n                  bsSize: \"sm\",\n                  type: \"text\",\n                  value: value,\n                  onChange: e => handleFilter(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            innerRef: tableRef,\n            className: \"table-hover-animation mt-2\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Website\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: renderTableData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: () => toggleModal(),\n      className: \"modal-dialog-centered\",\n      onClosed: () => setFileName(''),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => toggleModal(),\n        children: \"Export To Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: fileName,\n            onChange: e => setFileName(e.target.value),\n            placeholder: \"Enter File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            type: \"select\",\n            id: \"selectFileFormat\",\n            name: \"customSelect\",\n            value: fileFormat,\n            onChange: e => setFileFormat(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"xlsx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"txt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => handleExport(),\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"flat-danger\",\n          onClick: () => toggleModal(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Export, \"JFplSepGB9ZCL5b1k7PLtLhisxw=\");\n\n_c = Export;\nexport default Export;\n\nvar _c;\n\n$RefreshReg$(_c, \"Export\");","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/views/extensions/import-export/Export.js"],"names":["Fragment","useState","useRef","ExtensionsHeader","XLSX","FileSaver","Row","Col","Card","CardBody","Button","Table","Modal","ModalHeader","ModalBody","ModalFooter","Input","FormGroup","CustomInput","Label","initialData","id","name","username","email","website","Export","tableRef","data","filteredData","setFilteredData","value","setValue","modal","setModal","fileName","setFileName","fileFormat","setFileFormat","toggleModal","handleFilter","e","dataArr","target","length","filter","col","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleExport","bookType","wb","utils","table_to_book","current","sheet","wbout","write","bookSST","type","s2ab","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","file","saveAs","Blob","array","renderTableData","map"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,WARF,EASEC,SATF,EAUEC,WAVF,EAWEC,KAXF,EAYEC,SAZF,EAaEC,WAbF,EAcEC,KAdF,QAeO,YAfP;;AAiBA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,QAAQ,EAAE,MAHZ;AAIEC,EAAAA,KAAK,EAAE,mBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CADkB,EAQlB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,QAAQ,EAAE,WAHZ;AAIEC,EAAAA,KAAK,EAAE,mBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CARkB,EAelB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,kBAFR;AAGEC,EAAAA,QAAQ,EAAE,UAHZ;AAIEC,EAAAA,KAAK,EAAE,oBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAfkB,EAsBlB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,kBAFR;AAGEC,EAAAA,QAAQ,EAAE,UAHZ;AAIEC,EAAAA,KAAK,EAAE,2BAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAtBkB,EA6BlB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,kBAFR;AAGEC,EAAAA,QAAQ,EAAE,QAHZ;AAIEC,EAAAA,KAAK,EAAE,0BAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CA7BkB,EAoClB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,sBAFR;AAGEC,EAAAA,QAAQ,EAAE,kBAHZ;AAIEC,EAAAA,KAAK,EAAE,yBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CApCkB,EA2ClB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,QAAQ,EAAE,cAHZ;AAIEC,EAAAA,KAAK,EAAE,wBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CA3CkB,EAkDlB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,0BAFR;AAGEC,EAAAA,QAAQ,EAAE,eAHZ;AAIEC,EAAAA,KAAK,EAAE,sBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAlDkB,EAyDlB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,QAAQ,EAAE,UAHZ;AAIEC,EAAAA,KAAK,EAAE,yBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAzDkB,EAgElB;AACEJ,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE,oBAFR;AAGEC,EAAAA,QAAQ,EAAE,gBAHZ;AAIEC,EAAAA,KAAK,EAAE,wBAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAhEkB,CAApB;;AAyEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGzB,MAAM,EAAvB;AAEA,QAAM,CAAC0B,IAAD,IAAS3B,QAAQ,CAACmB,WAAD,CAAvB;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,MAAD,CAA5C;;AAEA,QAAMsC,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAMC,OAAO,GAAGd,IAAhB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,UAAME,KAAK,GAAGU,CAAC,CAACE,MAAF,CAASZ,KAAvB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;;AACA,QAAIA,KAAK,CAACa,MAAV,EAAkB;AAChBf,MAAAA,YAAY,GAAGa,OAAO,CAACG,MAAR,CAAeC,GAAG,IAAI;AACnC,cAAMC,mBAAmB,GACvBD,GAAG,CAACxB,IAAJ,CAAS0B,WAAT,GAAuBC,UAAvB,CAAkClB,KAAK,CAACiB,WAAN,EAAlC,KACAF,GAAG,CAACtB,KAAJ,CAAUwB,WAAV,GAAwBC,UAAxB,CAAmClB,KAAK,CAACiB,WAAN,EAAnC,CADA,IAEAF,GAAG,CAACrB,OAAJ,CAAYuB,WAAZ,GAA0BC,UAA1B,CAAqClB,KAAK,CAACiB,WAAN,EAArC,CAFA,IAGAF,GAAG,CAACzB,EAAJ,CAAO6B,QAAP,GAAkBF,WAAlB,GAAgCC,UAAhC,CAA2ClB,KAAK,CAACiB,WAAN,EAA3C,CAJF;AAMA,cAAMG,iBAAiB,GACrBL,GAAG,CAACxB,IAAJ,CAAS0B,WAAT,GAAuBI,QAAvB,CAAgCrB,KAAK,CAACiB,WAAN,EAAhC,KACAF,GAAG,CAACtB,KAAJ,CAAUwB,WAAV,GAAwBI,QAAxB,CAAiCrB,KAAK,CAACiB,WAAN,EAAjC,CADA,IAEAF,GAAG,CAACrB,OAAJ,CAAYuB,WAAZ,GAA0BI,QAA1B,CAAmCrB,KAAK,CAACiB,WAAN,EAAnC,CAFA,IAGAF,GAAG,CAACzB,EAAJ,CAAO6B,QAAP,GAAkBF,WAAlB,GAAgCI,QAAhC,CAAyCrB,KAAK,CAACiB,WAAN,EAAzC,CAJF;AAMA,YAAID,mBAAJ,EAAyB,OAAOA,mBAAP,CAAzB,KACK,IAAI,CAACA,mBAAD,IAAwBI,iBAA5B,EAA+C,OAAOA,iBAAP,CAA/C,KACA,OAAO,IAAP;AACN,OAhBc,CAAf;AAiBArB,MAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GA1BD;;AA4BA,QAAMsB,YAAY,GAAG,MAAM;AACzBd,IAAAA,WAAW;AACX,UAAMe,QAAQ,GAAGjB,UAAjB;AACA,UAAMkB,EAAE,GAAGnD,IAAI,CAACoD,KAAL,CAAWC,aAAX,CAAyB9B,QAAQ,CAAC+B,OAAlC,EAA2C;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA3C,CAAX;AACA,UAAMC,KAAK,GAAGxD,IAAI,CAACyD,KAAL,CAAWN,EAAX,EAAe;AAAED,MAAAA,QAAF;AAAYQ,MAAAA,OAAO,EAAE,IAArB;AAA2BC,MAAAA,IAAI,EAAE;AAAjC,KAAf,CAAd;;AAEA,UAAMC,IAAI,GAAGC,CAAC,IAAI;AAChB,YAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAgBF,CAAC,CAACrB,MAAlB,CAAZ;AACA,YAAMwB,IAAI,GAAG,IAAIC,UAAJ,CAAeH,GAAf,CAAb;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAAC,CAACrB,MAAtB,EAA8B0B,CAAC,EAA/B,EAAmCF,IAAI,CAACE,CAAD,CAAJ,GAAUL,CAAC,CAACM,UAAF,CAAaD,CAAb,IAAkB,IAA5B;;AACnC,aAAOJ,GAAP;AACD,KALD;;AAMA,UAAMM,IAAI,GAAGrC,QAAQ,CAACS,MAAT,GAAmB,GAAET,QAAS,IAAGE,UAAW,EAA5C,GAAiD,eAAcA,UAAW,EAAvF;AAEA,WAAOhC,SAAS,CAACoE,MAAV,CAAiB,IAAIC,IAAJ,CAAS,CAACV,IAAI,CAACJ,KAAD,CAAL,CAAT,EAAwB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAxB,CAAjB,EAAgFS,IAAhF,CAAP;AACD,GAfD;;AAiBA,QAAMG,KAAK,GAAG5C,KAAK,GAAGF,YAAH,GAAkBD,IAArC;AACA,QAAMgD,eAAe,GAAGD,KAAK,CAACE,GAAN,CAAU/B,GAAG,IAAI;AACvC,wBACE;AAAA,8BACE;AAAA,kBAAKA,GAAG,CAACtB;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKsB,GAAG,CAACxB;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKwB,GAAG,CAACrB;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAKqB,GAAG,CAACzB;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAASyB,GAAG,CAACzB,EAAb;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATuB,CAAxB;AAUA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,QAAQ,EAAC,6DAFX;AAGE,MAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,MAApB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,kEAAf;AAAA,sCACE,QAAC,MAAD,CAAQ,MAAR;AAAe,gBAAA,KAAK,EAAC,SAArB;AAA+B,gBAAA,OAAO,EAAE,MAAMkB,WAAW,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,4DAAf;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,cAAX;AAA0B,kBAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,KAAD;AAAO,kBAAA,EAAE,EAAC,cAAV;AAAyB,kBAAA,MAAM,EAAC,IAAhC;AAAqC,kBAAA,IAAI,EAAC,MAA1C;AAAiD,kBAAA,KAAK,EAAER,KAAxD;AAA+D,kBAAA,QAAQ,EAAEU,CAAC,IAAID,YAAY,CAACC,CAAD;AAA1F;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEd,QAAjB;AAA2B,YAAA,SAAS,EAAC,4BAArC;AAAkE,YAAA,UAAU,MAA5E;AAAA,oCACE;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAA,wBAAQiD;AAAR;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAoCE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE3C,KADV;AAEE,MAAA,MAAM,EAAE,MAAMM,WAAW,EAF3B;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,QAAQ,EAAE,MAAMH,WAAW,CAAC,EAAD,CAJ7B;AAAA,8BAME,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,MAAMG,WAAW,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,SAAD;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEJ,QAFT;AAGE,YAAA,QAAQ,EAAEM,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACE,MAAF,CAASZ,KAAV,CAH5B;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,SAAD;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,EAAE,EAAC,kBAFL;AAGE,YAAA,IAAI,EAAC,cAHP;AAIE,YAAA,KAAK,EAAEM,UAJT;AAKE,YAAA,QAAQ,EAAEI,CAAC,IAAIH,aAAa,CAACG,CAAC,CAACE,MAAF,CAASZ,KAAV,CAL9B;AAAA,oCAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eA8BE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,MAAMsB,YAAY,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,aAAd;AAA4B,UAAA,OAAO,EAAE,MAAMd,WAAW,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED,CApJD;;GAAMb,M;;KAAAA,M;AAsJN,eAAeA,MAAf","sourcesContent":["import { Fragment, useState, useRef } from 'react'\nimport ExtensionsHeader from '@Components/extensions-header'\nimport XLSX from 'xlsx'\nimport * as FileSaver from 'file-saver'\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  FormGroup,\n  CustomInput,\n  Label\n} from 'reactstrap'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst Export = () => {\n  const tableRef = useRef()\n\n  const [data] = useState(initialData)\n  const [filteredData, setFilteredData] = useState([])\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [fileFormat, setFileFormat] = useState('xlsx')\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleFilter = e => {\n    const dataArr = data\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = dataArr.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    }\n  }\n\n  const handleExport = () => {\n    toggleModal()\n    const bookType = fileFormat\n    const wb = XLSX.utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\n    const wbout = XLSX.write(wb, { bookType, bookSST: true, type: 'binary' })\n\n    const s2ab = s => {\n      const buf = new ArrayBuffer(s.length)\n      const view = new Uint8Array(buf)\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\n      return buf\n    }\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), file)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr key={col.id}>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/AdeleD/react-paginate'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex justify-content-between flex-wrap flex-sm-row flex-column'>\n                <Button.Ripple color='primary' onClick={() => toggleModal()}>\n                  Export\n                </Button.Ripple>\n                <div className='d-flex align-items-center justify-content-end mt-sm-0 mt-1'>\n                  <Label for='search-input' className='mr-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table innerRef={tableRef} className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </FormGroup>\n          <FormGroup>\n            <CustomInput\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => setFileFormat(e.target.value)}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </CustomInput>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Export\n"]},"metadata":{},"sourceType":"module"}