{"ast":null,"code":"import mock from '../mock';\nvar data = {\n  accountSetting: {\n    general: {\n      avatar: require('@Assets/images/portrait/small/avatar-s-11.jpg').default,\n      username: 'johndoe',\n      fullName: 'John Doe',\n      email: 'granger007@hogward.com',\n      company: 'IBM Technology'\n    },\n    info: {\n      bio: '',\n      dob: null,\n      country: 'USA',\n      website: '',\n      phone: 6562542568\n    },\n    social: {\n      socialLinks: {\n        twitter: 'https://www.twitter.com',\n        facebook: '',\n        google: '',\n        linkedIn: 'https://www.linkedin.com',\n        instagram: '',\n        quora: ''\n      },\n      connections: {\n        twitter: {\n          profileImg: require('@Assets/images/avatars/11-small.png').default,\n          id: 'johndoe'\n        },\n        google: {\n          profileImg: require('@Assets/images/avatars/3-small.png').default,\n          id: 'luraweber'\n        },\n        facebook: {},\n        github: {}\n      }\n    },\n    notification: {\n      commentOnArticle: true,\n      answerOnForm: true,\n      followMe: false,\n      newAnnouncements: true,\n      productUpdates: true,\n      blogDigest: false\n    }\n  }\n};\nmock.onGet('/account-setting/data').reply(function () {\n  return [200, data.accountSetting];\n});","map":{"version":3,"sources":["/Users/abc/Downloads/Workspace/projectFPT/cms-fusamate/cms-fusamate/cms-fusamte/src/@fake-db/pages/account-settings.js"],"names":["mock","data","accountSetting","general","avatar","require","default","username","fullName","email","company","info","bio","dob","country","website","phone","social","socialLinks","twitter","facebook","google","linkedIn","instagram","quora","connections","profileImg","id","github","notification","commentOnArticle","answerOnForm","followMe","newAnnouncements","productUpdates","blogDigest","onGet","reply"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAD1D;AAEPC,MAAAA,QAAQ,EAAE,SAFH;AAGPC,MAAAA,QAAQ,EAAE,UAHH;AAIPC,MAAAA,KAAK,EAAE,wBAJA;AAKPC,MAAAA,OAAO,EAAE;AALF,KADK;AAQdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,GAAG,EAAE,IAFD;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,KAAK,EAAE;AALH,KARQ;AAedC,IAAAA,MAAM,EAAE;AACNC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE,yBADE;AAEXC,QAAAA,QAAQ,EAAE,EAFC;AAGXC,QAAAA,MAAM,EAAE,EAHG;AAIXC,QAAAA,QAAQ,EAAE,0BAJC;AAKXC,QAAAA,SAAS,EAAE,EALA;AAMXC,QAAAA,KAAK,EAAE;AANI,OADP;AASNC,MAAAA,WAAW,EAAE;AACXN,QAAAA,OAAO,EAAE;AACPO,UAAAA,UAAU,EAAErB,OAAO,CAAC,qCAAD,CAAP,CAA+CC,OADpD;AAEPqB,UAAAA,EAAE,EAAE;AAFG,SADE;AAKXN,QAAAA,MAAM,EAAE;AACNK,UAAAA,UAAU,EAAErB,OAAO,CAAC,oCAAD,CAAP,CAA8CC,OADpD;AAENqB,UAAAA,EAAE,EAAE;AAFE,SALG;AASXP,QAAAA,QAAQ,EAAE,EATC;AAUXQ,QAAAA,MAAM,EAAE;AAVG;AATP,KAfM;AAqCdC,IAAAA,YAAY,EAAE;AACZC,MAAAA,gBAAgB,EAAE,IADN;AAEZC,MAAAA,YAAY,EAAE,IAFF;AAGZC,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,gBAAgB,EAAE,IAJN;AAKZC,MAAAA,cAAc,EAAE,IALJ;AAMZC,MAAAA,UAAU,EAAE;AANA;AArCA;AADL,CAAb;AAiDAnC,IAAI,CAACoC,KAAL,CAAW,uBAAX,EAAoCC,KAApC,CAA0C;AAAA,SAAM,CAAC,GAAD,EAAMpC,IAAI,CAACC,cAAX,CAAN;AAAA,CAA1C","sourcesContent":["import mock from '../mock'\nconst data = {\n  accountSetting: {\n    general: {\n      avatar: require('@Assets/images/portrait/small/avatar-s-11.jpg').default,\n      username: 'johndoe',\n      fullName: 'John Doe',\n      email: 'granger007@hogward.com',\n      company: 'IBM Technology'\n    },\n    info: {\n      bio: '',\n      dob: null,\n      country: 'USA',\n      website: '',\n      phone: 6562542568\n    },\n    social: {\n      socialLinks: {\n        twitter: 'https://www.twitter.com',\n        facebook: '',\n        google: '',\n        linkedIn: 'https://www.linkedin.com',\n        instagram: '',\n        quora: ''\n      },\n      connections: {\n        twitter: {\n          profileImg: require('@Assets/images/avatars/11-small.png').default,\n          id: 'johndoe'\n        },\n        google: {\n          profileImg: require('@Assets/images/avatars/3-small.png').default,\n          id: 'luraweber'\n        },\n        facebook: {},\n        github: {}\n      }\n    },\n    notification: {\n      commentOnArticle: true,\n      answerOnForm: true,\n      followMe: false,\n      newAnnouncements: true,\n      productUpdates: true,\n      blogDigest: false\n    }\n  }\n}\n\nmock.onGet('/account-setting/data').reply(() => [200, data.accountSetting])\n"]},"metadata":{},"sourceType":"module"}