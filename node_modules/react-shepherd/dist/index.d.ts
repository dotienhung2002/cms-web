import React, { FunctionComponent } from 'react';
import Shepherd from 'shepherd.js';
import Step from 'shepherd.js/src/types/step';
import Tour from 'shepherd.js/src/types/tour';
interface ShepherdButtonWithType extends Step.StepOptionsButton {
    type?: string;
}
interface ShepherdOptionsWithType extends Step.StepOptions {
    buttons?: ReadonlyArray<Step.StepOptionsButton | ShepherdButtonWithType>;
}
interface ShepherdProps {
    steps: Array<ShepherdOptionsWithType>;
    tourOptions: Tour.TourOptions;
}
declare const ShepherdTourContext: React.Context<Shepherd.Tour | null>;
declare const ShepherdTourContextConsumer: React.Consumer<Shepherd.Tour | null>;
export declare const ShepherdTour: FunctionComponent<ShepherdProps>;
export { ShepherdTourContextConsumer as TourMethods, ShepherdTourContext };
