{"version":3,"sources":["views/components/carousel/CarouselBasic.js","assets/images/slider/08.jpg","views/components/carousel/CarouselCaptions.js","views/components/carousel/CarouselUncontrolled.js","views/components/carousel/CarouselInterval.js","views/components/carousel/CarouselKeyboard.js","views/components/carousel/CarouselPause.js","views/components/carousel/CarouselSourceCode.js","views/components/carousel/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","assets/images/slider/01.jpg","assets/images/slider/05.jpg"],"names":["images","src","sliderImage2","id","sliderImage3","sliderImage1","CarouselBasic","useState","activeIndex","setActiveIndex","animating","setAnimating","onExiting","onExited","next","nextIndex","length","previous","slides","map","item","CarouselItem","className","alt","keyboard","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","header","caption","CarouselCaptions","CarouselCaption","captionText","captionHeader","key","altText","CarouselUncontrolled","UncontrolledCarousel","CarouselInterval","interval","CarouselKeyboard","CarouselPause","pause","carouselBasic","carouselCaptions","carouselUncontrolled","carouselInterval","carouselKeyboard","carouselPause","Carousel","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Alert","color","size","md","title","code","CardText","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","right","Link","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/159.343d2d3f.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/01.jpg'\nimport sliderImage2 from '@Assets/images/slider/02.jpg'\nimport sliderImage3 from '@Assets/images/slider/03.jpg'\n\nconst images = [\n  {\n    src: sliderImage2,\n    id: 1\n  },\n  {\n    src: sliderImage3,\n    id: 2\n  },\n  {\n    src: sliderImage1,\n    id: 3\n  }\n]\n\nconst CarouselBasic = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous} keyboard={false}>\n      <CarouselIndicators items={images} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction='prev' directionText='Previous' onClickHandler={previous} />\n      <CarouselControl direction='next' directionText='Next' onClickHandler={next} />\n    </Carousel>\n  )\n}\n\nexport default CarouselBasic\n","export default __webpack_public_path__ + \"static/media/08.9fa51868.jpg\";","import { useState } from 'react'\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/09.jpg'\nimport sliderImage2 from '@Assets/images/slider/08.jpg'\nimport sliderImage3 from '@Assets/images/slider/10.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    header: 'Slide 1',\n    caption:\n      'Donut jujubes I love topping I love sweet. Jujubes I love brownie gummi bears I love donut sweet chocolate. Tart chocolate marshmallow.Tart carrot cake muffin.'\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    header: 'Slide 2',\n    caption:\n      'Tart macaroon marzipan I love soufflé apple pie wafer. Chocolate bar jelly caramels jujubes chocolate cake gummies. Cupcake cake I love cake danish carrot cake.'\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    header: 'Slide 3',\n    caption:\n      'Pudding sweet pie gummies. Chocolate bar sweet tiramisu cheesecake chocolate cotton candy pastry muffin Marshmallow cake powder icing.'\n  }\n]\n\nconst CarouselCaptions = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n        <CarouselCaption captionText={item.caption} captionHeader={<span className='text-white'>{item.header}</span>} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous} keyboard={false}>\n      <CarouselIndicators items={images} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction='prev' directionText='Previous' onClickHandler={previous} />\n      <CarouselControl direction='next' directionText='Next' onClickHandler={next} />\n    </Carousel>\n  )\n}\n\nexport default CarouselCaptions\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/01.jpg'\nimport sliderImage2 from '@Assets/images/slider/02.jpg'\nimport sliderImage3 from '@Assets/images/slider/03.jpg'\n\nconst items = [\n  {\n    key: 1,\n    src: sliderImage2,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    key: 2,\n    src: sliderImage3,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    key: 3,\n    src: sliderImage1,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselUncontrolled = () => {\n  return <UncontrolledCarousel items={items} keyboard={false} />\n}\nexport default CarouselUncontrolled\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/06.jpg'\nimport sliderImage2 from '@Assets/images/slider/04.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselInterval = () => {\n  return <UncontrolledCarousel items={images} interval='500' keyboard={false} />\n}\nexport default CarouselInterval\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/03.jpg'\nimport sliderImage2 from '@Assets/images/slider/06.jpg'\nimport sliderImage3 from '@Assets/images/slider/01.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselKeyboard = () => {\n  return <UncontrolledCarousel items={images} keyboard={true} />\n}\nexport default CarouselKeyboard\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/04.jpg'\nimport sliderImage2 from '@Assets/images/slider/03.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselPause = () => {\n  return <UncontrolledCarousel items={images} pause='hover' keyboard={false} />\n}\nexport default CarouselPause\n","export const carouselBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators\n} from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/01.jpg'\nimport sliderImage2 from '@Assets/images/slider/02.jpg'\nimport sliderImage3 from '@Assets/images/slider/03.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1\n  },\n  {\n    src: sliderImage2,\n    id: 2\n  },\n  {\n    src: sliderImage3,\n    id: 3\n  }\n]\n\nconst CarouselBasic = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={images}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction='prev'\n        directionText='Previous'\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction='next'\n        directionText='Next'\n        onClickHandler={next}\n      />\n    </Carousel>\n  )\n}\n\nexport default CarouselBasic\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselCaptions = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/03.jpg'\nimport sliderImage2 from '@Assets/images/slider/04.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    header: <span className=\"text-white\">Slide 1 Header</span>\n    caption: 'Cupcake ipsum dolor sit amet toffee lemon drops bonbon.'\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    header: <span className=\"text-white\">Slide 2 Header</span>\n    caption: 'Cheesecake caramels wafer pie lollipop.'\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    header: <span className=\"text-white\">Slide 3 Header</span>\n    caption: 'Candy canes toffee gummies soufflé fruitcake dragée icing.'\n  }\n]\n\nconst CarouselCaptions = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n        <CarouselCaption\n          captionText={item.caption}\n          captionHeader={<span className=\"text-center\">item.header</span>}\n        />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={images}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction='prev'\n        directionText='Previous'\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction='next'\n        directionText='Next'\n        onClickHandler={next}\n      />\n    </Carousel>\n  )\n}\n\nexport default CarouselCaptions\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/06.jpg'\nimport sliderImage2 from '@Assets/images/slider/02.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst items = [\n  {\n    src: sliderImage1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselUncontrolled = () => {\n  return <UncontrolledCarousel items={items} />\n}\nexport default CarouselUncontrolled\n        `}\n    </code>\n  </pre>\n)\n\nexport const carouselInterval = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/05.jpg'\nimport sliderImage2 from '@Assets/images/slider/04.jpg'\nimport sliderImage3 from '@Assets/images/slider/01.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselInterval = () => {\n  return <UncontrolledCarousel items={images} interval='500' />\n}\nexport default CarouselInterval`}\n    </code>\n  </pre>\n)\n\nexport const carouselKeyboard = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport { carouselKeyboard } from './CarouselSourceCode'\nimport sliderImage1 from '@Assets/images/slider/04.jpg'\nimport sliderImage2 from '@Assets/images/slider/01.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselKeyboard = () => {\n  return <UncontrolledCarousel items={images} keyboard={false} />\n}\nexport default CarouselKeyboard\n            `}\n    </code>\n  </pre>\n)\n\nexport const carouselPause = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@Assets/images/slider/02.jpg'\nimport sliderImage2 from '@Assets/images/slider/06.jpg'\nimport sliderImage3 from '@Assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n    header: <span className=\"text-white\">Slide 1 Header</span>\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n    header: <span className=\"text-white\">Slide 2 Header</span>\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n    header: <span className=\"text-white\">Slide 3 Header</span>\n  }\n]\n\nconst CarouselPause = () => {\n  return <UncontrolledCarousel items={images} pause='hover' />\n}\nexport default CarouselPause\n`}\n    </code>\n  </pre>\n)\n","import { Fragment, useEffect } from 'react'\nimport { Info } from 'react-feather'\nimport Card from '@Components/card-snippet'\nimport BreadCrumbs from '@Components/breadcrumbs'\nimport CarouselBasic from './CarouselBasic'\nimport CarouselCaptions from './CarouselCaptions'\nimport CarouselUncontrolled from './CarouselUncontrolled'\nimport CarouselInterval from './CarouselInterval'\nimport CarouselKeyboard from './CarouselKeyboard'\nimport CarouselPause from './CarouselPause'\nimport Prism from 'prismjs'\nimport { Row, Col, CardText, Alert } from 'reactstrap'\nimport {\n  carouselBasic,\n  carouselCaptions,\n  carouselInterval,\n  carouselPause,\n  carouselKeyboard,\n  carouselUncontrolled\n} from './CarouselSourceCode'\n\nconst Carousel = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Carousel' breadCrumbParent='Components' breadCrumbActive='Carousel' />\n      <Row>\n        <Col className='mb-1' sm='12'>\n          <Alert color='info'>\n            <div className='alert-body'>\n              <p>\n                <Info className='mr-1' size={14} />\n                Nested carousels are not supported.\n              </p>\n            </div>\n          </Alert>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Basic Example' code={carouselBasic}>\n            <CarouselBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Captions Example' code={carouselCaptions}>\n            <CarouselCaptions />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Uncontrolled Example' code={carouselUncontrolled}>\n            <CardText>\n              You don't have to manage state with <code>UncontrolledCarousel</code> all you have to do is return it with\n              your content.\n            </CardText>\n            <CarouselUncontrolled />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Interval Example' code={carouselInterval}>\n            <CardText>\n              Use <code>Interval</code> prop to set interval between slides. default interval is <strong>5000</strong>.\n            </CardText>\n            <CarouselInterval />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Keyboard Example' code={carouselKeyboard}>\n            <CardText>\n              Use <code>Keyboard</code> prop to control carousel with keyboard default is <code>false</code>.\n            </CardText>\n            <CarouselKeyboard />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Pause Example' code={carouselPause}>\n            <CardText>\n              Use <code>pause</code> prop to pause carousel on hover.\n            </CardText>\n            <CarouselPause />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Carousel\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Trang chủ</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n  code: PropTypes.node,\n  iconCode: PropTypes.node,\n  noBody: PropTypes.bool\n}\n","export default __webpack_public_path__ + \"static/media/01.ae763d9d.jpg\";","export default __webpack_public_path__ + \"static/media/05.3d963e35.jpg\";"],"sourceRoot":""}