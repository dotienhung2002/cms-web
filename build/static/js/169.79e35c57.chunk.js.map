{"version":3,"sources":["views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["PhoneMask","htmlFor","InputGroup","className","InputGroupAddon","addonType","InputGroupText","placeholder","options","phone","phoneRegionCode","id","DateMask","date","delimiter","datePattern","TimeMask","time","timePattern","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","CardHeader","CardTitle","tag","CardBody","xl","md","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","active","color","size","right","Link"],"mappings":"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","file":"static/js/169.79e35c57.chunk.js","sourcesContent":["import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\n\nconst PhoneMask = () => {\n  const options = { phone: true, phoneRegionCode: 'US' }\n  return (\n    <Fragment>\n      <label htmlFor='phone-number'>Phone Number</label>\n      <InputGroup className='input-group-merge'>\n        <InputGroupAddon addonType='prepend'>\n          <InputGroupText>US (+1)</InputGroupText>\n        </InputGroupAddon>\n        <Cleave className='form-control' placeholder='1 234 567 8900' options={options} id='phone-number' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default PhoneMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst DateMask = () => {\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\n  return (\n    <Fragment>\n      <label htmlFor='date'>Date</label>\n      <Cleave className='form-control' placeholder='2001-01-01' options={options} id='date' />\n    </Fragment>\n  )\n}\n\nexport default DateMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst TimeMask = () => {\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\n  return (\n    <Fragment>\n      <label htmlFor='time'>Time</label>\n      <Cleave className='form-control' placeholder='12:00:00' options={options} id='time' />\n    </Fragment>\n  )\n}\n\nexport default TimeMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst BlocksMask = () => {\n  const options = { blocks: [4, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <label htmlFor='blocks'>Blocks</label>\n      <Cleave className='form-control' placeholder='Blocks [4, 3, 3]' options={options} id='blocks' />\n    </Fragment>\n  )\n}\n\nexport default BlocksMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst PrefixMask = () => {\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\n  return (\n    <Fragment>\n      <label htmlFor='prefix'>Prefix</label>\n      <Cleave className='form-control' options={options} id='prefix' />\n    </Fragment>\n  )\n}\n\nexport default PrefixMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst DelimitersMask = () => {\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <label htmlFor='delimiters'>Delimiters</label>\n      <Cleave className='form-control' placeholder=\"Delimiter: '.'\" options={options} id='delimiters' />\n    </Fragment>\n  )\n}\n\nexport default DelimitersMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst CreditCardMask = () => {\n  const options = { creditCard: true }\n\n  return (\n    <Fragment>\n      <label htmlFor='credit-card'>Credit Card</label>\n      <Cleave className='form-control' placeholder='0000 0000 0000 0000' options={options} id='credit-card' />\n    </Fragment>\n  )\n}\n\nexport default CreditCardMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst CustomDelimitersMask = () => {\n  const options = { delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }\n  return (\n    <Fragment>\n      <label htmlFor='custom-delimiters'>Custom Delimiters</label>\n      <Cleave\n        className='form-control'\n        placeholder=\"Delimiter: ['.', '.', '-']\"\n        options={options}\n        id='custom-delimiters'\n      />\n    </Fragment>\n  )\n}\n\nexport default CustomDelimitersMask\n","import { Fragment } from 'react'\nimport Cleave from 'cleave.js/react'\n\nconst NumeralFormattingMask = () => {\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\n\n  return (\n    <Fragment>\n      <label htmlFor='numeral-formatting'>Numeral Formatting</label>\n      <Cleave className='form-control' placeholder='10,000' options={options} id='numeral-formatting' />\n    </Fragment>\n  )\n}\n\nexport default NumeralFormattingMask\n","import { Fragment } from 'react'\nimport PhoneMask from './PhoneMask'\nimport DateMask from './DateMask'\nimport TimeMask from './TimeMask'\nimport BlocksMask from './BlocksMask'\nimport PrefixMask from './PrefixMask'\nimport DelimitersMask from './DelimitersMask'\nimport CreditCardMask from './CreditCardMask'\nimport Breadcrumbs from '@Components/breadcrumbs'\nimport CustomDelimitersMask from './CustomDelimitersMask'\nimport NumeralFormattingMask from './NumeralFormattingMask'\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\n\nconst InputMask = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Input Mask' breadCrumbParent='Form Elements' breadCrumbActive='Input Mask' />\n      <Row>\n        <Col sm='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Input Masks</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <CreditCardMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <PhoneMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <DateMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <TimeMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <NumeralFormattingMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <BlocksMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <DelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <CustomDelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <PrefixMask />\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default InputMask\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Trang chá»§</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}