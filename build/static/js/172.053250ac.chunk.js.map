{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","Card","CardHeader","CardTitle","tag","CardBody","url","className","width","controls","pad","string","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","useEffect","Prism","highlightAll","audioRef","useRef","urlLink","useState","setUrl","playing","setPlaying","volume","setVolume","muted","setMuted","played","setPlayed","loaded","setLoaded","duration","setDuration","seeking","setSeeking","load","Duration","dateTime","Math","round","preDuration","preElapsed","preRemaining","Row","Col","xs","ref","height","onPlay","onPause","onSeek","e","console","log","onProgress","state","onDuration","Table","borderless","Button","variant","outline","onClick","type","min","max","step","value","onMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","CustomInput","id","checked","Progress","toFixed","props","MediaPlayerControlledVideo","videoRef","setControls","playbackRate","setPlaybackRate","loop","setLoop","handlePlaybackRate","onEnded","config","youtube","embedOptions","color","screenfull","request","findDOMNode","active","ReactPlayer","title","subTitle","link","sm","MediaPlayerControlled","ExtensionsHeader","href","rel"],"mappings":"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","file":"static/js/172.053250ac.chunk.js","sourcesContent":["import { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport ReactPlayer from 'react-player'\n\nconst MediaPlayerVideo = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ReactPlayer\n          url='http://youtube.com/watch?v=FCPdIvXo2rU'\n          className='react-player-video'\n          width='100%'\n          controls={true}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerVideo\n","import { useState, useEffect, useRef } from 'react'\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, CustomInput } from 'reactstrap'\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerAudio = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const audioRef = useRef(null)\n\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\n  const [url, setUrl] = useState(urlLink)\n  const [playing, setPlaying] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [muted, setMuted] = useState(false)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    audioRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleDuration = duration => setDuration(duration)\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Audio</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={audioRef}\n              url={url}\n              className='react-player-audio'\n              width='500px'\n              height='290px'\n              playing={playing}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onSeek={e => console.log('onSeek', e)}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n            />\n          </Col>\n          <Col xs={12}>\n            <Table borderless className='mt-2'>\n              <tbody>\n                <tr>\n                  <td className='text-right'>Controls</td>\n                  <td>\n                    <Button variant='primary' outline onClick={handleStop} className='my-25 mr-50'>\n                      Stop\n                    </Button>\n                    <Button variant='primary' outline onClick={handlePlayPause} className='my-25'>\n                      {playing ? 'Pause' : 'Play'}\n                    </Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Seek</td>\n                  <td>\n                    <input\n                      type='range'\n                      min={0}\n                      max={0.999999}\n                      step='any'\n                      value={played}\n                      onMouseDown={handleSeekMouseDown}\n                      onChange={handleSeekChange}\n                      onMouseUp={handleSeekMouseUp}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Volume</td>\n                  <td>\n                    <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Muted</td>\n                  <td>\n                    <CustomInput type='checkbox' id='audioMuted' checked={muted} onChange={handleToggleMuted} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Played</td>\n                  <td>\n                    <Progress value={played} max={1} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Loaded</td>\n                  <td>\n                    <Progress value={loaded} max={1} />\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerAudio\n","import { useState, useEffect, useRef } from 'react'\nimport { findDOMNode } from 'react-dom'\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, CustomInput } from 'reactstrap'\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\nimport screenfull from 'screenfull'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerControlledVideo = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const videoRef = useRef(null)\n\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\n  const [url, setUrl] = useState(urlLink)\n  const [playing, setPlaying] = useState(false)\n  const [controls, setControls] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [muted, setMuted] = useState(false)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [playbackRate, setPlaybackRate] = useState(1.0)\n  const [loop, setLoop] = useState(false)\n  const [seeking, setSeeking] = useState(null)\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleToggleControls = () => {\n    setControls(!controls)\n    setUrl(null)\n  }\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n  const handleToggleLoop = () => setLoop(!loop)\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlaybackRate = e => setPlaybackRate(parseFloat(e.target.value))\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    videoRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleEnded = () => setPlaying(loop)\n  const handleDuration = duration => setDuration(duration)\n  const handleFullscreen = () => {\n    screenfull.request(findDOMNode(videoRef.current))\n  }\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={videoRef}\n              url={url}\n              className='react-player-video'\n              width='100%'\n              playing={playing}\n              controls={controls}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onEnded={handleEnded}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n              config={{\n                youtube: {\n                  embedOptions: {\n                    'allow-same-origin': true\n                  }\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n      <Table borderless>\n        <tbody>\n          <tr>\n            <td className='text-right'>Controls</td>\n            <td>\n              <Button color='primary' outline onClick={handleStop} className='my-25 mr-50'>\n                Stop\n              </Button>\n              <Button color='primary' outline onClick={handlePlayPause} className='my-25 mr-50'>\n                {playing ? 'Pause' : 'Play'}\n              </Button>\n              <Button color='primary' outline onClick={handleFullscreen} className='my-25'>\n                Fullscreen\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Speed</td>\n            <td>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1}\n                className='my-25 mr-50'\n                active={playbackRate === 1}\n              >\n                1x\n              </Button>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1.5}\n                className='my-25 mr-50'\n                active={playbackRate === 1.5}\n              >\n                1.5x\n              </Button>\n              <Button color='primary' outline onClick={handlePlaybackRate} value={2} active={playbackRate === 2}>\n                2x\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Seek</td>\n            <td>\n              <input\n                type='range'\n                min={0}\n                max={0.999999}\n                step='any'\n                value={played}\n                onMouseDown={handleSeekMouseDown}\n                onChange={handleSeekChange}\n                onMouseUp={handleSeekMouseUp}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Volume</td>\n            <td>\n              <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Controls</td>\n            <td>\n              <CustomInput type='checkbox' id='videoControls' checked={controls} onChange={handleToggleControls} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Muted</td>\n            <td>\n              <CustomInput type='checkbox' id='videoMuted' checked={muted} onChange={handleToggleMuted} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Loop</td>\n            <td>\n              <CustomInput type='checkbox' id='videoLoop' checked={loop} onChange={handleToggleLoop} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Played</td>\n            <td>\n              <Progress value={played} max={1} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Loaded</td>\n            <td>\n              <Progress value={loaded} max={1} />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerControlledVideo\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport MediaPlayerVideo from './MediaPlayerVideo'\nimport MediaPlayerAudio from './MediaPlayerAudio'\nimport MediaPlayerControlled from './MediaPlayerControlled'\nimport ExtensionsHeader from '@Components/extensions-header'\n\nconst ReactPlayer = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Player'\n        subTitle='React Media Player'\n        link='https://github.com/CookPete/react-player'\n      />\n      <Row>\n        <Col sm='12'>\n          <MediaPlayerVideo />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerControlled />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerAudio />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ReactPlayer\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string,\n  subTitle: Proptypes.string,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}