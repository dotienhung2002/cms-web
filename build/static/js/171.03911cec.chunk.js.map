{"version":3,"sources":["@core/components/repeater/index.js","views/forms/form-repeater/RepeatingForm.js","views/forms/form-repeater/RepeatingFormAnimated.js","views/forms/form-repeater/index.js","@core/components/breadcrumbs/index.js"],"names":["Repeater","props","count","tag","children","component","rest","Tag","items","i","push","defaultProps","RepeatingForm","useState","setCount","deleteForm","e","preventDefault","target","closest","remove","Card","CardHeader","className","CardBody","Form","Row","Col","md","FormGroup","Label","for","Input","type","id","placeholder","value","readOnly","disabled","Button","Ripple","color","onClick","outline","size","sm","slideDownWrapper","form","CardText","href","rel","SlideDown","FormRepeater","breadCrumbTitle","breadCrumbParent","breadCrumbActive","RepeatingFormAnimated","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","right","Link"],"mappings":"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","file":"static/js/171.03911cec.chunk.js","sourcesContent":["// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n","import { useState } from 'react'\nimport Repeater from '@Components/repeater'\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap'\nimport { X, Plus } from 'react-feather'\n\nconst RepeatingForm = () => {\n  const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('form').remove()\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <h4 className='card-title'>Repeating Forms</h4>\n      </CardHeader>\n\n      <CardBody>\n        <Repeater count={count}>\n          {i => (\n            <Form key={i}>\n              <Row className='justify-content-between align-items-center'>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Item Name</Label>\n                    <Input type='text' id={`item-name-${i}`} placeholder='Vuexy Admin Template' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`cost-${i}`}>Cost</Label>\n                    <Input type='number' id={`cost-${i}`} placeholder='32' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`quantity-${i}`}>Quantity</Label>\n                    <Input type='number' id={`quantity-${i}`} placeholder='1' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`price-${i}`}>Price</Label>\n                    <input\n                      className='form-control-plaintext'\n                      type='number'\n                      id={`price-${i}`}\n                      value='$32'\n                      placeholder='$32'\n                      readOnly\n                      disabled\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <Button.Ripple color='danger' className='text-nowrap px-1' onClick={deleteForm} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>\n                </Col>\n                <Col sm={12}>\n                  <hr />\n                </Col>\n              </Row>\n            </Form>\n          )}\n        </Repeater>\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RepeatingForm\n","import { useState } from 'react'\nimport Repeater from '@Components/repeater'\nimport { X, Plus } from 'react-feather'\nimport { SlideDown } from 'react-slidedown'\nimport { Row, Col, Card, CardHeader, CardBody, CardText, Form, FormGroup, Label, Input, Button } from 'reactstrap'\n\nconst RepeatingForm = () => {\n  const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n\n  const deleteForm = e => {\n    e.preventDefault()\n    const slideDownWrapper = e.target.closest('.react-slidedown'),\n      form = e.target.closest('form')\n    if (slideDownWrapper) {\n      slideDownWrapper.remove()\n    } else {\n      form.remove()\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <h4 className='card-title'>With Animation</h4>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Use we're using <code>react-slidedown</code> component for slidedown animation. Refer this{' '}\n          <a href='https://github.com/frankwallis/react-slidedown' target='_blank' rel='noopener noreferrer'>\n            link\n          </a>{' '}\n          for more info.\n        </CardText>\n        <Repeater count={count}>\n          {i => {\n            const Tag = i === 0 ? 'div' : SlideDown\n            return (\n              <Tag key={i}>\n                <Form>\n                  <Row className='justify-content-between align-items-center'>\n                    <Col md={4}>\n                      <FormGroup>\n                        <Label for={`animation-item-name-${i}`}>Item Name</Label>\n                        <Input type='text' id={`animation-item-name-${i}`} placeholder='Vuexy Admin Template' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-cost-${i}`}>Cost</Label>\n                        <Input type='number' id={`animation-cost-${i}`} placeholder='32' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-quantity-${i}`}>Quantity</Label>\n                        <Input type='number' id={`animation-quantity-${i}`} placeholder='1' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-price-${i}`}>Price</Label>\n                        <input\n                          className='form-control-plaintext'\n                          type='number'\n                          id={`animation-price-${i}`}\n                          value='$32'\n                          placeholder='$32'\n                          readOnly\n                          disabled\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <Button.Ripple color='danger' className='text-nowrap px-1' onClick={deleteForm} outline>\n                        <X size={14} className='mr-50' />\n                        <span>Delete</span>\n                      </Button.Ripple>\n                    </Col>\n                    <Col sm={12}>\n                      <hr />\n                    </Col>\n                  </Row>\n                </Form>\n              </Tag>\n            )\n          }}\n        </Repeater>\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RepeatingForm\n","import { Fragment } from 'react'\nimport Breadcrumbs from '@Components/breadcrumbs'\nimport { Row, Col } from 'reactstrap'\nimport RepeatingForm from './RepeatingForm'\nimport RepeatingFormAnimated from './RepeatingFormAnimated'\n\nimport 'react-slidedown/lib/slidedown.css'\nconst FormRepeater = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Form Repeater' breadCrumbParent='Form' breadCrumbActive='Form Repeater' />\n      <Row>\n        <Col sm={12}>\n          <RepeatingForm />\n        </Col>\n        <Col sm={12}>\n          <RepeatingFormAnimated />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default FormRepeater\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Trang chủ</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}